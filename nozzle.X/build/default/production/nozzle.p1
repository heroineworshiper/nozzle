Version 3.2 HI-TECH Software Intermediate Code
"124 nozzle.c
[s S95 `uc 1 `uc 1 `c 1 `c 1 ]
[n S95 . analog ns step position ]
"137
[s S96 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `c 1 `c 1 `c 1 `uc 1 `uc 1 ]
[n S96 . boundary encoder dec_mask inc_mask total_unmask total_mask timer target_position min max changed brake ]
"176
[s S97 `*Ci 1 `Cuc 1 `Cuc 1 ]
[n S97 . data size value ]
"536 /opt/microchip/xc8/v1.45/include/pic16f877a.h
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"535
[u S20 `S21 1 ]
[n S20 . . ]
"547
[v _PIR1bits `VS20 ~T0 @X0 0 e@12 ]
"1057
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
[v F1262 `(v ~T0 @X0 0 tf ]
"421 nozzle.c
[v _motor_idle `(v ~T0 @X0 0 ef ]
"422
[v _motor_home1 `(v ~T0 @X0 0 ef ]
"344 /opt/microchip/xc8/v1.45/include/pic16f877a.h
[s S12 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S12 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"343
[u S11 `S12 1 ]
[n S11 . . ]
"355
[v _PORTDbits `VS11 ~T0 @X0 0 e@8 ]
"338
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"458
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF TMR0IF RBIE INTE TMR0IE PEIE GIE ]
"468
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . T0IF . T0IE ]
"457
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"475
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"1259
[s S51 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S51 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1267
[s S52 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S52 . PS0 PS1 PS2 ]
"1258
[u S50 `S51 1 `S52 1 ]
[n S50 . . . ]
"1273
[v _OPTION_REGbits `VS50 ~T0 @X0 0 e@129 ]
"728
[v _TMR2 `Vuc ~T0 @X0 0 e@17 ]
[v F1325 `(v ~T0 @X0 0 tf ]
"916 nozzle.c
[v _charge_adc `(v ~T0 @X0 0 ef ]
"1150 /opt/microchip/xc8/v1.45/include/pic16f877a.h
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"1157
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"57
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"1163
[s S46 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :2 `uc 1 ]
[n S46 . ADON . GO_nDONE CHS ADCS ]
"1170
[s S47 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S47 . . GO CHS0 CHS1 CHS2 ADCS0 ADCS1 ]
"1179
[s S48 :2 `uc 1 :1 `uc 1 ]
[n S48 . . nDONE ]
"1183
[s S49 :2 `uc 1 :1 `uc 1 ]
[n S49 . . GO_DONE ]
"1162
[u S45 `S46 1 `S47 1 `S48 1 `S49 1 ]
[n S45 . . . . . ]
"1188
[v _ADCON0bits `VS45 ~T0 @X0 0 e@31 ]
"632
[v _TMR1 `Vus ~T0 @X0 0 e@14 ]
"1064
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
[p mainexit ]
"1503
[s S60 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S60 . TRISD0 TRISD1 TRISD2 TRISD3 TRISD4 TRISD5 TRISD6 TRISD7 ]
"1502
[u S59 `S60 1 ]
[n S59 . . ]
"1514
[v _TRISDbits `VS59 ~T0 @X0 0 e@136 ]
"1497
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"2078
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"1997
[v _TXSTA `Vuc ~T0 @X0 0 e@152 ]
"962
[v _RCSTA `Vuc ~T0 @X0 0 e@24 ]
"1622
[s S64 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S64 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"1621
[u S63 `S64 1 ]
[n S63 . . ]
"1633
[v _PIE1bits `VS63 ~T0 @X0 0 e@140 ]
"735
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"1814
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"653
[v _T1CON `Vuc ~T0 @X0 0 e@16 ]
"16 /opt/microchip/xc8/v1.45/include/string.h
[v _memset `(*v ~T0 @X0 0 ef3`*v`i`ui ]
"2227 /opt/microchip/xc8/v1.45/include/pic16f877a.h
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"31 nozzle.c
[p x FOSC=HS ]
"32
[p x WDTE=ON ]
"33
[p x PWRTE=OFF ]
"34
[p x BOREN=ON ]
"35
[p x LVP=OFF ]
"36
[p x CPD=OFF ]
"37
[p x WRT=OFF ]
"38
[p x CP=OFF ]
[; ;pic16f877a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 /opt/microchip/xc8/v1.45/include/pic16f877a.h
[; ;pic16f877a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f877a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f877a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f877a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877a.h: 76: typedef union {
[; ;pic16f877a.h: 77: struct {
[; ;pic16f877a.h: 78: unsigned C :1;
[; ;pic16f877a.h: 79: unsigned DC :1;
[; ;pic16f877a.h: 80: unsigned Z :1;
[; ;pic16f877a.h: 81: unsigned nPD :1;
[; ;pic16f877a.h: 82: unsigned nTO :1;
[; ;pic16f877a.h: 83: unsigned RP :2;
[; ;pic16f877a.h: 84: unsigned IRP :1;
[; ;pic16f877a.h: 85: };
[; ;pic16f877a.h: 86: struct {
[; ;pic16f877a.h: 87: unsigned :5;
[; ;pic16f877a.h: 88: unsigned RP0 :1;
[; ;pic16f877a.h: 89: unsigned RP1 :1;
[; ;pic16f877a.h: 90: };
[; ;pic16f877a.h: 91: struct {
[; ;pic16f877a.h: 92: unsigned CARRY :1;
[; ;pic16f877a.h: 93: unsigned :1;
[; ;pic16f877a.h: 94: unsigned ZERO :1;
[; ;pic16f877a.h: 95: };
[; ;pic16f877a.h: 96: } STATUSbits_t;
[; ;pic16f877a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f877a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f877a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877a.h: 169: typedef union {
[; ;pic16f877a.h: 170: struct {
[; ;pic16f877a.h: 171: unsigned RA0 :1;
[; ;pic16f877a.h: 172: unsigned RA1 :1;
[; ;pic16f877a.h: 173: unsigned RA2 :1;
[; ;pic16f877a.h: 174: unsigned RA3 :1;
[; ;pic16f877a.h: 175: unsigned RA4 :1;
[; ;pic16f877a.h: 176: unsigned RA5 :1;
[; ;pic16f877a.h: 177: };
[; ;pic16f877a.h: 178: } PORTAbits_t;
[; ;pic16f877a.h: 179: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877a.h: 214: extern volatile unsigned char PORTB @ 0x006;
"216
[; ;pic16f877a.h: 216: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877a.h: 219: typedef union {
[; ;pic16f877a.h: 220: struct {
[; ;pic16f877a.h: 221: unsigned RB0 :1;
[; ;pic16f877a.h: 222: unsigned RB1 :1;
[; ;pic16f877a.h: 223: unsigned RB2 :1;
[; ;pic16f877a.h: 224: unsigned RB3 :1;
[; ;pic16f877a.h: 225: unsigned RB4 :1;
[; ;pic16f877a.h: 226: unsigned RB5 :1;
[; ;pic16f877a.h: 227: unsigned RB6 :1;
[; ;pic16f877a.h: 228: unsigned RB7 :1;
[; ;pic16f877a.h: 229: };
[; ;pic16f877a.h: 230: } PORTBbits_t;
[; ;pic16f877a.h: 231: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877a.h: 276: extern volatile unsigned char PORTC @ 0x007;
"278
[; ;pic16f877a.h: 278: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877a.h: 281: typedef union {
[; ;pic16f877a.h: 282: struct {
[; ;pic16f877a.h: 283: unsigned RC0 :1;
[; ;pic16f877a.h: 284: unsigned RC1 :1;
[; ;pic16f877a.h: 285: unsigned RC2 :1;
[; ;pic16f877a.h: 286: unsigned RC3 :1;
[; ;pic16f877a.h: 287: unsigned RC4 :1;
[; ;pic16f877a.h: 288: unsigned RC5 :1;
[; ;pic16f877a.h: 289: unsigned RC6 :1;
[; ;pic16f877a.h: 290: unsigned RC7 :1;
[; ;pic16f877a.h: 291: };
[; ;pic16f877a.h: 292: } PORTCbits_t;
[; ;pic16f877a.h: 293: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877a.h: 338: extern volatile unsigned char PORTD @ 0x008;
"340
[; ;pic16f877a.h: 340: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877a.h: 343: typedef union {
[; ;pic16f877a.h: 344: struct {
[; ;pic16f877a.h: 345: unsigned RD0 :1;
[; ;pic16f877a.h: 346: unsigned RD1 :1;
[; ;pic16f877a.h: 347: unsigned RD2 :1;
[; ;pic16f877a.h: 348: unsigned RD3 :1;
[; ;pic16f877a.h: 349: unsigned RD4 :1;
[; ;pic16f877a.h: 350: unsigned RD5 :1;
[; ;pic16f877a.h: 351: unsigned RD6 :1;
[; ;pic16f877a.h: 352: unsigned RD7 :1;
[; ;pic16f877a.h: 353: };
[; ;pic16f877a.h: 354: } PORTDbits_t;
[; ;pic16f877a.h: 355: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877a.h: 400: extern volatile unsigned char PORTE @ 0x009;
"402
[; ;pic16f877a.h: 402: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877a.h: 405: typedef union {
[; ;pic16f877a.h: 406: struct {
[; ;pic16f877a.h: 407: unsigned RE0 :1;
[; ;pic16f877a.h: 408: unsigned RE1 :1;
[; ;pic16f877a.h: 409: unsigned RE2 :1;
[; ;pic16f877a.h: 410: };
[; ;pic16f877a.h: 411: } PORTEbits_t;
[; ;pic16f877a.h: 412: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877a.h: 432: extern volatile unsigned char PCLATH @ 0x00A;
"434
[; ;pic16f877a.h: 434: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877a.h: 437: typedef union {
[; ;pic16f877a.h: 438: struct {
[; ;pic16f877a.h: 439: unsigned PCLATH :5;
[; ;pic16f877a.h: 440: };
[; ;pic16f877a.h: 441: } PCLATHbits_t;
[; ;pic16f877a.h: 442: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 452: extern volatile unsigned char INTCON @ 0x00B;
"454
[; ;pic16f877a.h: 454: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877a.h: 457: typedef union {
[; ;pic16f877a.h: 458: struct {
[; ;pic16f877a.h: 459: unsigned RBIF :1;
[; ;pic16f877a.h: 460: unsigned INTF :1;
[; ;pic16f877a.h: 461: unsigned TMR0IF :1;
[; ;pic16f877a.h: 462: unsigned RBIE :1;
[; ;pic16f877a.h: 463: unsigned INTE :1;
[; ;pic16f877a.h: 464: unsigned TMR0IE :1;
[; ;pic16f877a.h: 465: unsigned PEIE :1;
[; ;pic16f877a.h: 466: unsigned GIE :1;
[; ;pic16f877a.h: 467: };
[; ;pic16f877a.h: 468: struct {
[; ;pic16f877a.h: 469: unsigned :2;
[; ;pic16f877a.h: 470: unsigned T0IF :1;
[; ;pic16f877a.h: 471: unsigned :2;
[; ;pic16f877a.h: 472: unsigned T0IE :1;
[; ;pic16f877a.h: 473: };
[; ;pic16f877a.h: 474: } INTCONbits_t;
[; ;pic16f877a.h: 475: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877a.h: 530: extern volatile unsigned char PIR1 @ 0x00C;
"532
[; ;pic16f877a.h: 532: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877a.h: 535: typedef union {
[; ;pic16f877a.h: 536: struct {
[; ;pic16f877a.h: 537: unsigned TMR1IF :1;
[; ;pic16f877a.h: 538: unsigned TMR2IF :1;
[; ;pic16f877a.h: 539: unsigned CCP1IF :1;
[; ;pic16f877a.h: 540: unsigned SSPIF :1;
[; ;pic16f877a.h: 541: unsigned TXIF :1;
[; ;pic16f877a.h: 542: unsigned RCIF :1;
[; ;pic16f877a.h: 543: unsigned ADIF :1;
[; ;pic16f877a.h: 544: unsigned PSPIF :1;
[; ;pic16f877a.h: 545: };
[; ;pic16f877a.h: 546: } PIR1bits_t;
[; ;pic16f877a.h: 547: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877a.h: 592: extern volatile unsigned char PIR2 @ 0x00D;
"594
[; ;pic16f877a.h: 594: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877a.h: 597: typedef union {
[; ;pic16f877a.h: 598: struct {
[; ;pic16f877a.h: 599: unsigned CCP2IF :1;
[; ;pic16f877a.h: 600: unsigned :2;
[; ;pic16f877a.h: 601: unsigned BCLIF :1;
[; ;pic16f877a.h: 602: unsigned EEIF :1;
[; ;pic16f877a.h: 603: unsigned :1;
[; ;pic16f877a.h: 604: unsigned CMIF :1;
[; ;pic16f877a.h: 605: };
[; ;pic16f877a.h: 606: } PIR2bits_t;
[; ;pic16f877a.h: 607: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877a.h: 632: extern volatile unsigned short TMR1 @ 0x00E;
"634
[; ;pic16f877a.h: 634: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877a.h: 639: extern volatile unsigned char TMR1L @ 0x00E;
"641
[; ;pic16f877a.h: 641: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877a.h: 646: extern volatile unsigned char TMR1H @ 0x00F;
"648
[; ;pic16f877a.h: 648: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877a.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16f877a.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877a.h: 658: typedef union {
[; ;pic16f877a.h: 659: struct {
[; ;pic16f877a.h: 660: unsigned TMR1ON :1;
[; ;pic16f877a.h: 661: unsigned TMR1CS :1;
[; ;pic16f877a.h: 662: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 663: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 664: unsigned T1CKPS :2;
[; ;pic16f877a.h: 665: };
[; ;pic16f877a.h: 666: struct {
[; ;pic16f877a.h: 667: unsigned :2;
[; ;pic16f877a.h: 668: unsigned T1SYNC :1;
[; ;pic16f877a.h: 669: unsigned :1;
[; ;pic16f877a.h: 670: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 671: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 672: };
[; ;pic16f877a.h: 673: struct {
[; ;pic16f877a.h: 674: unsigned :2;
[; ;pic16f877a.h: 675: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 676: };
[; ;pic16f877a.h: 677: } T1CONbits_t;
[; ;pic16f877a.h: 678: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877a.h: 728: extern volatile unsigned char TMR2 @ 0x011;
"730
[; ;pic16f877a.h: 730: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877a.h: 735: extern volatile unsigned char T2CON @ 0x012;
"737
[; ;pic16f877a.h: 737: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877a.h: 740: typedef union {
[; ;pic16f877a.h: 741: struct {
[; ;pic16f877a.h: 742: unsigned T2CKPS :2;
[; ;pic16f877a.h: 743: unsigned TMR2ON :1;
[; ;pic16f877a.h: 744: unsigned TOUTPS :4;
[; ;pic16f877a.h: 745: };
[; ;pic16f877a.h: 746: struct {
[; ;pic16f877a.h: 747: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 748: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 749: unsigned :1;
[; ;pic16f877a.h: 750: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 751: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 752: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 753: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 754: };
[; ;pic16f877a.h: 755: } T2CONbits_t;
[; ;pic16f877a.h: 756: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877a.h: 806: extern volatile unsigned char SSPBUF @ 0x013;
"808
[; ;pic16f877a.h: 808: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877a.h: 813: extern volatile unsigned char SSPCON @ 0x014;
"815
[; ;pic16f877a.h: 815: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877a.h: 818: typedef union {
[; ;pic16f877a.h: 819: struct {
[; ;pic16f877a.h: 820: unsigned SSPM :4;
[; ;pic16f877a.h: 821: unsigned CKP :1;
[; ;pic16f877a.h: 822: unsigned SSPEN :1;
[; ;pic16f877a.h: 823: unsigned SSPOV :1;
[; ;pic16f877a.h: 824: unsigned WCOL :1;
[; ;pic16f877a.h: 825: };
[; ;pic16f877a.h: 826: struct {
[; ;pic16f877a.h: 827: unsigned SSPM0 :1;
[; ;pic16f877a.h: 828: unsigned SSPM1 :1;
[; ;pic16f877a.h: 829: unsigned SSPM2 :1;
[; ;pic16f877a.h: 830: unsigned SSPM3 :1;
[; ;pic16f877a.h: 831: };
[; ;pic16f877a.h: 832: } SSPCONbits_t;
[; ;pic16f877a.h: 833: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877a.h: 883: extern volatile unsigned short CCPR1 @ 0x015;
"885
[; ;pic16f877a.h: 885: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877a.h: 890: extern volatile unsigned char CCPR1L @ 0x015;
"892
[; ;pic16f877a.h: 892: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877a.h: 897: extern volatile unsigned char CCPR1H @ 0x016;
"899
[; ;pic16f877a.h: 899: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877a.h: 904: extern volatile unsigned char CCP1CON @ 0x017;
"906
[; ;pic16f877a.h: 906: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877a.h: 909: typedef union {
[; ;pic16f877a.h: 910: struct {
[; ;pic16f877a.h: 911: unsigned CCP1M :4;
[; ;pic16f877a.h: 912: unsigned CCP1Y :1;
[; ;pic16f877a.h: 913: unsigned CCP1X :1;
[; ;pic16f877a.h: 914: };
[; ;pic16f877a.h: 915: struct {
[; ;pic16f877a.h: 916: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 917: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 918: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 919: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 920: };
[; ;pic16f877a.h: 921: } CCP1CONbits_t;
[; ;pic16f877a.h: 922: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 962: extern volatile unsigned char RCSTA @ 0x018;
"964
[; ;pic16f877a.h: 964: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877a.h: 967: typedef union {
[; ;pic16f877a.h: 968: struct {
[; ;pic16f877a.h: 969: unsigned RX9D :1;
[; ;pic16f877a.h: 970: unsigned OERR :1;
[; ;pic16f877a.h: 971: unsigned FERR :1;
[; ;pic16f877a.h: 972: unsigned ADDEN :1;
[; ;pic16f877a.h: 973: unsigned CREN :1;
[; ;pic16f877a.h: 974: unsigned SREN :1;
[; ;pic16f877a.h: 975: unsigned RX9 :1;
[; ;pic16f877a.h: 976: unsigned SPEN :1;
[; ;pic16f877a.h: 977: };
[; ;pic16f877a.h: 978: struct {
[; ;pic16f877a.h: 979: unsigned RCD8 :1;
[; ;pic16f877a.h: 980: unsigned :5;
[; ;pic16f877a.h: 981: unsigned RC9 :1;
[; ;pic16f877a.h: 982: };
[; ;pic16f877a.h: 983: struct {
[; ;pic16f877a.h: 984: unsigned :6;
[; ;pic16f877a.h: 985: unsigned nRC8 :1;
[; ;pic16f877a.h: 986: };
[; ;pic16f877a.h: 987: struct {
[; ;pic16f877a.h: 988: unsigned :6;
[; ;pic16f877a.h: 989: unsigned RC8_9 :1;
[; ;pic16f877a.h: 990: };
[; ;pic16f877a.h: 991: } RCSTAbits_t;
[; ;pic16f877a.h: 992: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877a.h: 1057: extern volatile unsigned char TXREG @ 0x019;
"1059
[; ;pic16f877a.h: 1059: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877a.h: 1064: extern volatile unsigned char RCREG @ 0x01A;
"1066
[; ;pic16f877a.h: 1066: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877a.h: 1071: extern volatile unsigned short CCPR2 @ 0x01B;
"1073
[; ;pic16f877a.h: 1073: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877a.h: 1078: extern volatile unsigned char CCPR2L @ 0x01B;
"1080
[; ;pic16f877a.h: 1080: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877a.h: 1085: extern volatile unsigned char CCPR2H @ 0x01C;
"1087
[; ;pic16f877a.h: 1087: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877a.h: 1092: extern volatile unsigned char CCP2CON @ 0x01D;
"1094
[; ;pic16f877a.h: 1094: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877a.h: 1097: typedef union {
[; ;pic16f877a.h: 1098: struct {
[; ;pic16f877a.h: 1099: unsigned CCP2M :4;
[; ;pic16f877a.h: 1100: unsigned CCP2Y :1;
[; ;pic16f877a.h: 1101: unsigned CCP2X :1;
[; ;pic16f877a.h: 1102: };
[; ;pic16f877a.h: 1103: struct {
[; ;pic16f877a.h: 1104: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 1105: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 1106: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 1107: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 1108: };
[; ;pic16f877a.h: 1109: } CCP2CONbits_t;
[; ;pic16f877a.h: 1110: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 1150: extern volatile unsigned char ADRESH @ 0x01E;
"1152
[; ;pic16f877a.h: 1152: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877a.h: 1157: extern volatile unsigned char ADCON0 @ 0x01F;
"1159
[; ;pic16f877a.h: 1159: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877a.h: 1162: typedef union {
[; ;pic16f877a.h: 1163: struct {
[; ;pic16f877a.h: 1164: unsigned ADON :1;
[; ;pic16f877a.h: 1165: unsigned :1;
[; ;pic16f877a.h: 1166: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 1167: unsigned CHS :3;
[; ;pic16f877a.h: 1168: unsigned ADCS :2;
[; ;pic16f877a.h: 1169: };
[; ;pic16f877a.h: 1170: struct {
[; ;pic16f877a.h: 1171: unsigned :2;
[; ;pic16f877a.h: 1172: unsigned GO :1;
[; ;pic16f877a.h: 1173: unsigned CHS0 :1;
[; ;pic16f877a.h: 1174: unsigned CHS1 :1;
[; ;pic16f877a.h: 1175: unsigned CHS2 :1;
[; ;pic16f877a.h: 1176: unsigned ADCS0 :1;
[; ;pic16f877a.h: 1177: unsigned ADCS1 :1;
[; ;pic16f877a.h: 1178: };
[; ;pic16f877a.h: 1179: struct {
[; ;pic16f877a.h: 1180: unsigned :2;
[; ;pic16f877a.h: 1181: unsigned nDONE :1;
[; ;pic16f877a.h: 1182: };
[; ;pic16f877a.h: 1183: struct {
[; ;pic16f877a.h: 1184: unsigned :2;
[; ;pic16f877a.h: 1185: unsigned GO_DONE :1;
[; ;pic16f877a.h: 1186: };
[; ;pic16f877a.h: 1187: } ADCON0bits_t;
[; ;pic16f877a.h: 1188: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 1253: extern volatile unsigned char OPTION_REG @ 0x081;
"1255
[; ;pic16f877a.h: 1255: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877a.h: 1258: typedef union {
[; ;pic16f877a.h: 1259: struct {
[; ;pic16f877a.h: 1260: unsigned PS :3;
[; ;pic16f877a.h: 1261: unsigned PSA :1;
[; ;pic16f877a.h: 1262: unsigned T0SE :1;
[; ;pic16f877a.h: 1263: unsigned T0CS :1;
[; ;pic16f877a.h: 1264: unsigned INTEDG :1;
[; ;pic16f877a.h: 1265: unsigned nRBPU :1;
[; ;pic16f877a.h: 1266: };
[; ;pic16f877a.h: 1267: struct {
[; ;pic16f877a.h: 1268: unsigned PS0 :1;
[; ;pic16f877a.h: 1269: unsigned PS1 :1;
[; ;pic16f877a.h: 1270: unsigned PS2 :1;
[; ;pic16f877a.h: 1271: };
[; ;pic16f877a.h: 1272: } OPTION_REGbits_t;
[; ;pic16f877a.h: 1273: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 1323: extern volatile unsigned char TRISA @ 0x085;
"1325
[; ;pic16f877a.h: 1325: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877a.h: 1328: typedef union {
[; ;pic16f877a.h: 1329: struct {
[; ;pic16f877a.h: 1330: unsigned TRISA0 :1;
[; ;pic16f877a.h: 1331: unsigned TRISA1 :1;
[; ;pic16f877a.h: 1332: unsigned TRISA2 :1;
[; ;pic16f877a.h: 1333: unsigned TRISA3 :1;
[; ;pic16f877a.h: 1334: unsigned TRISA4 :1;
[; ;pic16f877a.h: 1335: unsigned TRISA5 :1;
[; ;pic16f877a.h: 1336: };
[; ;pic16f877a.h: 1337: } TRISAbits_t;
[; ;pic16f877a.h: 1338: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877a.h: 1373: extern volatile unsigned char TRISB @ 0x086;
"1375
[; ;pic16f877a.h: 1375: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877a.h: 1378: typedef union {
[; ;pic16f877a.h: 1379: struct {
[; ;pic16f877a.h: 1380: unsigned TRISB0 :1;
[; ;pic16f877a.h: 1381: unsigned TRISB1 :1;
[; ;pic16f877a.h: 1382: unsigned TRISB2 :1;
[; ;pic16f877a.h: 1383: unsigned TRISB3 :1;
[; ;pic16f877a.h: 1384: unsigned TRISB4 :1;
[; ;pic16f877a.h: 1385: unsigned TRISB5 :1;
[; ;pic16f877a.h: 1386: unsigned TRISB6 :1;
[; ;pic16f877a.h: 1387: unsigned TRISB7 :1;
[; ;pic16f877a.h: 1388: };
[; ;pic16f877a.h: 1389: } TRISBbits_t;
[; ;pic16f877a.h: 1390: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877a.h: 1435: extern volatile unsigned char TRISC @ 0x087;
"1437
[; ;pic16f877a.h: 1437: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877a.h: 1440: typedef union {
[; ;pic16f877a.h: 1441: struct {
[; ;pic16f877a.h: 1442: unsigned TRISC0 :1;
[; ;pic16f877a.h: 1443: unsigned TRISC1 :1;
[; ;pic16f877a.h: 1444: unsigned TRISC2 :1;
[; ;pic16f877a.h: 1445: unsigned TRISC3 :1;
[; ;pic16f877a.h: 1446: unsigned TRISC4 :1;
[; ;pic16f877a.h: 1447: unsigned TRISC5 :1;
[; ;pic16f877a.h: 1448: unsigned TRISC6 :1;
[; ;pic16f877a.h: 1449: unsigned TRISC7 :1;
[; ;pic16f877a.h: 1450: };
[; ;pic16f877a.h: 1451: } TRISCbits_t;
[; ;pic16f877a.h: 1452: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877a.h: 1497: extern volatile unsigned char TRISD @ 0x088;
"1499
[; ;pic16f877a.h: 1499: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877a.h: 1502: typedef union {
[; ;pic16f877a.h: 1503: struct {
[; ;pic16f877a.h: 1504: unsigned TRISD0 :1;
[; ;pic16f877a.h: 1505: unsigned TRISD1 :1;
[; ;pic16f877a.h: 1506: unsigned TRISD2 :1;
[; ;pic16f877a.h: 1507: unsigned TRISD3 :1;
[; ;pic16f877a.h: 1508: unsigned TRISD4 :1;
[; ;pic16f877a.h: 1509: unsigned TRISD5 :1;
[; ;pic16f877a.h: 1510: unsigned TRISD6 :1;
[; ;pic16f877a.h: 1511: unsigned TRISD7 :1;
[; ;pic16f877a.h: 1512: };
[; ;pic16f877a.h: 1513: } TRISDbits_t;
[; ;pic16f877a.h: 1514: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877a.h: 1559: extern volatile unsigned char TRISE @ 0x089;
"1561
[; ;pic16f877a.h: 1561: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877a.h: 1564: typedef union {
[; ;pic16f877a.h: 1565: struct {
[; ;pic16f877a.h: 1566: unsigned TRISE0 :1;
[; ;pic16f877a.h: 1567: unsigned TRISE1 :1;
[; ;pic16f877a.h: 1568: unsigned TRISE2 :1;
[; ;pic16f877a.h: 1569: unsigned :1;
[; ;pic16f877a.h: 1570: unsigned PSPMODE :1;
[; ;pic16f877a.h: 1571: unsigned IBOV :1;
[; ;pic16f877a.h: 1572: unsigned OBF :1;
[; ;pic16f877a.h: 1573: unsigned IBF :1;
[; ;pic16f877a.h: 1574: };
[; ;pic16f877a.h: 1575: } TRISEbits_t;
[; ;pic16f877a.h: 1576: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877a.h: 1616: extern volatile unsigned char PIE1 @ 0x08C;
"1618
[; ;pic16f877a.h: 1618: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877a.h: 1621: typedef union {
[; ;pic16f877a.h: 1622: struct {
[; ;pic16f877a.h: 1623: unsigned TMR1IE :1;
[; ;pic16f877a.h: 1624: unsigned TMR2IE :1;
[; ;pic16f877a.h: 1625: unsigned CCP1IE :1;
[; ;pic16f877a.h: 1626: unsigned SSPIE :1;
[; ;pic16f877a.h: 1627: unsigned TXIE :1;
[; ;pic16f877a.h: 1628: unsigned RCIE :1;
[; ;pic16f877a.h: 1629: unsigned ADIE :1;
[; ;pic16f877a.h: 1630: unsigned PSPIE :1;
[; ;pic16f877a.h: 1631: };
[; ;pic16f877a.h: 1632: } PIE1bits_t;
[; ;pic16f877a.h: 1633: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877a.h: 1678: extern volatile unsigned char PIE2 @ 0x08D;
"1680
[; ;pic16f877a.h: 1680: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877a.h: 1683: typedef union {
[; ;pic16f877a.h: 1684: struct {
[; ;pic16f877a.h: 1685: unsigned CCP2IE :1;
[; ;pic16f877a.h: 1686: unsigned :2;
[; ;pic16f877a.h: 1687: unsigned BCLIE :1;
[; ;pic16f877a.h: 1688: unsigned EEIE :1;
[; ;pic16f877a.h: 1689: unsigned :1;
[; ;pic16f877a.h: 1690: unsigned CMIE :1;
[; ;pic16f877a.h: 1691: };
[; ;pic16f877a.h: 1692: } PIE2bits_t;
[; ;pic16f877a.h: 1693: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877a.h: 1718: extern volatile unsigned char PCON @ 0x08E;
"1720
[; ;pic16f877a.h: 1720: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877a.h: 1723: typedef union {
[; ;pic16f877a.h: 1724: struct {
[; ;pic16f877a.h: 1725: unsigned nBOR :1;
[; ;pic16f877a.h: 1726: unsigned nPOR :1;
[; ;pic16f877a.h: 1727: };
[; ;pic16f877a.h: 1728: struct {
[; ;pic16f877a.h: 1729: unsigned nBO :1;
[; ;pic16f877a.h: 1730: };
[; ;pic16f877a.h: 1731: } PCONbits_t;
[; ;pic16f877a.h: 1732: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877a.h: 1752: extern volatile unsigned char SSPCON2 @ 0x091;
"1754
[; ;pic16f877a.h: 1754: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877a.h: 1757: typedef union {
[; ;pic16f877a.h: 1758: struct {
[; ;pic16f877a.h: 1759: unsigned SEN :1;
[; ;pic16f877a.h: 1760: unsigned RSEN :1;
[; ;pic16f877a.h: 1761: unsigned PEN :1;
[; ;pic16f877a.h: 1762: unsigned RCEN :1;
[; ;pic16f877a.h: 1763: unsigned ACKEN :1;
[; ;pic16f877a.h: 1764: unsigned ACKDT :1;
[; ;pic16f877a.h: 1765: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 1766: unsigned GCEN :1;
[; ;pic16f877a.h: 1767: };
[; ;pic16f877a.h: 1768: } SSPCON2bits_t;
[; ;pic16f877a.h: 1769: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 1814: extern volatile unsigned char PR2 @ 0x092;
"1816
[; ;pic16f877a.h: 1816: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877a.h: 1821: extern volatile unsigned char SSPADD @ 0x093;
"1823
[; ;pic16f877a.h: 1823: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877a.h: 1828: extern volatile unsigned char SSPSTAT @ 0x094;
"1830
[; ;pic16f877a.h: 1830: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877a.h: 1833: typedef union {
[; ;pic16f877a.h: 1834: struct {
[; ;pic16f877a.h: 1835: unsigned BF :1;
[; ;pic16f877a.h: 1836: unsigned UA :1;
[; ;pic16f877a.h: 1837: unsigned R_nW :1;
[; ;pic16f877a.h: 1838: unsigned S :1;
[; ;pic16f877a.h: 1839: unsigned P :1;
[; ;pic16f877a.h: 1840: unsigned D_nA :1;
[; ;pic16f877a.h: 1841: unsigned CKE :1;
[; ;pic16f877a.h: 1842: unsigned SMP :1;
[; ;pic16f877a.h: 1843: };
[; ;pic16f877a.h: 1844: struct {
[; ;pic16f877a.h: 1845: unsigned :2;
[; ;pic16f877a.h: 1846: unsigned R :1;
[; ;pic16f877a.h: 1847: unsigned :2;
[; ;pic16f877a.h: 1848: unsigned D :1;
[; ;pic16f877a.h: 1849: };
[; ;pic16f877a.h: 1850: struct {
[; ;pic16f877a.h: 1851: unsigned :2;
[; ;pic16f877a.h: 1852: unsigned I2C_READ :1;
[; ;pic16f877a.h: 1853: unsigned I2C_START :1;
[; ;pic16f877a.h: 1854: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 1855: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 1856: };
[; ;pic16f877a.h: 1857: struct {
[; ;pic16f877a.h: 1858: unsigned :2;
[; ;pic16f877a.h: 1859: unsigned nW :1;
[; ;pic16f877a.h: 1860: unsigned :2;
[; ;pic16f877a.h: 1861: unsigned nA :1;
[; ;pic16f877a.h: 1862: };
[; ;pic16f877a.h: 1863: struct {
[; ;pic16f877a.h: 1864: unsigned :2;
[; ;pic16f877a.h: 1865: unsigned nWRITE :1;
[; ;pic16f877a.h: 1866: unsigned :2;
[; ;pic16f877a.h: 1867: unsigned nADDRESS :1;
[; ;pic16f877a.h: 1868: };
[; ;pic16f877a.h: 1869: struct {
[; ;pic16f877a.h: 1870: unsigned :2;
[; ;pic16f877a.h: 1871: unsigned R_W :1;
[; ;pic16f877a.h: 1872: unsigned :2;
[; ;pic16f877a.h: 1873: unsigned D_A :1;
[; ;pic16f877a.h: 1874: };
[; ;pic16f877a.h: 1875: struct {
[; ;pic16f877a.h: 1876: unsigned :2;
[; ;pic16f877a.h: 1877: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 1878: unsigned :2;
[; ;pic16f877a.h: 1879: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 1880: };
[; ;pic16f877a.h: 1881: } SSPSTATbits_t;
[; ;pic16f877a.h: 1882: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 1997: extern volatile unsigned char TXSTA @ 0x098;
"1999
[; ;pic16f877a.h: 1999: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877a.h: 2002: typedef union {
[; ;pic16f877a.h: 2003: struct {
[; ;pic16f877a.h: 2004: unsigned TX9D :1;
[; ;pic16f877a.h: 2005: unsigned TRMT :1;
[; ;pic16f877a.h: 2006: unsigned BRGH :1;
[; ;pic16f877a.h: 2007: unsigned :1;
[; ;pic16f877a.h: 2008: unsigned SYNC :1;
[; ;pic16f877a.h: 2009: unsigned TXEN :1;
[; ;pic16f877a.h: 2010: unsigned TX9 :1;
[; ;pic16f877a.h: 2011: unsigned CSRC :1;
[; ;pic16f877a.h: 2012: };
[; ;pic16f877a.h: 2013: struct {
[; ;pic16f877a.h: 2014: unsigned TXD8 :1;
[; ;pic16f877a.h: 2015: unsigned :5;
[; ;pic16f877a.h: 2016: unsigned nTX8 :1;
[; ;pic16f877a.h: 2017: };
[; ;pic16f877a.h: 2018: struct {
[; ;pic16f877a.h: 2019: unsigned :6;
[; ;pic16f877a.h: 2020: unsigned TX8_9 :1;
[; ;pic16f877a.h: 2021: };
[; ;pic16f877a.h: 2022: } TXSTAbits_t;
[; ;pic16f877a.h: 2023: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877a.h: 2078: extern volatile unsigned char SPBRG @ 0x099;
"2080
[; ;pic16f877a.h: 2080: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877a.h: 2085: extern volatile unsigned char CMCON @ 0x09C;
"2087
[; ;pic16f877a.h: 2087: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f877a.h: 2090: typedef union {
[; ;pic16f877a.h: 2091: struct {
[; ;pic16f877a.h: 2092: unsigned CM :3;
[; ;pic16f877a.h: 2093: unsigned CIS :1;
[; ;pic16f877a.h: 2094: unsigned C1INV :1;
[; ;pic16f877a.h: 2095: unsigned C2INV :1;
[; ;pic16f877a.h: 2096: unsigned C1OUT :1;
[; ;pic16f877a.h: 2097: unsigned C2OUT :1;
[; ;pic16f877a.h: 2098: };
[; ;pic16f877a.h: 2099: struct {
[; ;pic16f877a.h: 2100: unsigned CM0 :1;
[; ;pic16f877a.h: 2101: unsigned CM1 :1;
[; ;pic16f877a.h: 2102: unsigned CM2 :1;
[; ;pic16f877a.h: 2103: };
[; ;pic16f877a.h: 2104: } CMCONbits_t;
[; ;pic16f877a.h: 2105: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f877a.h: 2155: extern volatile unsigned char CVRCON @ 0x09D;
"2157
[; ;pic16f877a.h: 2157: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f877a.h: 2160: typedef union {
[; ;pic16f877a.h: 2161: struct {
[; ;pic16f877a.h: 2162: unsigned CVR :4;
[; ;pic16f877a.h: 2163: unsigned :1;
[; ;pic16f877a.h: 2164: unsigned CVRR :1;
[; ;pic16f877a.h: 2165: unsigned CVROE :1;
[; ;pic16f877a.h: 2166: unsigned CVREN :1;
[; ;pic16f877a.h: 2167: };
[; ;pic16f877a.h: 2168: struct {
[; ;pic16f877a.h: 2169: unsigned CVR0 :1;
[; ;pic16f877a.h: 2170: unsigned CVR1 :1;
[; ;pic16f877a.h: 2171: unsigned CVR2 :1;
[; ;pic16f877a.h: 2172: unsigned CVR3 :1;
[; ;pic16f877a.h: 2173: };
[; ;pic16f877a.h: 2174: } CVRCONbits_t;
[; ;pic16f877a.h: 2175: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 2220: extern volatile unsigned char ADRESL @ 0x09E;
"2222
[; ;pic16f877a.h: 2222: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877a.h: 2227: extern volatile unsigned char ADCON1 @ 0x09F;
"2229
[; ;pic16f877a.h: 2229: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877a.h: 2232: typedef union {
[; ;pic16f877a.h: 2233: struct {
[; ;pic16f877a.h: 2234: unsigned PCFG :4;
[; ;pic16f877a.h: 2235: unsigned :2;
[; ;pic16f877a.h: 2236: unsigned ADCS2 :1;
[; ;pic16f877a.h: 2237: unsigned ADFM :1;
[; ;pic16f877a.h: 2238: };
[; ;pic16f877a.h: 2239: struct {
[; ;pic16f877a.h: 2240: unsigned PCFG0 :1;
[; ;pic16f877a.h: 2241: unsigned PCFG1 :1;
[; ;pic16f877a.h: 2242: unsigned PCFG2 :1;
[; ;pic16f877a.h: 2243: unsigned PCFG3 :1;
[; ;pic16f877a.h: 2244: };
[; ;pic16f877a.h: 2245: } ADCON1bits_t;
[; ;pic16f877a.h: 2246: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 2286: extern volatile unsigned char EEDATA @ 0x10C;
"2288
[; ;pic16f877a.h: 2288: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877a.h: 2293: extern volatile unsigned char EEADR @ 0x10D;
"2295
[; ;pic16f877a.h: 2295: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877a.h: 2300: extern volatile unsigned char EEDATH @ 0x10E;
"2302
[; ;pic16f877a.h: 2302: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877a.h: 2307: extern volatile unsigned char EEADRH @ 0x10F;
"2309
[; ;pic16f877a.h: 2309: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877a.h: 2314: extern volatile unsigned char EECON1 @ 0x18C;
"2316
[; ;pic16f877a.h: 2316: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877a.h: 2319: typedef union {
[; ;pic16f877a.h: 2320: struct {
[; ;pic16f877a.h: 2321: unsigned RD :1;
[; ;pic16f877a.h: 2322: unsigned WR :1;
[; ;pic16f877a.h: 2323: unsigned WREN :1;
[; ;pic16f877a.h: 2324: unsigned WRERR :1;
[; ;pic16f877a.h: 2325: unsigned :3;
[; ;pic16f877a.h: 2326: unsigned EEPGD :1;
[; ;pic16f877a.h: 2327: };
[; ;pic16f877a.h: 2328: } EECON1bits_t;
[; ;pic16f877a.h: 2329: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877a.h: 2359: extern volatile unsigned char EECON2 @ 0x18D;
"2361
[; ;pic16f877a.h: 2361: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877a.h: 2371: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 2373: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 2375: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 2377: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 2379: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 2381: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 2383: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 2385: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 2387: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 2389: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 2391: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 2393: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 2395: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 2397: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 2399: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 2401: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 2403: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 2405: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 2407: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 2409: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 2411: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 2413: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 2415: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 2417: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 2419: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 2421: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 2423: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 2425: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 2427: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 2429: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 2431: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 2433: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 2435: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 2437: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 2439: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 2441: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 2443: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 2445: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 2447: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 2449: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 2451: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 2453: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 2455: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 2457: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 2459: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 2461: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 2463: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 2465: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 2467: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 2469: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 2471: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 2473: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 2475: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 2477: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 2479: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 2481: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 2483: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2485: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 2487: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2489: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2491: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 2493: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 2495: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 2497: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 2499: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 2501: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 2503: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2505: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2507: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2509: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2511: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2513: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 2515: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 2517: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 2519: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 2521: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 2523: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 2525: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 2527: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 2529: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 2531: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 2533: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 2535: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 2537: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 2539: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 2541: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 2543: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 2545: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 2547: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 2549: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 2551: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 2553: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 2555: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 2557: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 2559: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 2561: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 2563: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 2565: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 2567: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 2569: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 2571: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 2573: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 2575: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 2577: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 2579: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 2581: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 2583: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 2585: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 2587: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 2589: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 2591: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 2593: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 2595: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 2597: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 2599: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 2601: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 2603: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 2605: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 2607: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2609: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2611: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2613: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 2615: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 2617: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 2619: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 2621: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 2623: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 2625: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 2627: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 2629: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 2631: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 2633: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 2635: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 2637: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 2639: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 2641: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 2643: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2645: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 2647: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 2649: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 2651: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2653: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2655: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2657: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2659: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 2661: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 2663: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 2665: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 2667: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 2669: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 2671: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 2673: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 2675: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 2677: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 2679: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 2681: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 2683: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 2685: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 2687: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2689: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2691: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 2693: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 2695: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 2697: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2699: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 2701: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2703: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 2705: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 2707: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2709: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2711: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 2713: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 2715: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 2717: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 2719: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 2721: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 2723: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 2725: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 2727: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 2729: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 2731: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 2733: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 2735: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 2737: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 2739: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 2741: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 2743: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 2745: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 2747: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 2749: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 2751: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 2753: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 2755: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 2757: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 2759: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 2761: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 2763: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 2765: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 2767: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 2769: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 2771: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 2773: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 2775: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 2777: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 2779: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 2781: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 2783: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 2785: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 2787: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 2789: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 2791: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 2793: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 2795: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 2797: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 2799: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 2801: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2803: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2805: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2807: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2809: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 2811: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 2813: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 2815: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 2817: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 2819: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 2821: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 2823: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 2825: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 2827: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2829: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2831: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2833: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2835: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2837: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 2839: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 2841: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 2843: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2845: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2847: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 2849: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2851: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2853: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
"71 nozzle.c
[v _have_serial `uc ~T0 @X0 1 e ]
[i _have_serial
-> -> 0 `i `uc
]
[; ;nozzle.c: 71: uint8_t have_serial = 0;
"72
[v _serial_in `uc ~T0 @X0 1 e ]
[i _serial_in
-> -> 0 `i `uc
]
[; ;nozzle.c: 72: uint8_t serial_in = 0;
"75
[v _interrupt_done `uc ~T0 @X0 1 e ]
[i _interrupt_done
-> -> 0 `i `uc
]
[; ;nozzle.c: 75: uint8_t interrupt_done = 0;
"78
[v _uart_buffer `uc ~T0 @X0 -> 64 `i e ]
[; ;nozzle.c: 78: uint8_t uart_buffer[64];
"79
[v _uart_size `uc ~T0 @X0 1 e ]
[i _uart_size
-> -> 0 `i `uc
]
[; ;nozzle.c: 79: uint8_t uart_size = 0;
"80
[v _uart_position1 `uc ~T0 @X0 1 e ]
[i _uart_position1
-> -> 0 `i `uc
]
[; ;nozzle.c: 80: uint8_t uart_position1 = 0;
"81
[v _uart_position2 `uc ~T0 @X0 1 e ]
[i _uart_position2
-> -> 0 `i `uc
]
[; ;nozzle.c: 81: uint8_t uart_position2 = 0;
"84
[v _armed `uc ~T0 @X0 1 e ]
[i _armed
-> -> 0 `i `uc
]
[; ;nozzle.c: 84: uint8_t armed = 0;
"85
[v _led_counter `uc ~T0 @X0 1 e ]
[i _led_counter
-> -> 0 `i `uc
]
[; ;nozzle.c: 85: uint8_t led_counter = 0;
"91
[v _got_tick `uc ~T0 @X0 1 e ]
[i _got_tick
-> -> 0 `i `uc
]
[; ;nozzle.c: 91: uint8_t got_tick = 0;
"92
[v _tick `uc ~T0 @X0 1 e ]
[i _tick
-> -> 0 `i `uc
]
[; ;nozzle.c: 92: uint8_t tick = 0;
"95
[v _current_motor `uc ~T0 @X0 1 e ]
[i _current_motor
-> -> 0 `i `uc
]
[; ;nozzle.c: 95: uint8_t current_motor = 0;
"99
[v _motor_master `uc ~T0 @X0 1 e ]
[i _motor_master
-> -> 0 `i `uc
]
[; ;nozzle.c: 99: uint8_t motor_master = 0;
"105
[v _current_adc `uc ~T0 @X0 1 e ]
[i _current_adc
-> -> 0 `i `uc
]
[; ;nozzle.c: 105: uint8_t current_adc = 0;
[; ;nozzle.c: 123: typedef struct
[; ;nozzle.c: 124: {
[; ;nozzle.c: 126: uint8_t analog;
[; ;nozzle.c: 128: uint8_t ns;
[; ;nozzle.c: 130: int8_t step;
[; ;nozzle.c: 132: int8_t position;
[; ;nozzle.c: 133: } sensor_state_t;
"134
[v _sensors `S95 ~T0 @X0 -> 6 `i e ]
[; ;nozzle.c: 134: sensor_state_t sensors[6];
[; ;nozzle.c: 136: typedef struct
[; ;nozzle.c: 137: {
[; ;nozzle.c: 139: uint8_t boundary;
[; ;nozzle.c: 140: uint8_t encoder;
[; ;nozzle.c: 142: uint8_t dec_mask;
[; ;nozzle.c: 143: uint8_t inc_mask;
[; ;nozzle.c: 144: uint8_t total_unmask;
[; ;nozzle.c: 145: uint8_t total_mask;
[; ;nozzle.c: 148: uint8_t timer;
[; ;nozzle.c: 149: int8_t target_position;
[; ;nozzle.c: 151: int8_t min;
[; ;nozzle.c: 152: int8_t max;
[; ;nozzle.c: 154: uint8_t changed;
[; ;nozzle.c: 156: uint8_t brake;
[; ;nozzle.c: 157: } tracking_state_t;
"158
[v _tracking_state `S96 ~T0 @X0 -> 3 `i e ]
[; ;nozzle.c: 158: tracking_state_t tracking_state[3];
"161
[v _nozzle_step `uc ~T0 @X0 1 e ]
[i _nozzle_step
-> -> 0 `i `uc
]
[; ;nozzle.c: 161: uint8_t nozzle_step = 0;
"164
[v _radial_position `c ~T0 @X0 1 e ]
[i _radial_position
-> -> 0 `i `c
]
[; ;nozzle.c: 164: int8_t radial_position = 0;
"168
[v _step_to_encoders `c ~T0 @X0 + * -> 24 `i -> 3 `i -> 3 `i e ]
[; ;nozzle.c: 168: int8_t step_to_encoders[24 * 3 + 3];
[; ;nozzle.c: 175: typedef struct
[; ;nozzle.c: 176: {
[; ;nozzle.c: 177: const int16_t *data;
[; ;nozzle.c: 178: const uint8_t size;
[; ;nozzle.c: 179: const uint8_t value;
[; ;nozzle.c: 180: } ir_code_t;
"183
[v _up_data `Ci ~T0 @X0 -> 0 `x e ]
[i _up_data
:U ..
"185
-> 1840 `i
-> 972 `i
-> 116 `i
-> 111 `i
-> 120 `i
-> 347 `i
-> 121 `i
-> 115 `i
"186
-> 116 `i
-> 347 `i
-> 121 `i
-> 343 `i
-> 125 `i
-> 347 `i
-> 120 `i
-> 347 `i
"187
-> 120 `i
-> 111 `i
-> 119 `i
-> 347 `i
-> 121 `i
-> 115 `i
-> 116 `i
-> 351 `i
"188
-> 116 `i
-> 111 `i
-> 120 `i
-> 115 `i
-> 116 `i
-> 115 `i
-> 116 `i
-> 115 `i
"189
-> 117 `i
-> 350 `i
-> 116 `i
-> 115 `i
-> 116 `i
-> 111 `i
-> 120 `i
-> 116 `i
"190
-> 117 `i
-> 349 `i
-> 117 `i
-> 347 `i
-> 119 `i
-> 115 `i
-> 116 `i
-> 348 `i
"191
-> 119 `i
-> 115 `i
-> 116 `i
-> 349 `i
-> 118 `i
-> 348 `i
-> 119 `i
-> 351 `i
"192
-> 116 `i
-> 112 `i
-> 119 `i
-> 116 `i
-> 116 `i
-> 350 `i
-> 117 `i
-> 110 `i
"193
-> 120 `i
-> 342 `i
-> 126 `i
-> 8291 `i
-> 1844 `i
-> 454 `i
"194
-> 122 `i
..
]
[; ;nozzle.c: 183: const int16_t up_data[] =
[; ;nozzle.c: 184: {
[; ;nozzle.c: 185: 0x0730, 0x03cc, 0x0074, 0x006f, 0x0078, 0x015b, 0x0079, 0x0073,
[; ;nozzle.c: 186: 0x0074, 0x015b, 0x0079, 0x0157, 0x007d, 0x015b, 0x0078, 0x015b,
[; ;nozzle.c: 187: 0x0078, 0x006f, 0x0077, 0x015b, 0x0079, 0x0073, 0x0074, 0x015f,
[; ;nozzle.c: 188: 0x0074, 0x006f, 0x0078, 0x0073, 0x0074, 0x0073, 0x0074, 0x0073,
[; ;nozzle.c: 189: 0x0075, 0x015e, 0x0074, 0x0073, 0x0074, 0x006f, 0x0078, 0x0074,
[; ;nozzle.c: 190: 0x0075, 0x015d, 0x0075, 0x015b, 0x0077, 0x0073, 0x0074, 0x015c,
[; ;nozzle.c: 191: 0x0077, 0x0073, 0x0074, 0x015d, 0x0076, 0x015c, 0x0077, 0x015f,
[; ;nozzle.c: 192: 0x0074, 0x0070, 0x0077, 0x0074, 0x0074, 0x015e, 0x0075, 0x006e,
[; ;nozzle.c: 193: 0x0078, 0x0156, 0x007e, 0x2063, 0x0734, 0x01c6, 0x007a
[; ;nozzle.c: 194: };
"196
[v _down_data `Ci ~T0 @X0 -> 0 `x e ]
[i _down_data
:U ..
"198
-> 1847 `i
-> 963 `i
-> 121 `i
-> 110 `i
-> 121 `i
-> 341 `i
-> 126 `i
-> 113 `i
"199
-> 119 `i
-> 347 `i
-> 119 `i
-> 346 `i
-> 121 `i
-> 348 `i
-> 120 `i
-> 341 `i
"200
-> 126 `i
-> 106 `i
-> 125 `i
-> 351 `i
-> 117 `i
-> 106 `i
-> 125 `i
-> 346 `i
"201
-> 121 `i
-> 115 `i
-> 116 `i
-> 115 `i
-> 117 `i
-> 109 `i
-> 122 `i
-> 114 `i
"202
-> 117 `i
-> 347 `i
-> 119 `i
-> 342 `i
-> 125 `i
-> 106 `i
-> 125 `i
-> 108 `i
"203
-> 123 `i
-> 341 `i
-> 126 `i
-> 345 `i
-> 123 `i
-> 104 `i
-> 126 `i
-> 347 `i
"204
-> 120 `i
-> 112 `i
-> 119 `i
-> 110 `i
-> 121 `i
-> 343 `i
-> 124 `i
-> 348 `i
"205
-> 120 `i
-> 115 `i
-> 116 `i
-> 107 `i
-> 126 `i
-> 346 `i
-> 120 `i
-> 111 `i
"206
-> 119 `i
-> 348 `i
-> 120 `i
-> 8296 `i
-> 1840 `i
-> 449 `i
"207
-> 122 `i
..
]
[; ;nozzle.c: 196: const int16_t down_data[] =
[; ;nozzle.c: 197: {
[; ;nozzle.c: 198: 0x0737, 0x03c3, 0x0079, 0x006e, 0x0079, 0x0155, 0x007e, 0x0071,
[; ;nozzle.c: 199: 0x0077, 0x015b, 0x0077, 0x015a, 0x0079, 0x015c, 0x0078, 0x0155,
[; ;nozzle.c: 200: 0x007e, 0x006a, 0x007d, 0x015f, 0x0075, 0x006a, 0x007d, 0x015a,
[; ;nozzle.c: 201: 0x0079, 0x0073, 0x0074, 0x0073, 0x0075, 0x006d, 0x007a, 0x0072,
[; ;nozzle.c: 202: 0x0075, 0x015b, 0x0077, 0x0156, 0x007d, 0x006a, 0x007d, 0x006c,
[; ;nozzle.c: 203: 0x007b, 0x0155, 0x007e, 0x0159, 0x007b, 0x0068, 0x007e, 0x015b,
[; ;nozzle.c: 204: 0x0078, 0x0070, 0x0077, 0x006e, 0x0079, 0x0157, 0x007c, 0x015c,
[; ;nozzle.c: 205: 0x0078, 0x0073, 0x0074, 0x006b, 0x007e, 0x015a, 0x0078, 0x006f,
[; ;nozzle.c: 206: 0x0077, 0x015c, 0x0078, 0x2068, 0x0730, 0x01c1, 0x007a
[; ;nozzle.c: 207: };
"209
[v _left_data `Ci ~T0 @X0 -> 0 `x e ]
[i _left_data
:U ..
"211
-> 1840 `i
-> 967 `i
-> 120 `i
-> 115 `i
-> 117 `i
-> 346 `i
-> 121 `i
-> 110 `i
-> 122 `i
"212
-> 347 `i
-> 119 `i
-> 347 `i
-> 120 `i
-> 346 `i
-> 121 `i
-> 350 `i
-> 117 `i
-> 115 `i
"213
-> 117 `i
-> 346 `i
-> 120 `i
-> 107 `i
-> 124 `i
-> 346 `i
-> 121 `i
-> 110 `i
-> 121 `i
"214
-> 110 `i
-> 121 `i
-> 110 `i
-> 122 `i
-> 106 `i
-> 125 `i
-> 346 `i
-> 120 `i
-> 351 `i
"215
-> 116 `i
-> 344 `i
-> 123 `i
-> 111 `i
-> 120 `i
-> 111 `i
-> 120 `i
-> 347 `i
-> 120 `i
"216
-> 111 `i
-> 120 `i
-> 346 `i
-> 121 `i
-> 115 `i
-> 116 `i
-> 111 `i
-> 121 `i
-> 104 `i
"217
-> 126 `i
-> 349 `i
-> 118 `i
-> 347 `i
-> 120 `i
-> 111 `i
-> 120 `i
-> 347 `i
-> 121 `i
"218
-> 111 `i
-> 120 `i
-> 343 `i
-> 124 `i
-> 8291 `i
-> 1846 `i
-> 447 `i
"219
-> 122 `i
..
]
[; ;nozzle.c: 209: const int16_t left_data[] =
[; ;nozzle.c: 210: {
[; ;nozzle.c: 211: 0x0730, 0x03c7, 0x0078, 0x0073, 0x0075, 0x015a, 0x0079, 0x006e, 0x007a,
[; ;nozzle.c: 212: 0x015b, 0x0077, 0x015b, 0x0078, 0x015a, 0x0079, 0x015e, 0x0075, 0x0073,
[; ;nozzle.c: 213: 0x0075, 0x015a, 0x0078, 0x006b, 0x007c, 0x015a, 0x0079, 0x006e, 0x0079,
[; ;nozzle.c: 214: 0x006e, 0x0079, 0x006e, 0x007a, 0x006a, 0x007d, 0x015a, 0x0078, 0x015f,
[; ;nozzle.c: 215: 0x0074, 0x0158, 0x007b, 0x006f, 0x0078, 0x006f, 0x0078, 0x015b, 0x0078,
[; ;nozzle.c: 216: 0x006f, 0x0078, 0x015a, 0x0079, 0x0073, 0x0074, 0x006f, 0x0079, 0x0068,
[; ;nozzle.c: 217: 0x007e, 0x015d, 0x0076, 0x015b, 0x0078, 0x006f, 0x0078, 0x015b, 0x0079,
[; ;nozzle.c: 218: 0x006f, 0x0078, 0x0157, 0x007c, 0x2063, 0x0736, 0x01bf, 0x007a
[; ;nozzle.c: 219: };
"221
[v _right_data `Ci ~T0 @X0 -> 0 `x e ]
[i _right_data
:U ..
"223
-> 1839 `i
-> 966 `i
-> 120 `i
-> 99 `i
-> 132 `i
"224
-> 341 `i
-> 126 `i
-> 115 `i
-> 117 `i
-> 350 `i
-> 117 `i
-> 342 `i
-> 125 `i
"225
-> 340 `i
-> 126 `i
-> 343 `i
-> 125 `i
-> 111 `i
-> 120 `i
-> 342 `i
-> 124 `i
"226
-> 111 `i
-> 121 `i
-> 351 `i
-> 116 `i
-> 114 `i
-> 117 `i
-> 112 `i
-> 119 `i
"227
-> 115 `i
-> 116 `i
-> 112 `i
-> 119 `i
-> 347 `i
-> 120 `i
-> 107 `i
-> 126 `i
"228
-> 345 `i
-> 121 `i
-> 115 `i
-> 116 `i
-> 107 `i
-> 125 `i
-> 346 `i
-> 121 `i
"229
-> 110 `i
-> 121 `i
-> 346 `i
-> 120 `i
-> 107 `i
-> 124 `i
-> 347 `i
-> 120 `i
"230
-> 114 `i
-> 118 `i
-> 347 `i
-> 119 `i
-> 343 `i
-> 124 `i
-> 110 `i
-> 121 `i
"231
-> 350 `i
-> 116 `i
-> 114 `i
-> 117 `i
-> 347 `i
-> 120 `i
-> 8285 `i
-> 1850 `i
"232
-> 455 `i
"233
-> 122 `i
..
]
[; ;nozzle.c: 221: const int16_t right_data[] =
[; ;nozzle.c: 222: {
[; ;nozzle.c: 223: 0x072f, 0x03c6, 0x0078, 0x0063, 0x0084,
[; ;nozzle.c: 224: 0x0155, 0x007e, 0x0073, 0x0075, 0x015e, 0x0075, 0x0156, 0x007d,
[; ;nozzle.c: 225: 0x0154, 0x007e, 0x0157, 0x007d, 0x006f, 0x0078, 0x0156, 0x007c,
[; ;nozzle.c: 226: 0x006f, 0x0079, 0x015f, 0x0074, 0x0072, 0x0075, 0x0070, 0x0077,
[; ;nozzle.c: 227: 0x0073, 0x0074, 0x0070, 0x0077, 0x015b, 0x0078, 0x006b, 0x007e,
[; ;nozzle.c: 228: 0x0159, 0x0079, 0x0073, 0x0074, 0x006b, 0x007d, 0x015a, 0x0079,
[; ;nozzle.c: 229: 0x006e, 0x0079, 0x015a, 0x0078, 0x006b, 0x007c, 0x015b, 0x0078,
[; ;nozzle.c: 230: 0x0072, 0x0076, 0x015b, 0x0077, 0x0157, 0x007c, 0x006e, 0x0079,
[; ;nozzle.c: 231: 0x015e, 0x0074, 0x0072, 0x0075, 0x015b, 0x0078, 0x205d, 0x073a,
[; ;nozzle.c: 232: 0x01c7, 0x007a
[; ;nozzle.c: 233: };
"235
[v _fastfwd_data `Ci ~T0 @X0 -> 0 `x e ]
[i _fastfwd_data
:U ..
"238
-> 1838 `i
-> 963 `i
-> 125 `i
-> 111 `i
-> 120 `i
-> 343 `i
-> 126 `i
-> 105 `i
"239
-> 124 `i
-> 351 `i
-> 116 `i
-> 348 `i
-> 120 `i
-> 351 `i
-> 116 `i
-> 351 `i
"240
-> 118 `i
-> 113 `i
-> 116 `i
-> 347 `i
-> 120 `i
-> 115 `i
-> 116 `i
-> 347 `i
"241
-> 120 `i
-> 112 `i
-> 119 `i
-> 115 `i
-> 116 `i
-> 112 `i
-> 121 `i
-> 113 `i
"242
-> 116 `i
-> 342 `i
-> 125 `i
-> 111 `i
-> 120 `i
-> 115 `i
-> 116 `i
-> 346 `i
"243
-> 121 `i
-> 347 `i
-> 121 `i
-> 347 `i
-> 120 `i
-> 115 `i
-> 116 `i
-> 111 `i
"244
-> 121 `i
-> 345 `i
-> 121 `i
-> 342 `i
-> 125 `i
-> 351 `i
-> 116 `i
-> 115 `i
"245
-> 116 `i
-> 110 `i
-> 121 `i
-> 115 `i
-> 117 `i
-> 346 `i
-> 121 `i
-> 347 `i
"246
-> 121 `i
-> 111 `i
-> 122 `i
-> 8294 `i
-> 1840 `i
-> 454 `i
"247
-> 121 `i
..
]
[; ;nozzle.c: 235: const int16_t fastfwd_data[] =
[; ;nozzle.c: 236: {
[; ;nozzle.c: 238: 0x072e, 0x03c3, 0x007d, 0x006f, 0x0078, 0x0157, 0x007e, 0x0069,
[; ;nozzle.c: 239: 0x007c, 0x015f, 0x0074, 0x015c, 0x0078, 0x015f, 0x0074, 0x015f,
[; ;nozzle.c: 240: 0x0076, 0x0071, 0x0074, 0x015b, 0x0078, 0x0073, 0x0074, 0x015b,
[; ;nozzle.c: 241: 0x0078, 0x0070, 0x0077, 0x0073, 0x0074, 0x0070, 0x0079, 0x0071,
[; ;nozzle.c: 242: 0x0074, 0x0156, 0x007d, 0x006f, 0x0078, 0x0073, 0x0074, 0x015a,
[; ;nozzle.c: 243: 0x0079, 0x015b, 0x0079, 0x015b, 0x0078, 0x0073, 0x0074, 0x006f,
[; ;nozzle.c: 244: 0x0079, 0x0159, 0x0079, 0x0156, 0x007d, 0x015f, 0x0074, 0x0073,
[; ;nozzle.c: 245: 0x0074, 0x006e, 0x0079, 0x0073, 0x0075, 0x015a, 0x0079, 0x015b,
[; ;nozzle.c: 246: 0x0079, 0x006f, 0x007a, 0x2066, 0x0730, 0x01c6, 0x0079
[; ;nozzle.c: 247: };
"251
[v _fastrev_data `Ci ~T0 @X0 -> 0 `x e ]
[i _fastrev_data
:U ..
"254
-> 1840 `i
-> 964 `i
-> 121 `i
-> 114 `i
-> 117 `i
-> 345 `i
-> 123 `i
-> 110 `i
-> 121 `i
"255
-> 346 `i
-> 121 `i
-> 346 `i
-> 120 `i
-> 347 `i
-> 121 `i
-> 342 `i
-> 126 `i
-> 105 `i
"256
-> 126 `i
-> 346 `i
-> 120 `i
-> 106 `i
-> 125 `i
-> 346 `i
-> 121 `i
-> 111 `i
-> 120 `i
"257
-> 106 `i
-> 125 `i
-> 109 `i
-> 123 `i
-> 109 `i
-> 121 `i
-> 341 `i
-> 125 `i
-> 109 `i
"258
-> 122 `i
-> 346 `i
-> 122 `i
-> 344 `i
-> 123 `i
-> 110 `i
-> 122 `i
-> 109 `i
-> 121 `i
"259
-> 105 `i
-> 127 `i
-> 109 `i
-> 122 `i
-> 341 `i
-> 125 `i
-> 346 `i
-> 122 `i
-> 114 `i
"260
-> 117 `i
-> 110 `i
-> 122 `i
-> 341 `i
-> 125 `i
-> 351 `i
-> 116 `i
-> 351 `i
-> 117 `i
"261
-> 346 `i
-> 122 `i
-> 109 `i
-> 122 `i
-> 8300 `i
-> 1836 `i
-> 454 `i
"263
-> 120 `i
..
]
[; ;nozzle.c: 251: const int16_t fastrev_data[] =
[; ;nozzle.c: 252: {
[; ;nozzle.c: 254: 0x0730, 0x03c4, 0x0079, 0x0072, 0x0075, 0x0159, 0x007b, 0x006e, 0x0079,
[; ;nozzle.c: 255: 0x015a, 0x0079, 0x015a, 0x0078, 0x015b, 0x0079, 0x0156, 0x007e, 0x0069,
[; ;nozzle.c: 256: 0x007e, 0x015a, 0x0078, 0x006a, 0x007d, 0x015a, 0x0079, 0x006f, 0x0078,
[; ;nozzle.c: 257: 0x006a, 0x007d, 0x006d, 0x007b, 0x006d, 0x0079, 0x0155, 0x007d, 0x006d,
[; ;nozzle.c: 258: 0x007a, 0x015a, 0x007a, 0x0158, 0x007b, 0x006e, 0x007a, 0x006d, 0x0079,
[; ;nozzle.c: 259: 0x0069, 0x007f, 0x006d, 0x007a, 0x0155, 0x007d, 0x015a, 0x007a, 0x0072,
[; ;nozzle.c: 260: 0x0075, 0x006e, 0x007a, 0x0155, 0x007d, 0x015f, 0x0074, 0x015f, 0x0075,
[; ;nozzle.c: 261: 0x015a, 0x007a, 0x006d, 0x007a, 0x206c, 0x072c, 0x01c6, 0x0078
[; ;nozzle.c: 263: };
"273
[v _ir_codes `CS97 ~T0 @X0 -> 0 `x e ]
[i _ir_codes
:U ..
:U ..
"274
&U _up_data
-> / -> # _up_data `ui -> -> 2 `i `ui `uc
-> -> 0 `i `uc
..
:U ..
"275
&U _down_data
-> / -> # _down_data `ui -> -> 2 `i `ui `uc
-> -> 1 `i `uc
..
:U ..
"276
&U _left_data
-> / -> # _left_data `ui -> -> 2 `i `ui `uc
-> -> 2 `i `uc
..
:U ..
"277
&U _right_data
-> / -> # _right_data `ui -> -> 2 `i `ui `uc
-> -> 3 `i `uc
..
:U ..
"279
&U _fastfwd_data
-> / -> # _fastfwd_data `ui -> -> 2 `i `ui `uc
-> -> 5 `i `uc
..
:U ..
"280
&U _fastrev_data
-> / -> # _fastrev_data `ui -> -> 2 `i `ui `uc
-> -> 4 `i `uc
..
..
]
[; ;nozzle.c: 273: const ir_code_t ir_codes[] = {
[; ;nozzle.c: 274: { up_data, sizeof(up_data) / 2, 0 },
[; ;nozzle.c: 275: { down_data, sizeof(down_data) / 2, 1 },
[; ;nozzle.c: 276: { left_data, sizeof(left_data) / 2, 2 },
[; ;nozzle.c: 277: { right_data, sizeof(right_data) / 2, 3 },
[; ;nozzle.c: 279: { fastfwd_data, sizeof(fastfwd_data) / 2, 5 },
[; ;nozzle.c: 280: { fastrev_data, sizeof(fastrev_data) / 2, 4 },
[; ;nozzle.c: 281: };
"290
[v _ir_code_failed `uc ~T0 @X0 / -> # _ir_codes `ui -> # `S97 `ui e ]
[; ;nozzle.c: 290: uint8_t ir_code_failed[(sizeof(ir_codes) / sizeof(ir_code_t))];
"291
[v _ir_offset `uc ~T0 @X0 1 e ]
[i _ir_offset
-> -> 0 `i `uc
]
[; ;nozzle.c: 291: uint8_t ir_offset = 0;
"293
[v _have_ir `uc ~T0 @X0 1 e ]
[i _have_ir
-> -> 0 `i `uc
]
[; ;nozzle.c: 293: uint8_t have_ir = 0;
"295
[v _ir_code `uc ~T0 @X0 1 e ]
[i _ir_code
-> -> 0 `i `uc
]
[; ;nozzle.c: 295: uint8_t ir_code = 0;
"297
[v _repeat_delay `uc ~T0 @X0 1 e ]
[i _repeat_delay
-> -> 0 `i `uc
]
[; ;nozzle.c: 297: uint8_t repeat_delay = 0;
"302
[v _got_ir_int `Vuc ~T0 @X0 1 e ]
[i _got_ir_int
-> -> 0 `i `uc
]
[; ;nozzle.c: 302: volatile uint8_t got_ir_int = 0;
"304
[v _ir_time `i ~T0 @X0 1 e ]
[i _ir_time
-> 0 `i
]
[; ;nozzle.c: 304: int16_t ir_time = 0;
"306
[v _tmr2_high `uc ~T0 @X0 1 e ]
[i _tmr2_high
-> -> 0 `i `uc
]
[; ;nozzle.c: 306: uint8_t tmr2_high = 0;
"308
[v _ir_time2 `Vui ~T0 @X0 1 e ]
[i _ir_time2
-> -> 0 `i `ui
]
[; ;nozzle.c: 308: volatile uint16_t ir_time2 = 0;
"309
[v _first_edge `uc ~T0 @X0 1 e ]
[i _first_edge
-> -> 1 `i `uc
]
[; ;nozzle.c: 309: uint8_t first_edge = 1;
"312
[v _print_byte `(v ~T0 @X0 1 ef1`uc ]
"313
{
[; ;nozzle.c: 312: void print_byte(uint8_t c)
[; ;nozzle.c: 313: {
[e :U _print_byte ]
"312
[v _c `uc ~T0 @X0 1 r1 ]
"313
[f ]
[; ;nozzle.c: 314: if(uart_size < 64)
"314
[e $ ! < -> _uart_size `i -> 64 `i 99  ]
[; ;nozzle.c: 315: {
"315
{
[; ;nozzle.c: 316: uart_buffer[uart_position1++] = c;
"316
[e = *U + &U _uart_buffer * -> ++ _uart_position1 -> -> 1 `i `uc `ux -> -> # *U &U _uart_buffer `ui `ux _c ]
[; ;nozzle.c: 317: uart_size++;
"317
[e ++ _uart_size -> -> 1 `i `uc ]
[; ;nozzle.c: 318: if(uart_position1 >= 64)
"318
[e $ ! >= -> _uart_position1 `i -> 64 `i 100  ]
[; ;nozzle.c: 319: {
"319
{
[; ;nozzle.c: 320: uart_position1 = 0;
"320
[e = _uart_position1 -> -> 0 `i `uc ]
"321
}
[e :U 100 ]
"322
}
[e :U 99 ]
[; ;nozzle.c: 321: }
[; ;nozzle.c: 322: }
[; ;nozzle.c: 323: }
"323
[e :UE 98 ]
}
"325
[v _print_text `(v ~T0 @X0 1 ef1`*Cuc ]
"326
{
[; ;nozzle.c: 325: void print_text(const uint8_t *s)
[; ;nozzle.c: 326: {
[e :U _print_text ]
"325
[v _s `*Cuc ~T0 @X0 1 r1 ]
"326
[f ]
[; ;nozzle.c: 327: while(*s != 0)
"327
[e $U 102  ]
[e :U 103 ]
[; ;nozzle.c: 328: {
"328
{
[; ;nozzle.c: 329: print_byte(*s);
"329
[e ( _print_byte (1 *U _s ]
[; ;nozzle.c: 330: s++;
"330
[e ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
"331
}
[e :U 102 ]
"327
[e $ != -> *U _s `i -> 0 `i 103  ]
[e :U 104 ]
[; ;nozzle.c: 331: }
[; ;nozzle.c: 332: }
"332
[e :UE 101 ]
}
"335
[v _print_number_nospace `(v ~T0 @X0 1 ef1`ui ]
"336
{
[; ;nozzle.c: 335: void print_number_nospace(uint16_t number)
[; ;nozzle.c: 336: {
[e :U _print_number_nospace ]
"335
[v _number `ui ~T0 @X0 1 r1 ]
"336
[f ]
[; ;nozzle.c: 337: if(number >= 10000) print_byte('0' + (number / 10000));
"337
[e $ ! >= _number -> -> 10000 `i `ui 106  ]
[e ( _print_byte (1 -> + -> 48 `ui / _number -> -> 10000 `i `ui `uc ]
[e :U 106 ]
[; ;nozzle.c: 338: if(number >= 1000) print_byte('0' + ((number / 1000) % 10));
"338
[e $ ! >= _number -> -> 1000 `i `ui 107  ]
[e ( _print_byte (1 -> + -> 48 `ui % / _number -> -> 1000 `i `ui -> -> 10 `i `ui `uc ]
[e :U 107 ]
[; ;nozzle.c: 339: if(number >= 100) print_byte('0' + ((number / 100) % 10));
"339
[e $ ! >= _number -> -> 100 `i `ui 108  ]
[e ( _print_byte (1 -> + -> 48 `ui % / _number -> -> 100 `i `ui -> -> 10 `i `ui `uc ]
[e :U 108 ]
[; ;nozzle.c: 340: if(number >= 10) print_byte('0' + ((number / 10) % 10));
"340
[e $ ! >= _number -> -> 10 `i `ui 109  ]
[e ( _print_byte (1 -> + -> 48 `ui % / _number -> -> 10 `i `ui -> -> 10 `i `ui `uc ]
[e :U 109 ]
[; ;nozzle.c: 341: print_byte('0' + (number % 10));
"341
[e ( _print_byte (1 -> + -> 48 `ui % _number -> -> 10 `i `ui `uc ]
[; ;nozzle.c: 342: }
"342
[e :UE 105 ]
}
"344
[v _print_number2 `(v ~T0 @X0 1 ef1`uc ]
"345
{
[; ;nozzle.c: 344: void print_number2(uint8_t number)
[; ;nozzle.c: 345: {
[e :U _print_number2 ]
"344
[v _number `uc ~T0 @X0 1 r1 ]
"345
[f ]
[; ;nozzle.c: 346: print_byte('0' + ((number / 10) % 10));
"346
[e ( _print_byte (1 -> + -> 48 `ui -> % / -> _number `i -> 10 `i -> 10 `i `ui `uc ]
[; ;nozzle.c: 347: print_byte('0' + (number % 10));
"347
[e ( _print_byte (1 -> + -> 48 `ui -> % -> _number `i -> 10 `i `ui `uc ]
[; ;nozzle.c: 348: }
"348
[e :UE 110 ]
}
"350
[v _print_number `(v ~T0 @X0 1 ef1`ui ]
"351
{
[; ;nozzle.c: 350: void print_number(uint16_t number)
[; ;nozzle.c: 351: {
[e :U _print_number ]
"350
[v _number `ui ~T0 @X0 1 r1 ]
"351
[f ]
[; ;nozzle.c: 352: print_number_nospace(number);
"352
[e ( _print_number_nospace (1 _number ]
[; ;nozzle.c: 353: print_byte(' ');
"353
[e ( _print_byte (1 -> -> 32 `ui `uc ]
[; ;nozzle.c: 354: }
"354
[e :UE 111 ]
}
"356
[v _print_number_signed `(v ~T0 @X0 1 ef1`i ]
"357
{
[; ;nozzle.c: 356: void print_number_signed(int16_t number)
[; ;nozzle.c: 357: {
[e :U _print_number_signed ]
"356
[v _number `i ~T0 @X0 1 r1 ]
"357
[f ]
[; ;nozzle.c: 358: if(number < 0)
"358
[e $ ! < _number -> 0 `i 113  ]
[; ;nozzle.c: 359: {
"359
{
[; ;nozzle.c: 360: print_byte('-');
"360
[e ( _print_byte (1 -> -> 45 `ui `uc ]
[; ;nozzle.c: 361: print_number_nospace(-number);
"361
[e ( _print_number_nospace (1 -> -U _number `ui ]
"362
}
[; ;nozzle.c: 362: }
[e $U 114  ]
"363
[e :U 113 ]
[; ;nozzle.c: 363: else
[; ;nozzle.c: 364: {
"364
{
[; ;nozzle.c: 365: print_number_nospace(number);
"365
[e ( _print_number_nospace (1 -> _number `ui ]
"366
}
[e :U 114 ]
[; ;nozzle.c: 366: }
[; ;nozzle.c: 367: print_byte(' ');
"367
[e ( _print_byte (1 -> -> 32 `ui `uc ]
[; ;nozzle.c: 368: }
"368
[e :UE 112 ]
}
"370
[v _hex_table `Cuc ~T0 @X0 -> 0 `x e ]
[i _hex_table
:U ..
"372
-> -> 48 `ui `uc
-> -> 49 `ui `uc
-> -> 50 `ui `uc
-> -> 51 `ui `uc
-> -> 52 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 55 `ui `uc
"373
-> -> 56 `ui `uc
-> -> 57 `ui `uc
-> -> 97 `ui `uc
-> -> 98 `ui `uc
-> -> 99 `ui `uc
-> -> 100 `ui `uc
-> -> 101 `ui `uc
"374
-> -> 102 `ui `uc
..
]
[; ;nozzle.c: 370: const char hex_table[] =
[; ;nozzle.c: 371: {
[; ;nozzle.c: 372: '0', '1', '2', '3', '4', '5', '6', '7',
[; ;nozzle.c: 373: '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
[; ;nozzle.c: 374: };
"376
[v _print_hex2 `(v ~T0 @X0 1 ef1`uc ]
"377
{
[; ;nozzle.c: 376: void print_hex2(uint8_t number)
[; ;nozzle.c: 377: {
[e :U _print_hex2 ]
"376
[v _number `uc ~T0 @X0 1 r1 ]
"377
[f ]
[; ;nozzle.c: 378: print_byte(hex_table[(number >> 4) & 0xf]);
"378
[e ( _print_byte (1 *U + &U _hex_table * -> -> & >> -> _number `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _hex_table `ui `ux ]
[; ;nozzle.c: 379: print_byte(hex_table[number & 0xf]);
"379
[e ( _print_byte (1 *U + &U _hex_table * -> -> & -> _number `i -> 15 `i `ui `ux -> -> # *U &U _hex_table `ui `ux ]
[; ;nozzle.c: 380: }
"380
[e :UE 115 ]
}
"382
[v _print_bin `(v ~T0 @X0 1 ef1`uc ]
"383
{
[; ;nozzle.c: 382: void print_bin(uint8_t number)
[; ;nozzle.c: 383: {
[e :U _print_bin ]
"382
[v _number `uc ~T0 @X0 1 r1 ]
"383
[f ]
[; ;nozzle.c: 384: print_byte((number & 0x80) ? '1' : '0');
"384
[e ( _print_byte (1 -> ? != & -> _number `i -> 128 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 385: print_byte((number & 0x40) ? '1' : '0');
"385
[e ( _print_byte (1 -> ? != & -> _number `i -> 64 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 386: print_byte((number & 0x20) ? '1' : '0');
"386
[e ( _print_byte (1 -> ? != & -> _number `i -> 32 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 387: print_byte((number & 0x10) ? '1' : '0');
"387
[e ( _print_byte (1 -> ? != & -> _number `i -> 16 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 388: print_byte((number & 0x8) ? '1' : '0');
"388
[e ( _print_byte (1 -> ? != & -> _number `i -> 8 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 389: print_byte((number & 0x4) ? '1' : '0');
"389
[e ( _print_byte (1 -> ? != & -> _number `i -> 4 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 390: print_byte((number & 0x2) ? '1' : '0');
"390
[e ( _print_byte (1 -> ? != & -> _number `i -> 2 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 391: print_byte((number & 0x1) ? '1' : '0');
"391
[e ( _print_byte (1 -> ? != & -> _number `i -> 1 `i -> 0 `i : -> 49 `ui -> 48 `ui `uc ]
[; ;nozzle.c: 392: }
"392
[e :UE 116 ]
}
"396
[v _handle_uart `(v ~T0 @X0 1 ef ]
"397
{
[; ;nozzle.c: 396: void handle_uart()
[; ;nozzle.c: 397: {
[e :U _handle_uart ]
[f ]
[; ;nozzle.c: 398: if(uart_size > 0 && PIR1bits.TXIF)
"398
[e $ ! && > -> _uart_size `i -> 0 `i != -> . . _PIR1bits 0 4 `i -> -> -> 0 `i `Vuc `i 118  ]
[; ;nozzle.c: 399: {
"399
{
[; ;nozzle.c: 400: PIR1bits.TXIF = 0;
"400
[e = . . _PIR1bits 0 4 -> -> 0 `i `uc ]
[; ;nozzle.c: 401: TXREG = uart_buffer[uart_position2++];
"401
[e = _TXREG *U + &U _uart_buffer * -> ++ _uart_position2 -> -> 1 `i `uc `ux -> -> # *U &U _uart_buffer `ui `ux ]
[; ;nozzle.c: 402: uart_size--;
"402
[e -- _uart_size -> -> 1 `i `uc ]
[; ;nozzle.c: 403: if(uart_position2 >= 64)
"403
[e $ ! >= -> _uart_position2 `i -> 64 `i 119  ]
[; ;nozzle.c: 404: {
"404
{
[; ;nozzle.c: 405: uart_position2 = 0;
"405
[e = _uart_position2 -> -> 0 `i `uc ]
"406
}
[e :U 119 ]
"407
}
[e :U 118 ]
[; ;nozzle.c: 406: }
[; ;nozzle.c: 407: }
[; ;nozzle.c: 408: }
"408
[e :UE 117 ]
}
"410
[v _flush_uart `(v ~T0 @X0 1 ef ]
"411
{
[; ;nozzle.c: 410: void flush_uart()
[; ;nozzle.c: 411: {
[e :U _flush_uart ]
[f ]
[; ;nozzle.c: 412: while(uart_size > 0)
"412
[e $U 121  ]
[e :U 122 ]
[; ;nozzle.c: 413: {
"413
{
[; ;nozzle.c: 414: asm("clrwdt");
"414
[; <" clrwdt ;# ">
[; ;nozzle.c: 415: handle_uart();
"415
[e ( _handle_uart ..  ]
"416
}
[e :U 121 ]
"412
[e $ > -> _uart_size `i -> 0 `i 122  ]
[e :U 123 ]
[; ;nozzle.c: 416: }
[; ;nozzle.c: 417: }
"417
[e :UE 120 ]
}
[; ;nozzle.c: 421: void motor_idle();
[; ;nozzle.c: 422: void motor_home1();
"423
[v _motor_state `*F1262 ~T0 @X0 1 e ]
[i _motor_state
&U _motor_idle
]
[; ;nozzle.c: 423: void (*motor_state)() = motor_idle;
"426
[v _motor_tracking `(v ~T0 @X0 1 ef ]
"427
{
[; ;nozzle.c: 426: void motor_tracking()
[; ;nozzle.c: 427: {
[e :U _motor_tracking ]
[f ]
"429
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 429: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
"430
[v _encoder `*S95 ~T0 @X0 1 a ]
[; ;nozzle.c: 430: sensor_state_t *encoder = &sensors[tracking->encoder];
[e = _encoder &U *U + &U _sensors * -> . *U _tracking 1 `ux -> -> # *U &U _sensors `ui `ux ]
[; ;nozzle.c: 432: current_motor++;
"432
[e ++ _current_motor -> -> 1 `i `uc ]
[; ;nozzle.c: 433: if(current_motor >= 3)
"433
[e $ ! >= -> _current_motor `i -> 3 `i 125  ]
[; ;nozzle.c: 434: {
"434
{
[; ;nozzle.c: 435: current_motor = 0;
"435
[e = _current_motor -> -> 0 `i `uc ]
"436
}
[e :U 125 ]
[; ;nozzle.c: 436: }
[; ;nozzle.c: 439: if((motor_master & tracking->total_mask) == tracking->inc_mask)
"439
[e $ ! == & -> _motor_master `i -> . *U _tracking 5 `i -> . *U _tracking 3 `i 126  ]
[; ;nozzle.c: 440: {
"440
{
[; ;nozzle.c: 441: if(encoder->position >= tracking->target_position)
"441
[e $ ! >= -> . *U _encoder 3 `i -> . *U _tracking 7 `i 127  ]
[; ;nozzle.c: 442: {
"442
{
[; ;nozzle.c: 450: {
"450
{
[; ;nozzle.c: 451: motor_master |= tracking->total_mask;
"451
[e =| _motor_master . *U _tracking 5 ]
"452
}
[; ;nozzle.c: 452: }
[; ;nozzle.c: 454: tracking->timer = (100 / 2);
"454
[e = . *U _tracking 6 -> / -> 100 `i -> 2 `i `uc ]
"455
}
[e :U 127 ]
"456
}
[; ;nozzle.c: 455: }
[; ;nozzle.c: 456: }
[e $U 128  ]
"457
[e :U 126 ]
[; ;nozzle.c: 457: else
[; ;nozzle.c: 458: if((motor_master & tracking->total_mask) == tracking->dec_mask)
"458
[e $ ! == & -> _motor_master `i -> . *U _tracking 5 `i -> . *U _tracking 2 `i 129  ]
[; ;nozzle.c: 459: {
"459
{
[; ;nozzle.c: 460: if(encoder->position <= tracking->target_position)
"460
[e $ ! <= -> . *U _encoder 3 `i -> . *U _tracking 7 `i 130  ]
[; ;nozzle.c: 461: {
"461
{
[; ;nozzle.c: 469: {
"469
{
[; ;nozzle.c: 470: motor_master |= tracking->total_mask;
"470
[e =| _motor_master . *U _tracking 5 ]
"471
}
[; ;nozzle.c: 471: }
[; ;nozzle.c: 473: tracking->timer = (100 / 2);
"473
[e = . *U _tracking 6 -> / -> 100 `i -> 2 `i `uc ]
"474
}
[e :U 130 ]
"475
}
[; ;nozzle.c: 474: }
[; ;nozzle.c: 475: }
[e $U 131  ]
"476
[e :U 129 ]
[; ;nozzle.c: 476: else
[; ;nozzle.c: 478: if( tracking->changed > 0)
"478
[e $ ! > -> . *U _tracking 10 `i -> 0 `i 132  ]
[; ;nozzle.c: 479: {
"479
{
[; ;nozzle.c: 483: if(encoder->position > tracking->target_position)
"483
[e $ ! > -> . *U _encoder 3 `i -> . *U _tracking 7 `i 133  ]
[; ;nozzle.c: 484: {
"484
{
[; ;nozzle.c: 485: encoder->step = -1;
"485
[e = . *U _encoder 2 -> -U -> 1 `i `c ]
[; ;nozzle.c: 486: motor_master &= tracking->total_unmask;
"486
[e =& _motor_master . *U _tracking 4 ]
[; ;nozzle.c: 487: motor_master |= tracking->dec_mask;
"487
[e =| _motor_master . *U _tracking 2 ]
[; ;nozzle.c: 488: tracking->changed--;
"488
[e -- . *U _tracking 10 -> -> 1 `i `uc ]
"489
}
[; ;nozzle.c: 489: }
[e $U 134  ]
"490
[e :U 133 ]
[; ;nozzle.c: 490: else
[; ;nozzle.c: 491: if(encoder->position < tracking->target_position)
"491
[e $ ! < -> . *U _encoder 3 `i -> . *U _tracking 7 `i 135  ]
[; ;nozzle.c: 492: {
"492
{
[; ;nozzle.c: 493: encoder->step = 1;
"493
[e = . *U _encoder 2 -> -> 1 `i `c ]
[; ;nozzle.c: 494: motor_master &= tracking->total_unmask;
"494
[e =& _motor_master . *U _tracking 4 ]
[; ;nozzle.c: 495: motor_master |= tracking->inc_mask;
"495
[e =| _motor_master . *U _tracking 3 ]
[; ;nozzle.c: 496: tracking->changed--;
"496
[e -- . *U _tracking 10 -> -> 1 `i `uc ]
"497
}
[; ;nozzle.c: 497: }
[e $U 136  ]
"498
[e :U 135 ]
[; ;nozzle.c: 498: else
[; ;nozzle.c: 499: {
"499
{
[; ;nozzle.c: 501: tracking->changed--;
"501
[e -- . *U _tracking 10 -> -> 1 `i `uc ]
"502
}
[e :U 136 ]
[e :U 134 ]
"503
}
[e :U 132 ]
"504
[e :U 131 ]
[e :U 128 ]
[; ;nozzle.c: 502: }
[; ;nozzle.c: 503: }
[; ;nozzle.c: 504: }
[e :UE 124 ]
}
"507
[v _motor_home6 `(v ~T0 @X0 1 ef ]
"508
{
[; ;nozzle.c: 507: void motor_home6()
[; ;nozzle.c: 508: {
[e :U _motor_home6 ]
[f ]
"509
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 509: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
[; ;nozzle.c: 510: if(tracking->timer == 0)
"510
[e $ ! == -> . *U _tracking 6 `i -> 0 `i 138  ]
[; ;nozzle.c: 511: {
"511
{
"512
[v _current_encoder `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 512: uint8_t current_encoder = tracking->encoder;
[e = _current_encoder . *U _tracking 1 ]
[; ;nozzle.c: 520: switch(current_motor)
"520
[e $U 140  ]
[; ;nozzle.c: 521: {
"521
{
[; ;nozzle.c: 522: case 2:
"522
[e :U 141 ]
[; ;nozzle.c: 523: current_motor = 1;
"523
[e = _current_motor -> -> 1 `i `uc ]
[; ;nozzle.c: 524: motor_state = motor_home1;
"524
[e = _motor_state &U _motor_home1 ]
[; ;nozzle.c: 525: break;
"525
[e $U 139  ]
[; ;nozzle.c: 526: case 1:
"526
[e :U 142 ]
[; ;nozzle.c: 527: current_motor = 0;
"527
[e = _current_motor -> -> 0 `i `uc ]
[; ;nozzle.c: 528: motor_state = motor_home1;
"528
[e = _motor_state &U _motor_home1 ]
[; ;nozzle.c: 529: break;
"529
[e $U 139  ]
[; ;nozzle.c: 530: case 0:
"530
[e :U 143 ]
[; ;nozzle.c: 531: default:
"531
[e :U 144 ]
[; ;nozzle.c: 532: current_motor = 0;
"532
[e = _current_motor -> -> 0 `i `uc ]
[; ;nozzle.c: 533: motor_state = motor_tracking;
"533
[e = _motor_state &U _motor_tracking ]
[; ;nozzle.c: 534: break;
"534
[e $U 139  ]
"535
}
[; ;nozzle.c: 535: }
[e $U 139  ]
"520
[e :U 140 ]
[e [\ _current_motor , $ -> -> 2 `i `uc 141
 , $ -> -> 1 `i `uc 142
 , $ -> -> 0 `i `uc 143
 144 ]
"535
[e :U 139 ]
"536
}
[e :U 138 ]
[; ;nozzle.c: 536: }
[; ;nozzle.c: 537: }
"537
[e :UE 137 ]
}
"540
[v _motor_home5 `(v ~T0 @X0 1 ef ]
"541
{
[; ;nozzle.c: 540: void motor_home5()
[; ;nozzle.c: 541: {
[e :U _motor_home5 ]
[f ]
"542
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 542: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
"543
[v _current_encoder `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 543: uint8_t current_encoder = tracking->encoder;
[e = _current_encoder . *U _tracking 1 ]
[; ;nozzle.c: 544: if(sensors[current_encoder].position >=
[; ;nozzle.c: 545: tracking_state[current_motor].target_position)
"545
[e $ ! >= -> . *U + &U _sensors * -> _current_encoder `ux -> -> # *U &U _sensors `ui `ux 3 `i -> . *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux 7 `i 146  ]
[; ;nozzle.c: 546: {
"546
{
[; ;nozzle.c: 554: {
"554
{
[; ;nozzle.c: 555: motor_master |= tracking->total_mask;
"555
[e =| _motor_master . *U _tracking 5 ]
"556
}
[; ;nozzle.c: 556: }
[; ;nozzle.c: 558: tracking->timer = (100 / 2);
"558
[e = . *U _tracking 6 -> / -> 100 `i -> 2 `i `uc ]
[; ;nozzle.c: 559: motor_state = motor_home6;
"559
[e = _motor_state &U _motor_home6 ]
"560
}
[e :U 146 ]
[; ;nozzle.c: 560: }
[; ;nozzle.c: 561: }
"561
[e :UE 145 ]
}
"564
[v _motor_home4 `(v ~T0 @X0 1 ef ]
"565
{
[; ;nozzle.c: 564: void motor_home4()
[; ;nozzle.c: 565: {
[e :U _motor_home4 ]
[f ]
"566
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 566: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
"567
[v _current_boundary `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 567: uint8_t current_boundary = tracking->boundary;
[e = _current_boundary . *U _tracking 0 ]
"568
[v _sensor_value `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 568: uint8_t sensor_value = sensors[current_boundary].analog;
[e = _sensor_value . *U + &U _sensors * -> _current_boundary `ux -> -> # *U &U _sensors `ui `ux 0 ]
[; ;nozzle.c: 569: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value - 0x80)) >= 0x20)
"569
[e $ ! >= ? < - -> _sensor_value `i -> 128 `i -> 0 `i : -U - -> _sensor_value `i -> 128 `i - -> _sensor_value `i -> 128 `i -> 32 `i 148  ]
[; ;nozzle.c: 570: {
"570
{
"571
[v _current_encoder `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 571: uint8_t current_encoder = tracking->encoder;
[e = _current_encoder . *U _tracking 1 ]
[; ;nozzle.c: 572: sensors[current_encoder].position = 0;
"572
[e = . *U + &U _sensors * -> _current_encoder `ux -> -> # *U &U _sensors `ui `ux 3 -> -> 0 `i `c ]
[; ;nozzle.c: 573: sensors[current_encoder].step = 1;
"573
[e = . *U + &U _sensors * -> _current_encoder `ux -> -> # *U &U _sensors `ui `ux 2 -> -> 1 `i `c ]
[; ;nozzle.c: 574: motor_state = motor_home5;
"574
[e = _motor_state &U _motor_home5 ]
"575
}
[e :U 148 ]
[; ;nozzle.c: 575: }
[; ;nozzle.c: 576: }
"576
[e :UE 147 ]
}
"579
[v _motor_home3 `(v ~T0 @X0 1 ef ]
"580
{
[; ;nozzle.c: 579: void motor_home3()
[; ;nozzle.c: 580: {
[e :U _motor_home3 ]
[f ]
"581
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 581: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
[; ;nozzle.c: 582: if(tracking->timer == 0)
"582
[e $ ! == -> . *U _tracking 6 `i -> 0 `i 150  ]
[; ;nozzle.c: 583: {
"583
{
[; ;nozzle.c: 584: motor_master &= tracking->total_unmask;
"584
[e =& _motor_master . *U _tracking 4 ]
[; ;nozzle.c: 585: motor_master |= tracking->inc_mask;
"585
[e =| _motor_master . *U _tracking 3 ]
[; ;nozzle.c: 586: motor_state = motor_home4;
"586
[e = _motor_state &U _motor_home4 ]
"587
}
[e :U 150 ]
[; ;nozzle.c: 587: }
[; ;nozzle.c: 588: }
"588
[e :UE 149 ]
}
"591
[v _motor_home2 `(v ~T0 @X0 1 ef ]
"592
{
[; ;nozzle.c: 591: void motor_home2()
[; ;nozzle.c: 592: {
[e :U _motor_home2 ]
[f ]
"593
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 593: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
"594
[v _current_boundary `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 594: uint8_t current_boundary = tracking->boundary;
[e = _current_boundary . *U _tracking 0 ]
"595
[v _sensor_value `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 595: uint8_t sensor_value = sensors[current_boundary].analog;
[e = _sensor_value . *U + &U _sensors * -> _current_boundary `ux -> -> # *U &U _sensors `ui `ux 0 ]
[; ;nozzle.c: 596: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value - 0x80)) >= 0x20)
"596
[e $ ! >= ? < - -> _sensor_value `i -> 128 `i -> 0 `i : -U - -> _sensor_value `i -> 128 `i - -> _sensor_value `i -> 128 `i -> 32 `i 152  ]
[; ;nozzle.c: 597: {
"597
{
[; ;nozzle.c: 599: motor_master &= tracking->total_unmask;
"599
[e =& _motor_master . *U _tracking 4 ]
[; ;nozzle.c: 600: motor_state = motor_home3;
"600
[e = _motor_state &U _motor_home3 ]
[; ;nozzle.c: 601: tracking->timer = (100 / 2);
"601
[e = . *U _tracking 6 -> / -> 100 `i -> 2 `i `uc ]
"602
}
[e :U 152 ]
[; ;nozzle.c: 602: }
[; ;nozzle.c: 603: }
"603
[e :UE 151 ]
}
"606
[v _motor_home1 `(v ~T0 @X0 1 ef ]
"607
{
[; ;nozzle.c: 606: void motor_home1()
[; ;nozzle.c: 607: {
[e :U _motor_home1 ]
[f ]
"608
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 608: tracking_state_t *tracking = &tracking_state[current_motor];
[e = _tracking &U *U + &U _tracking_state * -> _current_motor `ux -> -> # *U &U _tracking_state `ui `ux ]
"609
[v _current_boundary `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 609: uint8_t current_boundary = tracking->boundary;
[e = _current_boundary . *U _tracking 0 ]
"610
[v _sensor_value `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 610: uint8_t sensor_value = sensors[current_boundary].analog;
[e = _sensor_value . *U + &U _sensors * -> _current_boundary `ux -> -> # *U &U _sensors `ui `ux 0 ]
[; ;nozzle.c: 612: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value - 0x80)) >= 0x20)
"612
[e $ ! >= ? < - -> _sensor_value `i -> 128 `i -> 0 `i : -U - -> _sensor_value `i -> 128 `i - -> _sensor_value `i -> 128 `i -> 32 `i 154  ]
[; ;nozzle.c: 613: {
"613
{
[; ;nozzle.c: 614: motor_state = motor_idle;
"614
[e = _motor_state &U _motor_idle ]
"615
}
[; ;nozzle.c: 615: }
[e $U 155  ]
"616
[e :U 154 ]
[; ;nozzle.c: 616: else
[; ;nozzle.c: 618: {
"618
{
[; ;nozzle.c: 619: motor_master &= tracking->total_unmask;
"619
[e =& _motor_master . *U _tracking 4 ]
[; ;nozzle.c: 620: motor_master |= tracking->dec_mask;
"620
[e =| _motor_master . *U _tracking 2 ]
[; ;nozzle.c: 621: motor_state = motor_home2;
"621
[e = _motor_state &U _motor_home2 ]
"622
}
[e :U 155 ]
[; ;nozzle.c: 622: }
[; ;nozzle.c: 623: }
"623
[e :UE 153 ]
}
"625
[v _motor_idle `(v ~T0 @X0 1 ef ]
"626
{
[; ;nozzle.c: 625: void motor_idle()
[; ;nozzle.c: 626: {
[e :U _motor_idle ]
[f ]
[; ;nozzle.c: 627: }
"627
[e :UE 156 ]
}
"629
[v _arm_motors `(v ~T0 @X0 1 ef ]
"630
{
[; ;nozzle.c: 629: void arm_motors()
[; ;nozzle.c: 630: {
[e :U _arm_motors ]
[f ]
[; ;nozzle.c: 631: armed = 1;
"631
[e = _armed -> -> 1 `i `uc ]
[; ;nozzle.c: 632: PORTDbits.RD7 = 1;
"632
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
[; ;nozzle.c: 633: current_motor = 2;
"633
[e = _current_motor -> -> 2 `i `uc ]
[; ;nozzle.c: 635: tracking_state[2].target_position = 8;
"635
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 -> -> 8 `i `c ]
[; ;nozzle.c: 636: tracking_state[2].changed = 0;
"636
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 -> -> 0 `i `uc ]
[; ;nozzle.c: 638: tracking_state[1].target_position = 17;
"638
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 -> -> 17 `i `c ]
[; ;nozzle.c: 639: tracking_state[1].changed = 0;
"639
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 -> -> 0 `i `uc ]
[; ;nozzle.c: 641: tracking_state[0].target_position = 22 + step_to_encoders[0 * 3 + 0];
"641
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 -> + -> 22 `i -> *U + &U _step_to_encoders * -> -> + * -> 0 `i -> 3 `i -> 0 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux `i `c ]
[; ;nozzle.c: 642: tracking_state[0].changed = 0;
"642
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 -> -> 0 `i `uc ]
[; ;nozzle.c: 644: nozzle_step = 0;
"644
[e = _nozzle_step -> -> 0 `i `uc ]
[; ;nozzle.c: 645: radial_position = 22;
"645
[e = _radial_position -> -> 22 `i `c ]
[; ;nozzle.c: 646: motor_state = motor_home1;
"646
[e = _motor_state &U _motor_home1 ]
[; ;nozzle.c: 647: }
"647
[e :UE 157 ]
}
"649
[v _disarm_motors `(v ~T0 @X0 1 ef ]
"650
{
[; ;nozzle.c: 649: void disarm_motors()
[; ;nozzle.c: 650: {
[e :U _disarm_motors ]
[f ]
[; ;nozzle.c: 651: armed = 0;
"651
[e = _armed -> -> 0 `i `uc ]
[; ;nozzle.c: 652: PORTD &= ~(uint8_t)0b00111111;
"652
[e =& _PORTD -> ~ -> -> -> 63 `i `uc `i `uc ]
[; ;nozzle.c: 653: motor_state = motor_idle;
"653
[e = _motor_state &U _motor_idle ]
[; ;nozzle.c: 654: }
"654
[e :UE 158 ]
}
"657
[v _handle_nozzle_step `(v ~T0 @X0 1 ef ]
"658
{
[; ;nozzle.c: 657: void handle_nozzle_step()
[; ;nozzle.c: 658: {
[e :U _handle_nozzle_step ]
[f ]
[; ;nozzle.c: 668: tracking_state[0].target_position = radial_position +
[; ;nozzle.c: 669: step_to_encoders[nozzle_step * 3 + 0];
"669
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 -> + -> _radial_position `i -> *U + &U _step_to_encoders * -> -> + * -> _nozzle_step `i -> 3 `i -> 0 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux `i `c ]
[; ;nozzle.c: 670: tracking_state[1].target_position =
[; ;nozzle.c: 671: step_to_encoders[nozzle_step * 3 + 1];
"671
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 *U + &U _step_to_encoders * -> -> + * -> _nozzle_step `i -> 3 `i -> 1 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux ]
[; ;nozzle.c: 672: tracking_state[2].target_position =
[; ;nozzle.c: 673: step_to_encoders[nozzle_step * 3 + 2];
"673
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 *U + &U _step_to_encoders * -> -> + * -> _nozzle_step `i -> 3 `i -> 2 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux ]
[; ;nozzle.c: 675: if(tracking_state[0].target_position < tracking_state[0].min)
"675
[e $ ! < -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 `i -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `i 160  ]
[; ;nozzle.c: 676: {
"676
{
"677
[v _diff `c ~T0 @X0 1 a ]
[; ;nozzle.c: 677: int8_t diff = tracking_state[0].min - tracking_state[0].target_position;
[e = _diff -> - -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `i -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 `i `c ]
[; ;nozzle.c: 678: tracking_state[0].target_position += diff;
"678
[e =+ . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 _diff ]
[; ;nozzle.c: 680: radial_position += diff;
"680
[e =+ _radial_position _diff ]
"681
}
[e :U 160 ]
[; ;nozzle.c: 681: }
[; ;nozzle.c: 682: if(tracking_state[0].target_position > tracking_state[0].max)
"682
[e $ ! > -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 `i -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 `i 161  ]
[; ;nozzle.c: 683: {
"683
{
"684
[v _diff `c ~T0 @X0 1 a ]
[; ;nozzle.c: 684: int8_t diff = tracking_state[0].target_position - tracking_state[0].max;
[e = _diff -> - -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 `i -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 `i `c ]
[; ;nozzle.c: 685: tracking_state[0].target_position -= diff;
"685
[e =- . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 7 _diff ]
[; ;nozzle.c: 687: radial_position -= diff;
"687
[e =- _radial_position _diff ]
"688
}
[e :U 161 ]
[; ;nozzle.c: 688: }
[; ;nozzle.c: 691: if(tracking_state[0].changed < 0xff)
"691
[e $ ! < -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 `i -> 255 `i 162  ]
[; ;nozzle.c: 692: {
"692
{
[; ;nozzle.c: 693: tracking_state[0].changed++;
"693
[e ++ . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 -> -> 1 `i `uc ]
"694
}
[e :U 162 ]
[; ;nozzle.c: 694: }
[; ;nozzle.c: 695: if(tracking_state[1].changed < 0xff)
"695
[e $ ! < -> . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 `i -> 255 `i 163  ]
[; ;nozzle.c: 696: {
"696
{
[; ;nozzle.c: 697: tracking_state[1].changed++;
"697
[e ++ . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 -> -> 1 `i `uc ]
"698
}
[e :U 163 ]
[; ;nozzle.c: 698: }
[; ;nozzle.c: 699: if(tracking_state[2].changed < 0xff)
"699
[e $ ! < -> . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 `i -> 255 `i 164  ]
[; ;nozzle.c: 700: {
"700
{
[; ;nozzle.c: 701: tracking_state[2].changed++;
"701
[e ++ . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 10 -> -> 1 `i `uc ]
"702
}
[e :U 164 ]
[; ;nozzle.c: 702: }
[; ;nozzle.c: 713: }
"713
[e :UE 159 ]
}
"716
[v _handle_ir_code `(v ~T0 @X0 1 ef ]
"717
{
[; ;nozzle.c: 716: void handle_ir_code()
[; ;nozzle.c: 717: {
[e :U _handle_ir_code ]
[f ]
[; ;nozzle.c: 718: switch(ir_code)
"718
[e $U 167  ]
[; ;nozzle.c: 719: {
"719
{
[; ;nozzle.c: 720: case 0:
"720
[e :U 168 ]
[; ;nozzle.c: 721: PORTDbits.RD7 = !PORTDbits.RD7;
"721
[e = . . _PORTDbits 0 7 -> -> ! != -> . . _PORTDbits 0 7 `i -> -> -> 0 `i `Vuc `i `i `uc ]
[; ;nozzle.c: 722: if(nozzle_step > 0)
"722
[e $ ! > -> _nozzle_step `i -> 0 `i 169  ]
[; ;nozzle.c: 723: {
"723
{
[; ;nozzle.c: 724: nozzle_step--;
"724
[e -- _nozzle_step -> -> 1 `i `uc ]
[; ;nozzle.c: 725: handle_nozzle_step();
"725
[e ( _handle_nozzle_step ..  ]
"726
}
[e :U 169 ]
[; ;nozzle.c: 726: }
[; ;nozzle.c: 727: break;
"727
[e $U 166  ]
[; ;nozzle.c: 729: case 1:
"729
[e :U 170 ]
[; ;nozzle.c: 730: PORTDbits.RD7 = !PORTDbits.RD7;
"730
[e = . . _PORTDbits 0 7 -> -> ! != -> . . _PORTDbits 0 7 `i -> -> -> 0 `i `Vuc `i `i `uc ]
[; ;nozzle.c: 731: if(nozzle_step < 24)
"731
[e $ ! < -> _nozzle_step `i -> 24 `i 171  ]
[; ;nozzle.c: 732: {
"732
{
[; ;nozzle.c: 733: nozzle_step++;
"733
[e ++ _nozzle_step -> -> 1 `i `uc ]
[; ;nozzle.c: 734: handle_nozzle_step();
"734
[e ( _handle_nozzle_step ..  ]
"735
}
[e :U 171 ]
[; ;nozzle.c: 735: }
[; ;nozzle.c: 736: break;
"736
[e $U 166  ]
[; ;nozzle.c: 738: case 2:
"738
[e :U 172 ]
[; ;nozzle.c: 739: PORTDbits.RD7 = !PORTDbits.RD7;
"739
[e = . . _PORTDbits 0 7 -> -> ! != -> . . _PORTDbits 0 7 `i -> -> -> 0 `i `Vuc `i `i `uc ]
[; ;nozzle.c: 740: if(radial_position < tracking_state[0].max)
"740
[e $ ! < -> _radial_position `i -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 `i 173  ]
[; ;nozzle.c: 741: {
"741
{
[; ;nozzle.c: 742: radial_position++;
"742
[e ++ _radial_position -> -> 1 `i `c ]
[; ;nozzle.c: 743: handle_nozzle_step();
"743
[e ( _handle_nozzle_step ..  ]
"744
}
[e :U 173 ]
[; ;nozzle.c: 744: }
[; ;nozzle.c: 745: break;
"745
[e $U 166  ]
[; ;nozzle.c: 747: case 3:
"747
[e :U 174 ]
[; ;nozzle.c: 748: PORTDbits.RD7 = !PORTDbits.RD7;
"748
[e = . . _PORTDbits 0 7 -> -> ! != -> . . _PORTDbits 0 7 `i -> -> -> 0 `i `Vuc `i `i `uc ]
[; ;nozzle.c: 749: if(radial_position > tracking_state[0].min)
"749
[e $ ! > -> _radial_position `i -> . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `i 175  ]
[; ;nozzle.c: 750: {
"750
{
[; ;nozzle.c: 751: radial_position--;
"751
[e -- _radial_position -> -> 1 `i `c ]
[; ;nozzle.c: 752: handle_nozzle_step();
"752
[e ( _handle_nozzle_step ..  ]
"753
}
[e :U 175 ]
[; ;nozzle.c: 753: }
[; ;nozzle.c: 754: break;
"754
[e $U 166  ]
[; ;nozzle.c: 756: case 4:
"756
[e :U 176 ]
[; ;nozzle.c: 757: PORTDbits.RD7 = !PORTDbits.RD7;
"757
[e = . . _PORTDbits 0 7 -> -> ! != -> . . _PORTDbits 0 7 `i -> -> -> 0 `i `Vuc `i `i `uc ]
[; ;nozzle.c: 758: if(!armed)
"758
[e $ ! ! != -> _armed `i -> -> -> 0 `i `uc `i 177  ]
[; ;nozzle.c: 759: {
"759
{
[; ;nozzle.c: 760: arm_motors();
"760
[e ( _arm_motors ..  ]
"761
}
[; ;nozzle.c: 761: }
[e $U 178  ]
"762
[e :U 177 ]
[; ;nozzle.c: 762: else
[; ;nozzle.c: 763: {
"763
{
[; ;nozzle.c: 764: disarm_motors();
"764
[e ( _disarm_motors ..  ]
"765
}
[e :U 178 ]
[; ;nozzle.c: 765: }
[; ;nozzle.c: 766: break;
"766
[e $U 166  ]
"767
}
[; ;nozzle.c: 767: }
[e $U 166  ]
"718
[e :U 167 ]
[e [\ _ir_code , $ -> -> 0 `i `uc 168
 , $ -> -> 1 `i `uc 170
 , $ -> -> 2 `i `uc 172
 , $ -> -> 3 `i `uc 174
 , $ -> -> 4 `i `uc 176
 166 ]
"767
[e :U 166 ]
[; ;nozzle.c: 768: }
"768
[e :UE 165 ]
}
"770
[v _handle_ir2 `(v ~T0 @X0 1 ef ]
"771
{
[; ;nozzle.c: 770: void handle_ir2()
[; ;nozzle.c: 771: {
[e :U _handle_ir2 ]
[f ]
"782
[v _i `uc ~T0 @X0 1 a ]
"784
[v _got_it `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 782: uint8_t i;
[; ;nozzle.c: 784: uint8_t got_it = 0;
[e = _got_it -> -> 0 `i `uc ]
"786
[v _got_one `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 786: uint8_t got_one = 0;
[e = _got_one -> -> 0 `i `uc ]
[; ;nozzle.c: 787: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)) && !got_it; i++)
"787
{
[e = _i -> -> 0 `i `uc ]
[e $U 183  ]
"789
[e :U 180 ]
[; ;nozzle.c: 789: {
{
[; ;nozzle.c: 791: if(!ir_code_failed[i])
"791
[e $ ! ! != -> *U + &U _ir_code_failed * -> _i `ux -> -> # *U &U _ir_code_failed `ui `ux `i -> -> -> 0 `i `uc `i 184  ]
[; ;nozzle.c: 792: {
"792
{
"793
[v _code `*CS97 ~T0 @X0 1 a ]
[; ;nozzle.c: 793: const ir_code_t *code = &ir_codes[i];
[e = _code &U *U + &U _ir_codes * -> _i `ux -> -> # *U &U _ir_codes `ui `ux ]
"794
[v _data `*Ci ~T0 @X0 1 a ]
[; ;nozzle.c: 794: const int16_t *data = code->data;
[e = _data -> . *U _code 0 `*Ci ]
[; ;nozzle.c: 796: if(ir_offset < code->size)
"796
[e $ ! < -> _ir_offset `i -> . *U _code 1 `i 185  ]
[; ;nozzle.c: 797: {
"797
{
"799
[v _data_value `i ~T0 @X0 1 a ]
[; ;nozzle.c: 799: int16_t data_value = data[ir_offset];
[e = _data_value *U + _data * -> _ir_offset `ux -> -> # *U _data `ui `ux ]
"800
[v _error `i ~T0 @X0 1 a ]
[; ;nozzle.c: 800: int16_t error = ((data_value - ir_time) < 0 ? (-(data_value - ir_time)) : (data_value - ir_time));
[e = _error ? < - _data_value _ir_time -> 0 `i : -U - _data_value _ir_time - _data_value _ir_time ]
[; ;nozzle.c: 803: if(error > 16)
"803
[e $ ! > _error -> 16 `i 186  ]
[; ;nozzle.c: 804: {
"804
{
[; ;nozzle.c: 806: ir_code_failed[i] = 1;
"806
[e = *U + &U _ir_code_failed * -> _i `ux -> -> # *U &U _ir_code_failed `ui `ux -> -> 1 `i `uc ]
"807
}
[; ;nozzle.c: 807: }
[e $U 187  ]
"808
[e :U 186 ]
[; ;nozzle.c: 808: else
[; ;nozzle.c: 810: {
"810
{
[; ;nozzle.c: 812: if(ir_offset >= code->size - 1)
"812
[e $ ! >= -> _ir_offset `i - -> . *U _code 1 `i -> 1 `i 188  ]
[; ;nozzle.c: 813: {
"813
{
[; ;nozzle.c: 814: have_ir = 1;
"814
[e = _have_ir -> -> 1 `i `uc ]
[; ;nozzle.c: 815: repeat_delay = (100 / 2);
"815
[e = _repeat_delay -> / -> 100 `i -> 2 `i `uc ]
[; ;nozzle.c: 816: ir_code = code->value;
"816
[e = _ir_code . *U _code 2 ]
[; ;nozzle.c: 818: got_it = 1;
"818
[e = _got_it -> -> 1 `i `uc ]
"819
}
[e :U 188 ]
[; ;nozzle.c: 819: }
[; ;nozzle.c: 821: got_one = 1;
"821
[e = _got_one -> -> 1 `i `uc ]
"822
}
[e :U 187 ]
"823
}
[e :U 185 ]
"824
}
[e :U 184 ]
"825
}
"787
[e ++ _i -> -> 1 `i `uc ]
[e :U 183 ]
[e $ && < -> _i `ui / -> # _ir_codes `ui -> # `S97 `ui ! != -> _got_it `i -> -> -> 0 `i `uc `i 180  ]
[e :U 181 ]
"825
}
[; ;nozzle.c: 822: }
[; ;nozzle.c: 823: }
[; ;nozzle.c: 824: }
[; ;nozzle.c: 825: }
[; ;nozzle.c: 828: if(got_it)
"828
[e $ ! != -> _got_it `i -> -> -> 0 `i `uc `i 189  ]
[; ;nozzle.c: 829: {
"829
{
[; ;nozzle.c: 837: handle_ir_code();
"837
[e ( _handle_ir_code ..  ]
"838
}
[; ;nozzle.c: 838: }
[e $U 190  ]
"839
[e :U 189 ]
[; ;nozzle.c: 839: else
[; ;nozzle.c: 840: if(got_one)
"840
[e $ ! != -> _got_one `i -> -> -> 0 `i `uc `i 191  ]
[; ;nozzle.c: 841: {
"841
{
[; ;nozzle.c: 843: ir_offset++;
"843
[e ++ _ir_offset -> -> 1 `i `uc ]
"844
}
[; ;nozzle.c: 844: }
[e $U 192  ]
"845
[e :U 191 ]
[; ;nozzle.c: 845: else
[; ;nozzle.c: 846: {
"846
{
[; ;nozzle.c: 848: ir_offset = 0;
"848
[e = _ir_offset -> -> 0 `i `uc ]
[; ;nozzle.c: 849: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)); i++)
"849
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui / -> # _ir_codes `ui -> # `S97 `ui 193  ]
[e $U 194  ]
"850
[e :U 193 ]
[; ;nozzle.c: 850: {
{
[; ;nozzle.c: 851: ir_code_failed[i] = 0;
"851
[e = *U + &U _ir_code_failed * -> _i `ux -> -> # *U &U _ir_code_failed `ui `ux -> -> 0 `i `uc ]
"852
}
"849
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui / -> # _ir_codes `ui -> # `S97 `ui 193  ]
[e :U 194 ]
"852
}
"853
}
[e :U 192 ]
[e :U 190 ]
[; ;nozzle.c: 852: }
[; ;nozzle.c: 853: }
[; ;nozzle.c: 854: }
"854
[e :UE 179 ]
}
"856
[v _handle_ir `(v ~T0 @X0 1 ef ]
"857
{
[; ;nozzle.c: 856: void handle_ir()
[; ;nozzle.c: 857: {
[e :U _handle_ir ]
[f ]
"858
[v _i `uc ~T0 @X0 1 a ]
"860
[v _test_time `ui ~T0 @X0 1 a ]
[; ;nozzle.c: 858: uint8_t i;
[; ;nozzle.c: 860: uint16_t test_time = ((uint16_t)tmr2_high) << 8;
[e = _test_time << -> _tmr2_high `ui -> 8 `i ]
[; ;nozzle.c: 861: if(test_time > 30000 &&
[; ;nozzle.c: 862: !first_edge)
"862
[e $ ! && > _test_time -> -> 30000 `i `ui ! != -> _first_edge `i -> -> -> 0 `i `uc `i 197  ]
[; ;nozzle.c: 863: {
"863
{
[; ;nozzle.c: 869: INTCONbits.GIE = 0;
"869
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;nozzle.c: 871: OPTION_REGbits.INTEDG = 0;
"871
[e = . . _OPTION_REGbits 0 4 -> -> 0 `i `uc ]
[; ;nozzle.c: 872: TMR2 = 0;
"872
[e = _TMR2 -> -> 0 `i `uc ]
[; ;nozzle.c: 873: PIR1bits.TMR2IF = 0;
"873
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 874: INTCONbits.GIE = 1;
"874
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;nozzle.c: 876: ir_offset = 0;
"876
[e = _ir_offset -> -> 0 `i `uc ]
[; ;nozzle.c: 877: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)); i++)
"877
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui / -> # _ir_codes `ui -> # `S97 `ui 198  ]
[e $U 199  ]
"878
[e :U 198 ]
[; ;nozzle.c: 878: {
{
[; ;nozzle.c: 879: ir_code_failed[i] = 0;
"879
[e = *U + &U _ir_code_failed * -> _i `ux -> -> # *U &U _ir_code_failed `ui `ux -> -> 0 `i `uc ]
"880
}
"877
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui / -> # _ir_codes `ui -> # `S97 `ui 198  ]
[e :U 199 ]
"880
}
[; ;nozzle.c: 880: }
[; ;nozzle.c: 881: first_edge = 1;
"881
[e = _first_edge -> -> 1 `i `uc ]
[; ;nozzle.c: 882: have_ir = 0;
"882
[e = _have_ir -> -> 0 `i `uc ]
[; ;nozzle.c: 883: got_ir_int = 0;
"883
[e = _got_ir_int -> -> 0 `i `uc ]
[; ;nozzle.c: 884: PORTDbits.RD7 = 1;
"884
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"885
}
[e :U 197 ]
[; ;nozzle.c: 885: }
[; ;nozzle.c: 888: if(have_ir &&
[; ;nozzle.c: 889: repeat_delay == 0 &&
[; ;nozzle.c: 890: ir_code != 4 &&
[; ;nozzle.c: 891: (motor_master & (uint8_t)0b00111111) == (uint8_t)0b00111111)
"891
[e $ ! && && && != -> _have_ir `i -> -> -> 0 `i `uc `i == -> _repeat_delay `i -> 0 `i != -> _ir_code `i -> 4 `i == & -> _motor_master `i -> -> -> 63 `i `uc `i -> -> -> 63 `i `uc `i 201  ]
[; ;nozzle.c: 892: {
"892
{
[; ;nozzle.c: 895: handle_ir_code();
"895
[e ( _handle_ir_code ..  ]
"896
}
[e :U 201 ]
[; ;nozzle.c: 896: }
[; ;nozzle.c: 898: if(got_ir_int)
"898
[e $ ! != -> _got_ir_int `i -> -> -> 0 `i `Vuc `i 202  ]
[; ;nozzle.c: 899: {
"899
{
[; ;nozzle.c: 900: got_ir_int = 0;
"900
[e = _got_ir_int -> -> 0 `i `uc ]
[; ;nozzle.c: 902: OPTION_REGbits.INTEDG = !OPTION_REGbits.INTEDG;
"902
[e = . . _OPTION_REGbits 0 4 -> -> ! != -> . . _OPTION_REGbits 0 4 `i -> -> -> 0 `i `Vuc `i `i `uc ]
[; ;nozzle.c: 903: ir_time = ir_time2;
"903
[e = _ir_time -> _ir_time2 `i ]
[; ;nozzle.c: 904: if(first_edge)
"904
[e $ ! != -> _first_edge `i -> -> -> 0 `i `uc `i 203  ]
[; ;nozzle.c: 905: {
"905
{
[; ;nozzle.c: 906: first_edge = 0;
"906
[e = _first_edge -> -> 0 `i `uc ]
"907
}
[; ;nozzle.c: 907: }
[e $U 204  ]
"908
[e :U 203 ]
[; ;nozzle.c: 908: else
[; ;nozzle.c: 909: {
"909
{
[; ;nozzle.c: 910: handle_ir2();
"910
[e ( _handle_ir2 ..  ]
"911
}
[e :U 204 ]
"912
}
[e :U 202 ]
[; ;nozzle.c: 911: }
[; ;nozzle.c: 912: }
[; ;nozzle.c: 913: }
"913
[e :UE 196 ]
}
[; ;nozzle.c: 916: void charge_adc();
"917
[v _adc_state `*F1325 ~T0 @X0 1 e ]
[i _adc_state
&U _charge_adc
]
[; ;nozzle.c: 917: void (*adc_state)() = charge_adc;
"919
[v _capture_adc `(v ~T0 @X0 1 ef ]
"920
{
[; ;nozzle.c: 919: void capture_adc()
[; ;nozzle.c: 920: {
[e :U _capture_adc ]
[f ]
[; ;nozzle.c: 921: if(PIR1bits.ADIF)
"921
[e $ ! != -> . . _PIR1bits 0 6 `i -> -> -> 0 `i `Vuc `i 206  ]
[; ;nozzle.c: 922: {
"922
{
"923
[v _sensor `*S95 ~T0 @X0 1 a ]
[; ;nozzle.c: 923: sensor_state_t *sensor = &sensors[current_adc];
[e = _sensor &U *U + &U _sensors * -> _current_adc `ux -> -> # *U &U _sensors `ui `ux ]
[; ;nozzle.c: 924: sensor->analog = ADRESH;
"924
[e = . *U _sensor 0 _ADRESH ]
[; ;nozzle.c: 925: if(sensor->ns == 0 &&
[; ;nozzle.c: 926: sensor->analog >= 0x80 + 0x20)
"926
[e $ ! && == -> . *U _sensor 1 `i -> 0 `i >= -> . *U _sensor 0 `i + -> 128 `i -> 32 `i 207  ]
[; ;nozzle.c: 927: {
"927
{
[; ;nozzle.c: 928: sensor->ns = 1;
"928
[e = . *U _sensor 1 -> -> 1 `i `uc ]
[; ;nozzle.c: 929: sensor->position += sensor->step;
"929
[e =+ . *U _sensor 3 . *U _sensor 2 ]
"930
}
[; ;nozzle.c: 930: }
[e $U 208  ]
"931
[e :U 207 ]
[; ;nozzle.c: 931: else
[; ;nozzle.c: 932: if(sensor->ns == 1 &&
[; ;nozzle.c: 933: sensor->analog < 0x80 - 0x20)
"933
[e $ ! && == -> . *U _sensor 1 `i -> 1 `i < -> . *U _sensor 0 `i - -> 128 `i -> 32 `i 209  ]
[; ;nozzle.c: 934: {
"934
{
[; ;nozzle.c: 935: sensor->ns = 0;
"935
[e = . *U _sensor 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 936: sensor->position += sensor->step;
"936
[e =+ . *U _sensor 3 . *U _sensor 2 ]
"937
}
[e :U 209 ]
"939
[e :U 208 ]
[; ;nozzle.c: 937: }
[; ;nozzle.c: 939: current_adc++;
[e ++ _current_adc -> -> 1 `i `uc ]
[; ;nozzle.c: 940: if(current_adc >= 6)
"940
[e $ ! >= -> _current_adc `i -> 6 `i 210  ]
[; ;nozzle.c: 941: {
"941
{
[; ;nozzle.c: 942: current_adc = 0;
"942
[e = _current_adc -> -> 0 `i `uc ]
"959
}
[e :U 210 ]
[; ;nozzle.c: 959: }
[; ;nozzle.c: 961: switch(current_adc)
"961
[e $U 212  ]
[; ;nozzle.c: 962: {
"962
{
[; ;nozzle.c: 963: case 0:
"963
[e :U 213 ]
[; ;nozzle.c: 964: ADCON0 = 0b10000001 | 0b00000000;
"964
[e = _ADCON0 -> | -> 129 `i -> 0 `i `uc ]
[; ;nozzle.c: 965: break;
"965
[e $U 211  ]
[; ;nozzle.c: 966: case 1:
"966
[e :U 214 ]
[; ;nozzle.c: 967: ADCON0 = 0b10000001 | 0b00001000;
"967
[e = _ADCON0 -> | -> 129 `i -> 8 `i `uc ]
[; ;nozzle.c: 968: break;
"968
[e $U 211  ]
[; ;nozzle.c: 969: case 2:
"969
[e :U 215 ]
[; ;nozzle.c: 970: ADCON0 = 0b10000001 | 0b00010000;
"970
[e = _ADCON0 -> | -> 129 `i -> 16 `i `uc ]
[; ;nozzle.c: 971: break;
"971
[e $U 211  ]
[; ;nozzle.c: 972: case 3:
"972
[e :U 216 ]
[; ;nozzle.c: 973: ADCON0 = 0b10000001 | 0b00011000;
"973
[e = _ADCON0 -> | -> 129 `i -> 24 `i `uc ]
[; ;nozzle.c: 974: break;
"974
[e $U 211  ]
[; ;nozzle.c: 975: case 4:
"975
[e :U 217 ]
[; ;nozzle.c: 976: ADCON0 = 0b10000001 | 0b00100000;
"976
[e = _ADCON0 -> | -> 129 `i -> 32 `i `uc ]
[; ;nozzle.c: 977: break;
"977
[e $U 211  ]
[; ;nozzle.c: 978: case 5:
"978
[e :U 218 ]
[; ;nozzle.c: 979: ADCON0 = 0b10000001 | 0b00101000;
"979
[e = _ADCON0 -> | -> 129 `i -> 40 `i `uc ]
[; ;nozzle.c: 980: break;
"980
[e $U 211  ]
"981
}
[; ;nozzle.c: 981: }
[e $U 211  ]
"961
[e :U 212 ]
[e [\ _current_adc , $ -> -> 0 `i `uc 213
 , $ -> -> 1 `i `uc 214
 , $ -> -> 2 `i `uc 215
 , $ -> -> 3 `i `uc 216
 , $ -> -> 4 `i `uc 217
 , $ -> -> 5 `i `uc 218
 211 ]
"981
[e :U 211 ]
[; ;nozzle.c: 983: TMR0 = 0;
"983
[e = _TMR0 -> -> 0 `i `uc ]
[; ;nozzle.c: 984: INTCONbits.TMR0IF = 0;
"984
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
[; ;nozzle.c: 985: adc_state = charge_adc;
"985
[e = _adc_state &U _charge_adc ]
"986
}
[e :U 206 ]
[; ;nozzle.c: 986: }
[; ;nozzle.c: 987: }
"987
[e :UE 205 ]
}
"989
[v _charge_adc `(v ~T0 @X0 1 ef ]
"990
{
[; ;nozzle.c: 989: void charge_adc()
[; ;nozzle.c: 990: {
[e :U _charge_adc ]
[f ]
[; ;nozzle.c: 991: if(INTCONbits.TMR0IF)
"991
[e $ ! != -> . . _INTCONbits 0 2 `i -> -> -> 0 `i `Vuc `i 220  ]
[; ;nozzle.c: 992: {
"992
{
[; ;nozzle.c: 993: INTCONbits.TMR0IF;
"993
[e . . _INTCONbits 0 2 ]
[; ;nozzle.c: 994: PIR1bits.ADIF = 0;
"994
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
[; ;nozzle.c: 995: ADCON0bits.GO = 1;
"995
[e = . . _ADCON0bits 1 1 -> -> 1 `i `uc ]
[; ;nozzle.c: 996: adc_state = capture_adc;
"996
[e = _adc_state &U _capture_adc ]
"997
}
[e :U 220 ]
[; ;nozzle.c: 997: }
[; ;nozzle.c: 998: }
"998
[e :UE 219 ]
}
[v $root$_isr `(v ~T0 @X0 0 e ]
[v F1332 `(v ~T0 @X0 1 tf ]
"1200
[v _isr `IF1332 ~T0 @X0 1 e ]
"1201
{
[; ;nozzle.c: 1200: void interrupt isr()
[; ;nozzle.c: 1201: {
[e :U _isr ]
[f ]
[; ;nozzle.c: 1202: interrupt_done = 0;
"1202
[e = _interrupt_done -> -> 0 `i `uc ]
[; ;nozzle.c: 1203: while(!interrupt_done)
"1203
[e $U 222  ]
[e :U 223 ]
[; ;nozzle.c: 1204: {
"1204
{
[; ;nozzle.c: 1205: interrupt_done = 1;
"1205
[e = _interrupt_done -> -> 1 `i `uc ]
[; ;nozzle.c: 1208: if(PIR1bits.TMR1IF)
"1208
[e $ ! != -> . . _PIR1bits 0 0 `i -> -> -> 0 `i `Vuc `i 225  ]
[; ;nozzle.c: 1209: {
"1209
{
[; ;nozzle.c: 1210: PIR1bits.TMR1IF = 0;
"1210
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
[; ;nozzle.c: 1211: TMR1 = (-13300000 / 4 / 8 / 100);
"1211
[e = _TMR1 -> / / / -U -> 13300000 `l -> -> 4 `i `l -> -> 8 `i `l -> -> 100 `i `l `us ]
[; ;nozzle.c: 1212: got_tick = 1;
"1212
[e = _got_tick -> -> 1 `i `uc ]
"1213
[v _prev_port `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 1213: uint8_t prev_port = PORTD & ~(uint8_t)0b00111111;
[e = _prev_port -> & -> _PORTD `i ~ -> -> -> 63 `i `uc `i `uc ]
[; ;nozzle.c: 1214: PORTD = prev_port | motor_master;
"1214
[e = _PORTD -> | -> _prev_port `i -> _motor_master `i `uc ]
[; ;nozzle.c: 1215: interrupt_done = 0;
"1215
[e = _interrupt_done -> -> 0 `i `uc ]
"1216
}
[e :U 225 ]
[; ;nozzle.c: 1216: }
[; ;nozzle.c: 1219: if(PIR1bits.RCIF)
"1219
[e $ ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 226  ]
[; ;nozzle.c: 1220: {
"1220
{
[; ;nozzle.c: 1221: PIR1bits.RCIF = 0;
"1221
[e = . . _PIR1bits 0 5 -> -> 0 `i `uc ]
[; ;nozzle.c: 1222: serial_in = RCREG;
"1222
[e = _serial_in _RCREG ]
[; ;nozzle.c: 1223: have_serial = 1;
"1223
[e = _have_serial -> -> 1 `i `uc ]
[; ;nozzle.c: 1224: interrupt_done = 0;
"1224
[e = _interrupt_done -> -> 0 `i `uc ]
"1225
}
[e :U 226 ]
[; ;nozzle.c: 1225: }
[; ;nozzle.c: 1228: if(PIR1bits.TMR2IF)
"1228
[e $ ! != -> . . _PIR1bits 0 1 `i -> -> -> 0 `i `Vuc `i 227  ]
[; ;nozzle.c: 1229: {
"1229
{
[; ;nozzle.c: 1230: PIR1bits.TMR2IF = 0;
"1230
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 1231: tmr2_high++;
"1231
[e ++ _tmr2_high -> -> 1 `i `uc ]
[; ;nozzle.c: 1232: interrupt_done = 0;
"1232
[e = _interrupt_done -> -> 0 `i `uc ]
"1233
}
[e :U 227 ]
[; ;nozzle.c: 1233: }
[; ;nozzle.c: 1236: if(INTCONbits.INTF)
"1236
[e $ ! != -> . . _INTCONbits 0 1 `i -> -> -> 0 `i `Vuc `i 228  ]
[; ;nozzle.c: 1237: {
"1237
{
[; ;nozzle.c: 1238: INTCONbits.INTF = 0;
"1238
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 1240: ir_time2 = TMR2;
"1240
[e = _ir_time2 -> _TMR2 `ui ]
[; ;nozzle.c: 1242: TMR2 = 0;
"1242
[e = _TMR2 -> -> 0 `i `uc ]
[; ;nozzle.c: 1243: PIR1bits.TMR2IF = 0;
"1243
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 1246: ir_time2 |= ((uint16_t)tmr2_high) << 8;
"1246
[e =| _ir_time2 << -> _tmr2_high `ui -> 8 `i ]
[; ;nozzle.c: 1247: tmr2_high = 0;
"1247
[e = _tmr2_high -> -> 0 `i `uc ]
[; ;nozzle.c: 1248: got_ir_int = 1;
"1248
[e = _got_ir_int -> -> 1 `i `uc ]
[; ;nozzle.c: 1249: interrupt_done = 0;
"1249
[e = _interrupt_done -> -> 0 `i `uc ]
"1250
}
[e :U 228 ]
"1251
}
[e :U 222 ]
"1203
[e $ ! != -> _interrupt_done `i -> -> -> 0 `i `uc `i 223  ]
[e :U 224 ]
[; ;nozzle.c: 1250: }
[; ;nozzle.c: 1251: }
[; ;nozzle.c: 1252: }
"1252
[e :UE 221 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1254
[v _main `(v ~T0 @X0 1 ef ]
"1255
{
[; ;nozzle.c: 1254: void main()
[; ;nozzle.c: 1255: {
[e :U _main ]
[f ]
"1256
[v _i `uc ~T0 @X0 1 a ]
[; ;nozzle.c: 1256: uint8_t i;
[; ;nozzle.c: 1257: PORTDbits.RD7 = 1;
"1257
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
[; ;nozzle.c: 1258: TRISDbits.TRISD7 = 0;
"1258
[e = . . _TRISDbits 0 7 -> -> 0 `i `uc ]
[; ;nozzle.c: 1260: PORTD &= ~(uint8_t)0b00111111;
"1260
[e =& _PORTD -> ~ -> -> -> 63 `i `uc `i `uc ]
[; ;nozzle.c: 1261: TRISD &= ~(uint8_t)0b00111111;
"1261
[e =& _TRISD -> ~ -> -> -> 63 `i `uc `i `uc ]
[; ;nozzle.c: 1263: have_serial = 0;
"1263
[e = _have_serial -> -> 0 `i `uc ]
[; ;nozzle.c: 1264: SPBRG = (13300000 / 16 / 57600);
"1264
[e = _SPBRG -> / / -> 13300000 `l -> -> 16 `i `l -> 57600 `l `uc ]
[; ;nozzle.c: 1266: TXSTA = 0b00100100;
"1266
[e = _TXSTA -> -> 36 `i `uc ]
[; ;nozzle.c: 1268: RCSTA = 0b10010000;
"1268
[e = _RCSTA -> -> 144 `i `uc ]
[; ;nozzle.c: 1269: PIE1bits.RCIE = 1;
"1269
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
[; ;nozzle.c: 1273: INTCONbits.INTE = 1;
"1273
[e = . . _INTCONbits 0 4 -> -> 1 `i `uc ]
[; ;nozzle.c: 1274: INTCONbits.INTF = 0;
"1274
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 1276: OPTION_REGbits.INTEDG = 0;
"1276
[e = . . _OPTION_REGbits 0 4 -> -> 0 `i `uc ]
[; ;nozzle.c: 1277: ir_offset = 0;
"1277
[e = _ir_offset -> -> 0 `i `uc ]
[; ;nozzle.c: 1278: first_edge = 1;
"1278
[e = _first_edge -> -> 1 `i `uc ]
[; ;nozzle.c: 1281: T2CON = 0b00000111;
"1281
[e = _T2CON -> -> 7 `i `uc ]
[; ;nozzle.c: 1283: PR2 = 0xff;
"1283
[e = _PR2 -> -> 255 `i `uc ]
[; ;nozzle.c: 1284: PIR1bits.TMR2IF = 0;
"1284
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 1285: PIE1bits.TMR2IE = 1;
"1285
[e = . . _PIE1bits 0 1 -> -> 1 `i `uc ]
[; ;nozzle.c: 1290: T1CON = 0b00110001;
"1290
[e = _T1CON -> -> 49 `i `uc ]
[; ;nozzle.c: 1291: TMR1 = (-13300000 / 4 / 8 / 100);
"1291
[e = _TMR1 -> / / / -U -> 13300000 `l -> -> 4 `i `l -> -> 8 `i `l -> -> 100 `i `l `us ]
[; ;nozzle.c: 1293: memset(sensors, 0, sizeof(sensor_state_t) * 6);
"1293
[e ( _memset (3 , , -> &U _sensors `*v -> 0 `i * -> # `S95 `ui -> -> 6 `i `ui ]
[; ;nozzle.c: 1296: ADCON0 = 0b10000001;
"1296
[e = _ADCON0 -> -> 129 `i `uc ]
[; ;nozzle.c: 1298: ADCON1 = 0b01001001;
"1298
[e = _ADCON1 -> -> 73 `i `uc ]
[; ;nozzle.c: 1300: OPTION_REGbits.T0CS = 0;
"1300
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
[; ;nozzle.c: 1301: TMR0 = 0;
"1301
[e = _TMR0 -> -> 0 `i `uc ]
[; ;nozzle.c: 1302: INTCONbits.TMR0IF = 0;
"1302
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
[; ;nozzle.c: 1307: INTCONbits.PEIE = 1;
"1307
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
[; ;nozzle.c: 1308: INTCONbits.GIE = 1;
"1308
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;nozzle.c: 1310: print_text("\n\n\n\nWelcome to F-35 nozzle\n");
"1310
[e ( _print_text (1 :s 1C ]
[; ;nozzle.c: 1314: tracking_state[2].min = 8;
"1314
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 -> -> 8 `i `c ]
[; ;nozzle.c: 1315: tracking_state[2].max = 31;
"1315
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 -> -> 31 `i `c ]
[; ;nozzle.c: 1316: tracking_state[2].boundary = 5;
"1316
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 0 -> -> 5 `i `uc ]
[; ;nozzle.c: 1317: tracking_state[2].encoder = 4;
"1317
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 1 -> -> 4 `i `uc ]
[; ;nozzle.c: 1318: tracking_state[2].dec_mask = (uint8_t)0b00000010;
"1318
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 2 -> -> 2 `i `uc ]
[; ;nozzle.c: 1319: tracking_state[2].inc_mask = (uint8_t)0b00000001;
"1319
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 3 -> -> 1 `i `uc ]
[; ;nozzle.c: 1320: tracking_state[2].total_unmask = ~((uint8_t)0b00000001 | (uint8_t)0b00000010);
"1320
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 4 -> ~ | -> -> -> 1 `i `uc `i -> -> -> 2 `i `uc `i `uc ]
[; ;nozzle.c: 1321: tracking_state[2].total_mask = (uint8_t)0b00000001 | (uint8_t)0b00000010;
"1321
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 5 -> | -> -> -> 1 `i `uc `i -> -> -> 2 `i `uc `i `uc ]
[; ;nozzle.c: 1322: tracking_state[2].brake = 1;
"1322
[e = . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 11 -> -> 1 `i `uc ]
[; ;nozzle.c: 1324: tracking_state[1].min = 17;
"1324
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 -> -> 17 `i `c ]
[; ;nozzle.c: 1325: tracking_state[1].max = 41;
"1325
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 -> -> 41 `i `c ]
[; ;nozzle.c: 1326: tracking_state[1].boundary = 2;
"1326
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 0 -> -> 2 `i `uc ]
[; ;nozzle.c: 1327: tracking_state[1].encoder = 3;
"1327
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 1 -> -> 3 `i `uc ]
[; ;nozzle.c: 1328: tracking_state[1].dec_mask = (uint8_t)0b00100000;
"1328
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 2 -> -> 32 `i `uc ]
[; ;nozzle.c: 1329: tracking_state[1].inc_mask = (uint8_t)0b00010000;
"1329
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 3 -> -> 16 `i `uc ]
[; ;nozzle.c: 1330: tracking_state[1].total_unmask = ~((uint8_t)0b00100000 | (uint8_t)0b00010000);
"1330
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 4 -> ~ | -> -> -> 32 `i `uc `i -> -> -> 16 `i `uc `i `uc ]
[; ;nozzle.c: 1331: tracking_state[1].total_mask = (uint8_t)0b00100000 | (uint8_t)0b00010000;
"1331
[e = . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 5 -> | -> -> -> 32 `i `uc `i -> -> -> 16 `i `uc `i `uc ]
[; ;nozzle.c: 1333: tracking_state[0].min = 6;
"1333
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 -> -> 6 `i `c ]
[; ;nozzle.c: 1334: tracking_state[0].max = 45;
"1334
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 -> -> 45 `i `c ]
[; ;nozzle.c: 1335: tracking_state[0].boundary = 1;
"1335
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 0 -> -> 1 `i `uc ]
[; ;nozzle.c: 1336: tracking_state[0].encoder = 0;
"1336
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 1 -> -> 0 `i `uc ]
[; ;nozzle.c: 1337: tracking_state[0].dec_mask = (uint8_t)0b00001000;
"1337
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 2 -> -> 8 `i `uc ]
[; ;nozzle.c: 1338: tracking_state[0].inc_mask = (uint8_t)0b00000100;
"1338
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 3 -> -> 4 `i `uc ]
[; ;nozzle.c: 1339: tracking_state[0].total_unmask = ~((uint8_t)0b00000100 | (uint8_t)0b00001000);
"1339
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 4 -> ~ | -> -> -> 4 `i `uc `i -> -> -> 8 `i `uc `i `uc ]
[; ;nozzle.c: 1340: tracking_state[0].total_mask = (uint8_t)0b00000100 | (uint8_t)0b00001000;
"1340
[e = . *U + &U _tracking_state * -> -> -> 0 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 5 -> | -> -> -> 4 `i `uc `i -> -> -> 8 `i `uc `i `uc ]
"1343
[v F1359 `Cc ~T0 @X0 -> 0 `x s encoder0_values ]
[i F1359
:U ..
"1344
-> -U -> 10 `i `c
-> -U -> 10 `i `c
-> -U -> 10 `i `c
-> -U -> 10 `i `c
-> -U -> 10 `i `c
-> -U -> 10 `i `c
-> -U -> 10 `i `c
-> -U -> 9 `i `c
"1345
-> -U -> 9 `i `c
-> -U -> 8 `i `c
-> -U -> 8 `i `c
-> -U -> 7 `i `c
-> -U -> 6 `i `c
-> -U -> 6 `i `c
-> -U -> 5 `i `c
-> -U -> 5 `i `c
"1346
-> -U -> 4 `i `c
-> -U -> 4 `i `c
-> -U -> 3 `i `c
-> -U -> 3 `i `c
-> -U -> 2 `i `c
-> -U -> 2 `i `c
-> -U -> 1 `i `c
-> -U -> 1 `i `c
"1347
-> -> 0 `i `c
"1348
-> -> 0 `i `c
..
]
[; ;nozzle.c: 1343: const int8_t encoder0_values[] = {
[; ;nozzle.c: 1344: -10, -10, -10, -10, -10, -10, -10, -9,
[; ;nozzle.c: 1345: -9, -8, -8, -7, -6, -6, -5, -5,
[; ;nozzle.c: 1346: -4, -4, -3, -3, -2, -2, -1, -1,
[; ;nozzle.c: 1347: 0, 0
[; ;nozzle.c: 1348: };
[; ;nozzle.c: 1351: for(i = 0; i < 24 + 1; i++)
"1351
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i + -> 24 `i -> 1 `i 230  ]
[e $U 231  ]
"1352
[e :U 230 ]
[; ;nozzle.c: 1352: {
{
[; ;nozzle.c: 1353: step_to_encoders[i * 3 + 0] = encoder0_values[i];
"1353
[e = *U + &U _step_to_encoders * -> -> + * -> _i `i -> 3 `i -> 0 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux *U + &U F1359 * -> _i `ux -> -> # *U &U F1359 `ui `ux ]
[; ;nozzle.c: 1355: step_to_encoders[i * 3 + 1] =
[; ;nozzle.c: 1356: (uint32_t)tracking_state[1].min +
[; ;nozzle.c: 1357: (uint32_t)(tracking_state[1].max - tracking_state[1].min) * i / 24;
"1357
[e = *U + &U _step_to_encoders * -> -> + * -> _i `i -> 3 `i -> 1 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux -> + -> . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `ul / * -> - -> . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 `i -> . *U + &U _tracking_state * -> -> -> 1 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `i `ul -> _i `ul -> -> -> 24 `i `l `ul `c ]
[; ;nozzle.c: 1359: step_to_encoders[i * 3 + 2] =
[; ;nozzle.c: 1360: (uint32_t)tracking_state[2].min +
[; ;nozzle.c: 1361: (uint32_t)(tracking_state[2].max - tracking_state[2].min) * i / 24;
"1361
[e = *U + &U _step_to_encoders * -> -> + * -> _i `i -> 3 `i -> 2 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux -> + -> . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `ul / * -> - -> . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 9 `i -> . *U + &U _tracking_state * -> -> -> 2 `i `ui `ux -> -> # *U &U _tracking_state `ui `ux 8 `i `ul -> _i `ul -> -> -> 24 `i `l `ul `c ]
[; ;nozzle.c: 1363: print_text("step=");
"1363
[e ( _print_text (1 :s 2C ]
[; ;nozzle.c: 1364: print_number(i);
"1364
[e ( _print_number (1 -> _i `ui ]
[; ;nozzle.c: 1365: print_text("encoders=");
"1365
[e ( _print_text (1 :s 3C ]
[; ;nozzle.c: 1366: print_number_signed(step_to_encoders[i * 3 + 0]);
"1366
[e ( _print_number_signed (1 -> *U + &U _step_to_encoders * -> -> + * -> _i `i -> 3 `i -> 0 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux `i ]
[; ;nozzle.c: 1367: print_number_signed(step_to_encoders[i * 3 + 1]);
"1367
[e ( _print_number_signed (1 -> *U + &U _step_to_encoders * -> -> + * -> _i `i -> 3 `i -> 1 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux `i ]
[; ;nozzle.c: 1368: print_number_signed(step_to_encoders[i * 3 + 2]);
"1368
[e ( _print_number_signed (1 -> *U + &U _step_to_encoders * -> -> + * -> _i `i -> 3 `i -> 2 `i `ui `ux -> -> # *U &U _step_to_encoders `ui `ux `i ]
[; ;nozzle.c: 1369: print_text("\n");
"1369
[e ( _print_text (1 :s 4C ]
[; ;nozzle.c: 1370: flush_uart();
"1370
[e ( _flush_uart ..  ]
"1371
}
"1351
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i + -> 24 `i -> 1 `i 230  ]
[e :U 231 ]
"1371
}
[; ;nozzle.c: 1371: }
[; ;nozzle.c: 1378: while(1)
"1378
[e :U 234 ]
[; ;nozzle.c: 1379: {
"1379
{
[; ;nozzle.c: 1380: asm("clrwdt");
"1380
[; <" clrwdt ;# ">
[; ;nozzle.c: 1383: if(!armed)
"1383
[e $ ! ! != -> _armed `i -> -> -> 0 `i `uc `i 236  ]
[; ;nozzle.c: 1384: {
"1384
{
[; ;nozzle.c: 1385: motor_master &= ~(uint8_t)0b00111111;
"1385
[e =& _motor_master -> ~ -> -> -> 63 `i `uc `i `uc ]
"1386
}
[; ;nozzle.c: 1386: }
[e $U 237  ]
"1387
[e :U 236 ]
[; ;nozzle.c: 1387: else
[; ;nozzle.c: 1388: {
"1388
{
"1390
}
[e :U 237 ]
[; ;nozzle.c: 1390: }
[; ;nozzle.c: 1393: handle_uart();
"1393
[e ( _handle_uart ..  ]
[; ;nozzle.c: 1401: if(got_tick)
"1401
[e $ ! != -> _got_tick `i -> -> -> 0 `i `uc `i 238  ]
[; ;nozzle.c: 1402: {
"1402
{
[; ;nozzle.c: 1403: got_tick = 0;
"1403
[e = _got_tick -> -> 0 `i `uc ]
[; ;nozzle.c: 1404: for(i = 0; i < 3; i++)
"1404
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 239  ]
[e $U 240  ]
"1405
[e :U 239 ]
[; ;nozzle.c: 1405: {
{
"1406
[v _tracking `*S96 ~T0 @X0 1 a ]
[; ;nozzle.c: 1406: tracking_state_t *tracking = &tracking_state[i];
[e = _tracking &U *U + &U _tracking_state * -> _i `ux -> -> # *U &U _tracking_state `ui `ux ]
[; ;nozzle.c: 1407: if(tracking->timer > 0)
"1407
[e $ ! > -> . *U _tracking 6 `i -> 0 `i 242  ]
[; ;nozzle.c: 1408: {
"1408
{
[; ;nozzle.c: 1409: tracking->timer--;
"1409
[e -- . *U _tracking 6 -> -> 1 `i `uc ]
"1410
}
[e :U 242 ]
"1411
}
"1404
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 239  ]
[e :U 240 ]
"1411
}
[; ;nozzle.c: 1410: }
[; ;nozzle.c: 1411: }
[; ;nozzle.c: 1412: tick++;
"1412
[e ++ _tick -> -> 1 `i `uc ]
[; ;nozzle.c: 1413: if(repeat_delay > 0)
"1413
[e $ ! > -> _repeat_delay `i -> 0 `i 243  ]
[; ;nozzle.c: 1414: {
"1414
{
[; ;nozzle.c: 1415: repeat_delay--;
"1415
[e -- _repeat_delay -> -> 1 `i `uc ]
"1416
}
[e :U 243 ]
[; ;nozzle.c: 1416: }
[; ;nozzle.c: 1419: if(!armed)
"1419
[e $ ! ! != -> _armed `i -> -> -> 0 `i `uc `i 244  ]
[; ;nozzle.c: 1420: {
"1420
{
[; ;nozzle.c: 1421: led_counter++;
"1421
[e ++ _led_counter -> -> 1 `i `uc ]
[; ;nozzle.c: 1422: if(led_counter >= (100 / 2))
"1422
[e $ ! >= -> _led_counter `i / -> 100 `i -> 2 `i 245  ]
[; ;nozzle.c: 1423: {
"1423
{
[; ;nozzle.c: 1428: led_counter = 0;
"1428
[e = _led_counter -> -> 0 `i `uc ]
[; ;nozzle.c: 1429: PORTDbits.RD7 = !PORTDbits.RD7;
"1429
[e = . . _PORTDbits 0 7 -> -> ! != -> . . _PORTDbits 0 7 `i -> -> -> 0 `i `Vuc `i `i `uc ]
"1430
}
[e :U 245 ]
"1431
}
[e :U 244 ]
"1432
}
[e :U 238 ]
[; ;nozzle.c: 1430: }
[; ;nozzle.c: 1431: }
[; ;nozzle.c: 1432: }
[; ;nozzle.c: 1435: handle_ir();
"1435
[e ( _handle_ir ..  ]
[; ;nozzle.c: 1440: adc_state();
"1440
[e ( *U _adc_state ..  ]
[; ;nozzle.c: 1443: motor_state();
"1443
[e ( *U _motor_state ..  ]
"1444
}
[e :U 233 ]
"1378
[e $U 234  ]
[e :U 235 ]
[; ;nozzle.c: 1444: }
[; ;nozzle.c: 1446: }
"1446
[e :UE 229 ]
}
[a 3C 101 110 99 111 100 101 114 115 61 0 ]
[a 2C 115 116 101 112 61 0 ]
[a 1C 10 10 10 10 87 101 108 99 111 109 101 32 116 111 32 70 45 51 53 32 110 111 122 122 108 101 10 0 ]
[a 4C 10 0 ]

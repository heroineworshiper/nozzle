

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Sep 19 05:25:04 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	functab,global,class=ENTRY,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145                           
   146                           	psect	idataBANK0
   147  0800                     __pidataBANK0:	
   148                           
   149                           ;initializer for _adc_state
   150  0800  3404               	retlw	low (fp__charge_adc-fpbase)
   151                           
   152                           ;initializer for _motor_state
   153  0801  340A               	retlw	low (fp__motor_idle-fpbase)
   154                           
   155                           ;initializer for _first_edge
   156  0802  3401               	retlw	1
   157                           
   158                           	psect	stringtext
   159  0100                     __pstringtext:	
   160  0100                     stringtab:	
   161  0100                     __stringtab:	
   162                           
   163                           ;	String table - string pointers are 2 bytes each
   164  0100  1BFF               	btfsc	btemp+1,7
   165  0101  290A               	ljmp	stringcode
   166  0102  1383               	bcf	3,7
   167  0103  187F               	btfsc	btemp+1,0
   168  0104  1783               	bsf	3,7
   169  0105  0800               	movf	0,w
   170  0106  0A84               	incf	4,f
   171  0107  1903               	skipnz
   172  0108  0AFF               	incf	btemp+1,f
   173  0109  0008               	return
   174  010A                     stringcode:	
   175  010A  087F               	movf	btemp+1,w
   176  010B  397F               	andlw	127
   177  010C  008A               	movwf	10
   178  010D  0804               	movf	4,w
   179  010E  0A84               	incf	4,f
   180  010F  1903               	skipnz
   181  0110  0AFF               	incf	btemp+1,f
   182  0111  0082               	movwf	2
   183  0112                     __stringbase:	
   184  0112                     __end_of__stringtab:	
   185  0112                     main@encoder0_values:	
   186  0112  34F6               	retlw	-10
   187  0113  34F6               	retlw	-10
   188  0114  34F6               	retlw	-10
   189  0115  34F6               	retlw	-10
   190  0116  34F6               	retlw	-10
   191  0117  34F6               	retlw	-10
   192  0118  34F6               	retlw	-10
   193  0119  34F7               	retlw	-9
   194  011A  34F7               	retlw	-9
   195  011B  34F8               	retlw	-8
   196  011C  34F8               	retlw	-8
   197  011D  34F9               	retlw	-7
   198  011E  34FA               	retlw	-6
   199  011F  34FA               	retlw	-6
   200  0120  34FB               	retlw	-5
   201  0121  34FB               	retlw	-5
   202  0122  34FC               	retlw	-4
   203  0123  34FC               	retlw	-4
   204  0124  34FD               	retlw	-3
   205  0125  34FD               	retlw	-3
   206  0126  34FE               	retlw	-2
   207  0127  34FE               	retlw	-2
   208  0128  34FF               	retlw	-1
   209  0129  34FF               	retlw	-1
   210  012A  3400               	retlw	0
   211  012B  3400               	retlw	0
   212  012C                     __end_ofmain@encoder0_values:	
   213  012C                     _hex_table:	
   214  012C  3430               	retlw	48
   215  012D  3431               	retlw	49
   216  012E  3432               	retlw	50
   217  012F  3433               	retlw	51
   218  0130  3434               	retlw	52
   219  0131  3435               	retlw	53
   220  0132  3436               	retlw	54
   221  0133  3437               	retlw	55
   222  0134  3438               	retlw	56
   223  0135  3439               	retlw	57
   224  0136  3461               	retlw	97
   225  0137  3462               	retlw	98
   226  0138  3463               	retlw	99
   227  0139  3464               	retlw	100
   228  013A  3465               	retlw	101
   229  013B  3466               	retlw	102
   230  013C                     __end_of_hex_table:	
   231  013C                     _fastrev_data:	
   232  013C  3430               	retlw	48
   233  013D  3407               	retlw	7
   234  013E  34C4               	retlw	196
   235  013F  3403               	retlw	3
   236  0140  3479               	retlw	121
   237  0141  3400               	retlw	0
   238  0142  3472               	retlw	114
   239  0143  3400               	retlw	0
   240  0144  3475               	retlw	117
   241  0145  3400               	retlw	0
   242  0146  3459               	retlw	89
   243  0147  3401               	retlw	1
   244  0148  347B               	retlw	123
   245  0149  3400               	retlw	0
   246  014A  346E               	retlw	110
   247  014B  3400               	retlw	0
   248  014C  3479               	retlw	121
   249  014D  3400               	retlw	0
   250  014E  345A               	retlw	90
   251  014F  3401               	retlw	1
   252  0150  3479               	retlw	121
   253  0151  3400               	retlw	0
   254  0152  345A               	retlw	90
   255  0153  3401               	retlw	1
   256  0154  3478               	retlw	120
   257  0155  3400               	retlw	0
   258  0156  345B               	retlw	91
   259  0157  3401               	retlw	1
   260  0158  3479               	retlw	121
   261  0159  3400               	retlw	0
   262  015A  3456               	retlw	86
   263  015B  3401               	retlw	1
   264  015C  347E               	retlw	126
   265  015D  3400               	retlw	0
   266  015E  3469               	retlw	105
   267  015F  3400               	retlw	0
   268  0160  347E               	retlw	126
   269  0161  3400               	retlw	0
   270  0162  345A               	retlw	90
   271  0163  3401               	retlw	1
   272  0164  3478               	retlw	120
   273  0165  3400               	retlw	0
   274  0166  346A               	retlw	106
   275  0167  3400               	retlw	0
   276  0168  347D               	retlw	125
   277  0169  3400               	retlw	0
   278  016A  345A               	retlw	90
   279  016B  3401               	retlw	1
   280  016C  3479               	retlw	121
   281  016D  3400               	retlw	0
   282  016E  346F               	retlw	111
   283  016F  3400               	retlw	0
   284  0170  3478               	retlw	120
   285  0171  3400               	retlw	0
   286  0172  346A               	retlw	106
   287  0173  3400               	retlw	0
   288  0174  347D               	retlw	125
   289  0175  3400               	retlw	0
   290  0176  346D               	retlw	109
   291  0177  3400               	retlw	0
   292  0178  347B               	retlw	123
   293  0179  3400               	retlw	0
   294  017A  346D               	retlw	109
   295  017B  3400               	retlw	0
   296  017C  3479               	retlw	121
   297  017D  3400               	retlw	0
   298  017E  3455               	retlw	85
   299  017F  3401               	retlw	1
   300  0180  347D               	retlw	125
   301  0181  3400               	retlw	0
   302  0182  346D               	retlw	109
   303  0183  3400               	retlw	0
   304  0184  347A               	retlw	122
   305  0185  3400               	retlw	0
   306  0186  345A               	retlw	90
   307  0187  3401               	retlw	1
   308  0188  347A               	retlw	122
   309  0189  3400               	retlw	0
   310  018A  3458               	retlw	88
   311  018B  3401               	retlw	1
   312  018C  347B               	retlw	123
   313  018D  3400               	retlw	0
   314  018E  346E               	retlw	110
   315  018F  3400               	retlw	0
   316  0190  347A               	retlw	122
   317  0191  3400               	retlw	0
   318  0192  346D               	retlw	109
   319  0193  3400               	retlw	0
   320  0194  3479               	retlw	121
   321  0195  3400               	retlw	0
   322  0196  3469               	retlw	105
   323  0197  3400               	retlw	0
   324  0198  347F               	retlw	127
   325  0199  3400               	retlw	0
   326  019A  346D               	retlw	109
   327  019B  3400               	retlw	0
   328  019C  347A               	retlw	122
   329  019D  3400               	retlw	0
   330  019E  3455               	retlw	85
   331  019F  3401               	retlw	1
   332  01A0  347D               	retlw	125
   333  01A1  3400               	retlw	0
   334  01A2  345A               	retlw	90
   335  01A3  3401               	retlw	1
   336  01A4  347A               	retlw	122
   337  01A5  3400               	retlw	0
   338  01A6  3472               	retlw	114
   339  01A7  3400               	retlw	0
   340  01A8  3475               	retlw	117
   341  01A9  3400               	retlw	0
   342  01AA  346E               	retlw	110
   343  01AB  3400               	retlw	0
   344  01AC  347A               	retlw	122
   345  01AD  3400               	retlw	0
   346  01AE  3455               	retlw	85
   347  01AF  3401               	retlw	1
   348  01B0  347D               	retlw	125
   349  01B1  3400               	retlw	0
   350  01B2  345F               	retlw	95
   351  01B3  3401               	retlw	1
   352  01B4  3474               	retlw	116
   353  01B5  3400               	retlw	0
   354  01B6  345F               	retlw	95
   355  01B7  3401               	retlw	1
   356  01B8  3475               	retlw	117
   357  01B9  3400               	retlw	0
   358  01BA  345A               	retlw	90
   359  01BB  3401               	retlw	1
   360  01BC  347A               	retlw	122
   361  01BD  3400               	retlw	0
   362  01BE  346D               	retlw	109
   363  01BF  3400               	retlw	0
   364  01C0  347A               	retlw	122
   365  01C1  3400               	retlw	0
   366  01C2  346C               	retlw	108
   367  01C3  3420               	retlw	32
   368  01C4  342C               	retlw	44
   369  01C5  3407               	retlw	7
   370  01C6  34C6               	retlw	198
   371  01C7  3401               	retlw	1
   372  01C8  3478               	retlw	120
   373  01C9  3400               	retlw	0
   374  01CA                     __end_of_fastrev_data:	
   375  01CA                     _fastfwd_data:	
   376  01CA  342E               	retlw	46
   377  01CB  3407               	retlw	7
   378  01CC  34C3               	retlw	195
   379  01CD  3403               	retlw	3
   380  01CE  347D               	retlw	125
   381  01CF  3400               	retlw	0
   382  01D0  346F               	retlw	111
   383  01D1  3400               	retlw	0
   384  01D2  3478               	retlw	120
   385  01D3  3400               	retlw	0
   386  01D4  3457               	retlw	87
   387  01D5  3401               	retlw	1
   388  01D6  347E               	retlw	126
   389  01D7  3400               	retlw	0
   390  01D8  3469               	retlw	105
   391  01D9  3400               	retlw	0
   392  01DA  347C               	retlw	124
   393  01DB  3400               	retlw	0
   394  01DC  345F               	retlw	95
   395  01DD  3401               	retlw	1
   396  01DE  3474               	retlw	116
   397  01DF  3400               	retlw	0
   398  01E0  345C               	retlw	92
   399  01E1  3401               	retlw	1
   400  01E2  3478               	retlw	120
   401  01E3  3400               	retlw	0
   402  01E4  345F               	retlw	95
   403  01E5  3401               	retlw	1
   404  01E6  3474               	retlw	116
   405  01E7  3400               	retlw	0
   406  01E8  345F               	retlw	95
   407  01E9  3401               	retlw	1
   408  01EA  3476               	retlw	118
   409  01EB  3400               	retlw	0
   410  01EC  3471               	retlw	113
   411  01ED  3400               	retlw	0
   412  01EE  3474               	retlw	116
   413  01EF  3400               	retlw	0
   414  01F0  345B               	retlw	91
   415  01F1  3401               	retlw	1
   416  01F2  3478               	retlw	120
   417  01F3  3400               	retlw	0
   418  01F4  3473               	retlw	115
   419  01F5  3400               	retlw	0
   420  01F6  3474               	retlw	116
   421  01F7  3400               	retlw	0
   422  01F8  345B               	retlw	91
   423  01F9  3401               	retlw	1
   424  01FA  3478               	retlw	120
   425  01FB  3400               	retlw	0
   426  01FC  3470               	retlw	112
   427  01FD  3400               	retlw	0
   428  01FE  3477               	retlw	119
   429  01FF  3400               	retlw	0
   430  0200  3473               	retlw	115
   431  0201  3400               	retlw	0
   432  0202  3474               	retlw	116
   433  0203  3400               	retlw	0
   434  0204  3470               	retlw	112
   435  0205  3400               	retlw	0
   436  0206  3479               	retlw	121
   437  0207  3400               	retlw	0
   438  0208  3471               	retlw	113
   439  0209  3400               	retlw	0
   440  020A  3474               	retlw	116
   441  020B  3400               	retlw	0
   442  020C  3456               	retlw	86
   443  020D  3401               	retlw	1
   444  020E  347D               	retlw	125
   445  020F  3400               	retlw	0
   446  0210  346F               	retlw	111
   447  0211  3400               	retlw	0
   448  0212  3478               	retlw	120
   449  0213  3400               	retlw	0
   450  0214  3473               	retlw	115
   451  0215  3400               	retlw	0
   452  0216  3474               	retlw	116
   453  0217  3400               	retlw	0
   454  0218  345A               	retlw	90
   455  0219  3401               	retlw	1
   456  021A  3479               	retlw	121
   457  021B  3400               	retlw	0
   458  021C  345B               	retlw	91
   459  021D  3401               	retlw	1
   460  021E  3479               	retlw	121
   461  021F  3400               	retlw	0
   462  0220  345B               	retlw	91
   463  0221  3401               	retlw	1
   464  0222  3478               	retlw	120
   465  0223  3400               	retlw	0
   466  0224  3473               	retlw	115
   467  0225  3400               	retlw	0
   468  0226  3474               	retlw	116
   469  0227  3400               	retlw	0
   470  0228  346F               	retlw	111
   471  0229  3400               	retlw	0
   472  022A  3479               	retlw	121
   473  022B  3400               	retlw	0
   474  022C  3459               	retlw	89
   475  022D  3401               	retlw	1
   476  022E  3479               	retlw	121
   477  022F  3400               	retlw	0
   478  0230  3456               	retlw	86
   479  0231  3401               	retlw	1
   480  0232  347D               	retlw	125
   481  0233  3400               	retlw	0
   482  0234  345F               	retlw	95
   483  0235  3401               	retlw	1
   484  0236  3474               	retlw	116
   485  0237  3400               	retlw	0
   486  0238  3473               	retlw	115
   487  0239  3400               	retlw	0
   488  023A  3474               	retlw	116
   489  023B  3400               	retlw	0
   490  023C  346E               	retlw	110
   491  023D  3400               	retlw	0
   492  023E  3479               	retlw	121
   493  023F  3400               	retlw	0
   494  0240  3473               	retlw	115
   495  0241  3400               	retlw	0
   496  0242  3475               	retlw	117
   497  0243  3400               	retlw	0
   498  0244  345A               	retlw	90
   499  0245  3401               	retlw	1
   500  0246  3479               	retlw	121
   501  0247  3400               	retlw	0
   502  0248  345B               	retlw	91
   503  0249  3401               	retlw	1
   504  024A  3479               	retlw	121
   505  024B  3400               	retlw	0
   506  024C  346F               	retlw	111
   507  024D  3400               	retlw	0
   508  024E  347A               	retlw	122
   509  024F  3400               	retlw	0
   510  0250  3466               	retlw	102
   511  0251  3420               	retlw	32
   512  0252  3430               	retlw	48
   513  0253  3407               	retlw	7
   514  0254  34C6               	retlw	198
   515  0255  3401               	retlw	1
   516  0256  3479               	retlw	121
   517  0257  3400               	retlw	0
   518  0258                     __end_of_fastfwd_data:	
   519  0258                     _right_data:	
   520  0258  342F               	retlw	47
   521  0259  3407               	retlw	7
   522  025A  34C6               	retlw	198
   523  025B  3403               	retlw	3
   524  025C  3478               	retlw	120
   525  025D  3400               	retlw	0
   526  025E  3463               	retlw	99
   527  025F  3400               	retlw	0
   528  0260  3484               	retlw	132
   529  0261  3400               	retlw	0
   530  0262  3455               	retlw	85
   531  0263  3401               	retlw	1
   532  0264  347E               	retlw	126
   533  0265  3400               	retlw	0
   534  0266  3473               	retlw	115
   535  0267  3400               	retlw	0
   536  0268  3475               	retlw	117
   537  0269  3400               	retlw	0
   538  026A  345E               	retlw	94
   539  026B  3401               	retlw	1
   540  026C  3475               	retlw	117
   541  026D  3400               	retlw	0
   542  026E  3456               	retlw	86
   543  026F  3401               	retlw	1
   544  0270  347D               	retlw	125
   545  0271  3400               	retlw	0
   546  0272  3454               	retlw	84
   547  0273  3401               	retlw	1
   548  0274  347E               	retlw	126
   549  0275  3400               	retlw	0
   550  0276  3457               	retlw	87
   551  0277  3401               	retlw	1
   552  0278  347D               	retlw	125
   553  0279  3400               	retlw	0
   554  027A  346F               	retlw	111
   555  027B  3400               	retlw	0
   556  027C  3478               	retlw	120
   557  027D  3400               	retlw	0
   558  027E  3456               	retlw	86
   559  027F  3401               	retlw	1
   560  0280  347C               	retlw	124
   561  0281  3400               	retlw	0
   562  0282  346F               	retlw	111
   563  0283  3400               	retlw	0
   564  0284  3479               	retlw	121
   565  0285  3400               	retlw	0
   566  0286  345F               	retlw	95
   567  0287  3401               	retlw	1
   568  0288  3474               	retlw	116
   569  0289  3400               	retlw	0
   570  028A  3472               	retlw	114
   571  028B  3400               	retlw	0
   572  028C  3475               	retlw	117
   573  028D  3400               	retlw	0
   574  028E  3470               	retlw	112
   575  028F  3400               	retlw	0
   576  0290  3477               	retlw	119
   577  0291  3400               	retlw	0
   578  0292  3473               	retlw	115
   579  0293  3400               	retlw	0
   580  0294  3474               	retlw	116
   581  0295  3400               	retlw	0
   582  0296  3470               	retlw	112
   583  0297  3400               	retlw	0
   584  0298  3477               	retlw	119
   585  0299  3400               	retlw	0
   586  029A  345B               	retlw	91
   587  029B  3401               	retlw	1
   588  029C  3478               	retlw	120
   589  029D  3400               	retlw	0
   590  029E  346B               	retlw	107
   591  029F  3400               	retlw	0
   592  02A0  347E               	retlw	126
   593  02A1  3400               	retlw	0
   594  02A2  3459               	retlw	89
   595  02A3  3401               	retlw	1
   596  02A4  3479               	retlw	121
   597  02A5  3400               	retlw	0
   598  02A6  3473               	retlw	115
   599  02A7  3400               	retlw	0
   600  02A8  3474               	retlw	116
   601  02A9  3400               	retlw	0
   602  02AA  346B               	retlw	107
   603  02AB  3400               	retlw	0
   604  02AC  347D               	retlw	125
   605  02AD  3400               	retlw	0
   606  02AE  345A               	retlw	90
   607  02AF  3401               	retlw	1
   608  02B0  3479               	retlw	121
   609  02B1  3400               	retlw	0
   610  02B2  346E               	retlw	110
   611  02B3  3400               	retlw	0
   612  02B4  3479               	retlw	121
   613  02B5  3400               	retlw	0
   614  02B6  345A               	retlw	90
   615  02B7  3401               	retlw	1
   616  02B8  3478               	retlw	120
   617  02B9  3400               	retlw	0
   618  02BA  346B               	retlw	107
   619  02BB  3400               	retlw	0
   620  02BC  347C               	retlw	124
   621  02BD  3400               	retlw	0
   622  02BE  345B               	retlw	91
   623  02BF  3401               	retlw	1
   624  02C0  3478               	retlw	120
   625  02C1  3400               	retlw	0
   626  02C2  3472               	retlw	114
   627  02C3  3400               	retlw	0
   628  02C4  3476               	retlw	118
   629  02C5  3400               	retlw	0
   630  02C6  345B               	retlw	91
   631  02C7  3401               	retlw	1
   632  02C8  3477               	retlw	119
   633  02C9  3400               	retlw	0
   634  02CA  3457               	retlw	87
   635  02CB  3401               	retlw	1
   636  02CC  347C               	retlw	124
   637  02CD  3400               	retlw	0
   638  02CE  346E               	retlw	110
   639  02CF  3400               	retlw	0
   640  02D0  3479               	retlw	121
   641  02D1  3400               	retlw	0
   642  02D2  345E               	retlw	94
   643  02D3  3401               	retlw	1
   644  02D4  3474               	retlw	116
   645  02D5  3400               	retlw	0
   646  02D6  3472               	retlw	114
   647  02D7  3400               	retlw	0
   648  02D8  3475               	retlw	117
   649  02D9  3400               	retlw	0
   650  02DA  345B               	retlw	91
   651  02DB  3401               	retlw	1
   652  02DC  3478               	retlw	120
   653  02DD  3400               	retlw	0
   654  02DE  345D               	retlw	93
   655  02DF  3420               	retlw	32
   656  02E0  343A               	retlw	58
   657  02E1  3407               	retlw	7
   658  02E2  34C7               	retlw	199
   659  02E3  3401               	retlw	1
   660  02E4  347A               	retlw	122
   661  02E5  3400               	retlw	0
   662  02E6                     __end_of_right_data:	
   663  02E6                     _left_data:	
   664  02E6  3430               	retlw	48
   665  02E7  3407               	retlw	7
   666  02E8  34C7               	retlw	199
   667  02E9  3403               	retlw	3
   668  02EA  3478               	retlw	120
   669  02EB  3400               	retlw	0
   670  02EC  3473               	retlw	115
   671  02ED  3400               	retlw	0
   672  02EE  3475               	retlw	117
   673  02EF  3400               	retlw	0
   674  02F0  345A               	retlw	90
   675  02F1  3401               	retlw	1
   676  02F2  3479               	retlw	121
   677  02F3  3400               	retlw	0
   678  02F4  346E               	retlw	110
   679  02F5  3400               	retlw	0
   680  02F6  347A               	retlw	122
   681  02F7  3400               	retlw	0
   682  02F8  345B               	retlw	91
   683  02F9  3401               	retlw	1
   684  02FA  3477               	retlw	119
   685  02FB  3400               	retlw	0
   686  02FC  345B               	retlw	91
   687  02FD  3401               	retlw	1
   688  02FE  3478               	retlw	120
   689  02FF  3400               	retlw	0
   690  0300  345A               	retlw	90
   691  0301  3401               	retlw	1
   692  0302  3479               	retlw	121
   693  0303  3400               	retlw	0
   694  0304  345E               	retlw	94
   695  0305  3401               	retlw	1
   696  0306  3475               	retlw	117
   697  0307  3400               	retlw	0
   698  0308  3473               	retlw	115
   699  0309  3400               	retlw	0
   700  030A  3475               	retlw	117
   701  030B  3400               	retlw	0
   702  030C  345A               	retlw	90
   703  030D  3401               	retlw	1
   704  030E  3478               	retlw	120
   705  030F  3400               	retlw	0
   706  0310  346B               	retlw	107
   707  0311  3400               	retlw	0
   708  0312  347C               	retlw	124
   709  0313  3400               	retlw	0
   710  0314  345A               	retlw	90
   711  0315  3401               	retlw	1
   712  0316  3479               	retlw	121
   713  0317  3400               	retlw	0
   714  0318  346E               	retlw	110
   715  0319  3400               	retlw	0
   716  031A  3479               	retlw	121
   717  031B  3400               	retlw	0
   718  031C  346E               	retlw	110
   719  031D  3400               	retlw	0
   720  031E  3479               	retlw	121
   721  031F  3400               	retlw	0
   722  0320  346E               	retlw	110
   723  0321  3400               	retlw	0
   724  0322  347A               	retlw	122
   725  0323  3400               	retlw	0
   726  0324  346A               	retlw	106
   727  0325  3400               	retlw	0
   728  0326  347D               	retlw	125
   729  0327  3400               	retlw	0
   730  0328  345A               	retlw	90
   731  0329  3401               	retlw	1
   732  032A  3478               	retlw	120
   733  032B  3400               	retlw	0
   734  032C  345F               	retlw	95
   735  032D  3401               	retlw	1
   736  032E  3474               	retlw	116
   737  032F  3400               	retlw	0
   738  0330  3458               	retlw	88
   739  0331  3401               	retlw	1
   740  0332  347B               	retlw	123
   741  0333  3400               	retlw	0
   742  0334  346F               	retlw	111
   743  0335  3400               	retlw	0
   744  0336  3478               	retlw	120
   745  0337  3400               	retlw	0
   746  0338  346F               	retlw	111
   747  0339  3400               	retlw	0
   748  033A  3478               	retlw	120
   749  033B  3400               	retlw	0
   750  033C  345B               	retlw	91
   751  033D  3401               	retlw	1
   752  033E  3478               	retlw	120
   753  033F  3400               	retlw	0
   754  0340  346F               	retlw	111
   755  0341  3400               	retlw	0
   756  0342  3478               	retlw	120
   757  0343  3400               	retlw	0
   758  0344  345A               	retlw	90
   759  0345  3401               	retlw	1
   760  0346  3479               	retlw	121
   761  0347  3400               	retlw	0
   762  0348  3473               	retlw	115
   763  0349  3400               	retlw	0
   764  034A  3474               	retlw	116
   765  034B  3400               	retlw	0
   766  034C  346F               	retlw	111
   767  034D  3400               	retlw	0
   768  034E  3479               	retlw	121
   769  034F  3400               	retlw	0
   770  0350  3468               	retlw	104
   771  0351  3400               	retlw	0
   772  0352  347E               	retlw	126
   773  0353  3400               	retlw	0
   774  0354  345D               	retlw	93
   775  0355  3401               	retlw	1
   776  0356  3476               	retlw	118
   777  0357  3400               	retlw	0
   778  0358  345B               	retlw	91
   779  0359  3401               	retlw	1
   780  035A  3478               	retlw	120
   781  035B  3400               	retlw	0
   782  035C  346F               	retlw	111
   783  035D  3400               	retlw	0
   784  035E  3478               	retlw	120
   785  035F  3400               	retlw	0
   786  0360  345B               	retlw	91
   787  0361  3401               	retlw	1
   788  0362  3479               	retlw	121
   789  0363  3400               	retlw	0
   790  0364  346F               	retlw	111
   791  0365  3400               	retlw	0
   792  0366  3478               	retlw	120
   793  0367  3400               	retlw	0
   794  0368  3457               	retlw	87
   795  0369  3401               	retlw	1
   796  036A  347C               	retlw	124
   797  036B  3400               	retlw	0
   798  036C  3463               	retlw	99
   799  036D  3420               	retlw	32
   800  036E  3436               	retlw	54
   801  036F  3407               	retlw	7
   802  0370  34BF               	retlw	191
   803  0371  3401               	retlw	1
   804  0372  347A               	retlw	122
   805  0373  3400               	retlw	0
   806  0374                     __end_of_left_data:	
   807  0374                     _down_data:	
   808  0374  3437               	retlw	55
   809  0375  3407               	retlw	7
   810  0376  34C3               	retlw	195
   811  0377  3403               	retlw	3
   812  0378  3479               	retlw	121
   813  0379  3400               	retlw	0
   814  037A  346E               	retlw	110
   815  037B  3400               	retlw	0
   816  037C  3479               	retlw	121
   817  037D  3400               	retlw	0
   818  037E  3455               	retlw	85
   819  037F  3401               	retlw	1
   820  0380  347E               	retlw	126
   821  0381  3400               	retlw	0
   822  0382  3471               	retlw	113
   823  0383  3400               	retlw	0
   824  0384  3477               	retlw	119
   825  0385  3400               	retlw	0
   826  0386  345B               	retlw	91
   827  0387  3401               	retlw	1
   828  0388  3477               	retlw	119
   829  0389  3400               	retlw	0
   830  038A  345A               	retlw	90
   831  038B  3401               	retlw	1
   832  038C  3479               	retlw	121
   833  038D  3400               	retlw	0
   834  038E  345C               	retlw	92
   835  038F  3401               	retlw	1
   836  0390  3478               	retlw	120
   837  0391  3400               	retlw	0
   838  0392  3455               	retlw	85
   839  0393  3401               	retlw	1
   840  0394  347E               	retlw	126
   841  0395  3400               	retlw	0
   842  0396  346A               	retlw	106
   843  0397  3400               	retlw	0
   844  0398  347D               	retlw	125
   845  0399  3400               	retlw	0
   846  039A  345F               	retlw	95
   847  039B  3401               	retlw	1
   848  039C  3475               	retlw	117
   849  039D  3400               	retlw	0
   850  039E  346A               	retlw	106
   851  039F  3400               	retlw	0
   852  03A0  347D               	retlw	125
   853  03A1  3400               	retlw	0
   854  03A2  345A               	retlw	90
   855  03A3  3401               	retlw	1
   856  03A4  3479               	retlw	121
   857  03A5  3400               	retlw	0
   858  03A6  3473               	retlw	115
   859  03A7  3400               	retlw	0
   860  03A8  3474               	retlw	116
   861  03A9  3400               	retlw	0
   862  03AA  3473               	retlw	115
   863  03AB  3400               	retlw	0
   864  03AC  3475               	retlw	117
   865  03AD  3400               	retlw	0
   866  03AE  346D               	retlw	109
   867  03AF  3400               	retlw	0
   868  03B0  347A               	retlw	122
   869  03B1  3400               	retlw	0
   870  03B2  3472               	retlw	114
   871  03B3  3400               	retlw	0
   872  03B4  3475               	retlw	117
   873  03B5  3400               	retlw	0
   874  03B6  345B               	retlw	91
   875  03B7  3401               	retlw	1
   876  03B8  3477               	retlw	119
   877  03B9  3400               	retlw	0
   878  03BA  3456               	retlw	86
   879  03BB  3401               	retlw	1
   880  03BC  347D               	retlw	125
   881  03BD  3400               	retlw	0
   882  03BE  346A               	retlw	106
   883  03BF  3400               	retlw	0
   884  03C0  347D               	retlw	125
   885  03C1  3400               	retlw	0
   886  03C2  346C               	retlw	108
   887  03C3  3400               	retlw	0
   888  03C4  347B               	retlw	123
   889  03C5  3400               	retlw	0
   890  03C6  3455               	retlw	85
   891  03C7  3401               	retlw	1
   892  03C8  347E               	retlw	126
   893  03C9  3400               	retlw	0
   894  03CA  3459               	retlw	89
   895  03CB  3401               	retlw	1
   896  03CC  347B               	retlw	123
   897  03CD  3400               	retlw	0
   898  03CE  3468               	retlw	104
   899  03CF  3400               	retlw	0
   900  03D0  347E               	retlw	126
   901  03D1  3400               	retlw	0
   902  03D2  345B               	retlw	91
   903  03D3  3401               	retlw	1
   904  03D4  3478               	retlw	120
   905  03D5  3400               	retlw	0
   906  03D6  3470               	retlw	112
   907  03D7  3400               	retlw	0
   908  03D8  3477               	retlw	119
   909  03D9  3400               	retlw	0
   910  03DA  346E               	retlw	110
   911  03DB  3400               	retlw	0
   912  03DC  3479               	retlw	121
   913  03DD  3400               	retlw	0
   914  03DE  3457               	retlw	87
   915  03DF  3401               	retlw	1
   916  03E0  347C               	retlw	124
   917  03E1  3400               	retlw	0
   918  03E2  345C               	retlw	92
   919  03E3  3401               	retlw	1
   920  03E4  3478               	retlw	120
   921  03E5  3400               	retlw	0
   922  03E6  3473               	retlw	115
   923  03E7  3400               	retlw	0
   924  03E8  3474               	retlw	116
   925  03E9  3400               	retlw	0
   926  03EA  346B               	retlw	107
   927  03EB  3400               	retlw	0
   928  03EC  347E               	retlw	126
   929  03ED  3400               	retlw	0
   930  03EE  345A               	retlw	90
   931  03EF  3401               	retlw	1
   932  03F0  3478               	retlw	120
   933  03F1  3400               	retlw	0
   934  03F2  346F               	retlw	111
   935  03F3  3400               	retlw	0
   936  03F4  3477               	retlw	119
   937  03F5  3400               	retlw	0
   938  03F6  345C               	retlw	92
   939  03F7  3401               	retlw	1
   940  03F8  3478               	retlw	120
   941  03F9  3400               	retlw	0
   942  03FA  3468               	retlw	104
   943  03FB  3420               	retlw	32
   944  03FC  3430               	retlw	48
   945  03FD  3407               	retlw	7
   946  03FE  34C1               	retlw	193
   947  03FF  3401               	retlw	1
   948  0400  347A               	retlw	122
   949  0401  3400               	retlw	0
   950  0402                     __end_of_down_data:	
   951  0402                     _up_data:	
   952  0402  3430               	retlw	48
   953  0403  3407               	retlw	7
   954  0404  34CC               	retlw	204
   955  0405  3403               	retlw	3
   956  0406  3474               	retlw	116
   957  0407  3400               	retlw	0
   958  0408  346F               	retlw	111
   959  0409  3400               	retlw	0
   960  040A  3478               	retlw	120
   961  040B  3400               	retlw	0
   962  040C  345B               	retlw	91
   963  040D  3401               	retlw	1
   964  040E  3479               	retlw	121
   965  040F  3400               	retlw	0
   966  0410  3473               	retlw	115
   967  0411  3400               	retlw	0
   968  0412  3474               	retlw	116
   969  0413  3400               	retlw	0
   970  0414  345B               	retlw	91
   971  0415  3401               	retlw	1
   972  0416  3479               	retlw	121
   973  0417  3400               	retlw	0
   974  0418  3457               	retlw	87
   975  0419  3401               	retlw	1
   976  041A  347D               	retlw	125
   977  041B  3400               	retlw	0
   978  041C  345B               	retlw	91
   979  041D  3401               	retlw	1
   980  041E  3478               	retlw	120
   981  041F  3400               	retlw	0
   982  0420  345B               	retlw	91
   983  0421  3401               	retlw	1
   984  0422  3478               	retlw	120
   985  0423  3400               	retlw	0
   986  0424  346F               	retlw	111
   987  0425  3400               	retlw	0
   988  0426  3477               	retlw	119
   989  0427  3400               	retlw	0
   990  0428  345B               	retlw	91
   991  0429  3401               	retlw	1
   992  042A  3479               	retlw	121
   993  042B  3400               	retlw	0
   994  042C  3473               	retlw	115
   995  042D  3400               	retlw	0
   996  042E  3474               	retlw	116
   997  042F  3400               	retlw	0
   998  0430  345F               	retlw	95
   999  0431  3401               	retlw	1
  1000  0432  3474               	retlw	116
  1001  0433  3400               	retlw	0
  1002  0434  346F               	retlw	111
  1003  0435  3400               	retlw	0
  1004  0436  3478               	retlw	120
  1005  0437  3400               	retlw	0
  1006  0438  3473               	retlw	115
  1007  0439  3400               	retlw	0
  1008  043A  3474               	retlw	116
  1009  043B  3400               	retlw	0
  1010  043C  3473               	retlw	115
  1011  043D  3400               	retlw	0
  1012  043E  3474               	retlw	116
  1013  043F  3400               	retlw	0
  1014  0440  3473               	retlw	115
  1015  0441  3400               	retlw	0
  1016  0442  3475               	retlw	117
  1017  0443  3400               	retlw	0
  1018  0444  345E               	retlw	94
  1019  0445  3401               	retlw	1
  1020  0446  3474               	retlw	116
  1021  0447  3400               	retlw	0
  1022  0448  3473               	retlw	115
  1023  0449  3400               	retlw	0
  1024  044A  3474               	retlw	116
  1025  044B  3400               	retlw	0
  1026  044C  346F               	retlw	111
  1027  044D  3400               	retlw	0
  1028  044E  3478               	retlw	120
  1029  044F  3400               	retlw	0
  1030  0450  3474               	retlw	116
  1031  0451  3400               	retlw	0
  1032  0452  3475               	retlw	117
  1033  0453  3400               	retlw	0
  1034  0454  345D               	retlw	93
  1035  0455  3401               	retlw	1
  1036  0456  3475               	retlw	117
  1037  0457  3400               	retlw	0
  1038  0458  345B               	retlw	91
  1039  0459  3401               	retlw	1
  1040  045A  3477               	retlw	119
  1041  045B  3400               	retlw	0
  1042  045C  3473               	retlw	115
  1043  045D  3400               	retlw	0
  1044  045E  3474               	retlw	116
  1045  045F  3400               	retlw	0
  1046  0460  345C               	retlw	92
  1047  0461  3401               	retlw	1
  1048  0462  3477               	retlw	119
  1049  0463  3400               	retlw	0
  1050  0464  3473               	retlw	115
  1051  0465  3400               	retlw	0
  1052  0466  3474               	retlw	116
  1053  0467  3400               	retlw	0
  1054  0468  345D               	retlw	93
  1055  0469  3401               	retlw	1
  1056  046A  3476               	retlw	118
  1057  046B  3400               	retlw	0
  1058  046C  345C               	retlw	92
  1059  046D  3401               	retlw	1
  1060  046E  3477               	retlw	119
  1061  046F  3400               	retlw	0
  1062  0470  345F               	retlw	95
  1063  0471  3401               	retlw	1
  1064  0472  3474               	retlw	116
  1065  0473  3400               	retlw	0
  1066  0474  3470               	retlw	112
  1067  0475  3400               	retlw	0
  1068  0476  3477               	retlw	119
  1069  0477  3400               	retlw	0
  1070  0478  3474               	retlw	116
  1071  0479  3400               	retlw	0
  1072  047A  3474               	retlw	116
  1073  047B  3400               	retlw	0
  1074  047C  345E               	retlw	94
  1075  047D  3401               	retlw	1
  1076  047E  3475               	retlw	117
  1077  047F  3400               	retlw	0
  1078  0480  346E               	retlw	110
  1079  0481  3400               	retlw	0
  1080  0482  3478               	retlw	120
  1081  0483  3400               	retlw	0
  1082  0484  3456               	retlw	86
  1083  0485  3401               	retlw	1
  1084  0486  347E               	retlw	126
  1085  0487  3400               	retlw	0
  1086  0488  3463               	retlw	99
  1087  0489  3420               	retlw	32
  1088  048A  3434               	retlw	52
  1089  048B  3407               	retlw	7
  1090  048C  34C6               	retlw	198
  1091  048D  3401               	retlw	1
  1092  048E  347A               	retlw	122
  1093  048F  3400               	retlw	0
  1094  0490                     __end_of_up_data:	
  1095  0490                     _ir_codes:	
  1096  0490  3402               	retlw	low (_up_data| (0+32768))
  1097  0491  3484               	retlw	high (_up_data| (0+32768))
  1098  0492  3447               	retlw	71
  1099  0493  3400               	retlw	0
  1100  0494  3474               	retlw	low (_down_data| (0+32768))
  1101  0495  3483               	retlw	high (_down_data| (0+32768))
  1102  0496  3447               	retlw	71
  1103  0497  3401               	retlw	1
  1104  0498  34E6               	retlw	low (_left_data| (0+32768))
  1105  0499  3482               	retlw	high (_left_data| (0+32768))
  1106  049A  3447               	retlw	71
  1107  049B  3402               	retlw	2
  1108  049C  3458               	retlw	low (_right_data| (0+32768))
  1109  049D  3482               	retlw	high (_right_data| (0+32768))
  1110  049E  3447               	retlw	71
  1111  049F  3403               	retlw	3
  1112  04A0  34CA               	retlw	low (_fastfwd_data| (0+32768))
  1113  04A1  3481               	retlw	high (_fastfwd_data| (0+32768))
  1114  04A2  3447               	retlw	71
  1115  04A3  3405               	retlw	5
  1116  04A4  343C               	retlw	low (_fastrev_data| (0+32768))
  1117  04A5  3481               	retlw	high (_fastrev_data| (0+32768))
  1118  04A6  3447               	retlw	71
  1119  04A7  3404               	retlw	4
  1120  04A8                     __end_of_ir_codes:	
  1121  000E                     _TMR1	set	14
  1122  0010                     _T1CON	set	16
  1123  0012                     _T2CON	set	18
  1124  0018                     _RCSTA	set	24
  1125  001A                     _RCREG	set	26
  1126  001F                     _ADCON0bits	set	31
  1127  0001                     _TMR0	set	1
  1128  001F                     _ADCON0	set	31
  1129  001E                     _ADRESH	set	30
  1130  0011                     _TMR2	set	17
  1131  000B                     _INTCONbits	set	11
  1132  0008                     _PORTD	set	8
  1133  0008                     _PORTDbits	set	8
  1134  0019                     _TXREG	set	25
  1135  000C                     _PIR1bits	set	12
  1136  009F                     _ADCON1	set	159
  1137  0092                     _PR2	set	146
  1138  008C                     _PIE1bits	set	140
  1139  0098                     _TXSTA	set	152
  1140  0099                     _SPBRG	set	153
  1141  0088                     _TRISD	set	136
  1142  0088                     _TRISDbits	set	136
  1143  0081                     _OPTION_REGbits	set	129
  1144  04A8                     STR_1:	
  1145  04A8  340A               	retlw	10
  1146  04A9  340A               	retlw	10
  1147  04AA  340A               	retlw	10
  1148  04AB  340A               	retlw	10
  1149  04AC  3457               	retlw	87	;'W'
  1150  04AD  3465               	retlw	101	;'e'
  1151  04AE  346C               	retlw	108	;'l'
  1152  04AF  3463               	retlw	99	;'c'
  1153  04B0  346F               	retlw	111	;'o'
  1154  04B1  346D               	retlw	109	;'m'
  1155  04B2  3465               	retlw	101	;'e'
  1156  04B3  3420               	retlw	32	;' '
  1157  04B4  3474               	retlw	116	;'t'
  1158  04B5  346F               	retlw	111	;'o'
  1159  04B6  3420               	retlw	32	;' '
  1160  04B7  3446               	retlw	70	;'F'
  1161  04B8  342D               	retlw	45	;'-'
  1162  04B9  3433               	retlw	51	;'3'
  1163  04BA  3435               	retlw	53	;'5'
  1164  04BB  3420               	retlw	32	;' '
  1165  04BC  346E               	retlw	110	;'n'
  1166  04BD  346F               	retlw	111	;'o'
  1167  04BE  347A               	retlw	122	;'z'
  1168  04BF  347A               	retlw	122	;'z'
  1169  04C0  346C               	retlw	108	;'l'
  1170  04C1  3465               	retlw	101	;'e'
  1171  04C2  340A               	retlw	10
  1172  04C3  3400               	retlw	0
  1173  04C4                     STR_3:	
  1174  04C4  3465               	retlw	101	;'e'
  1175  04C5  346E               	retlw	110	;'n'
  1176  04C6  3463               	retlw	99	;'c'
  1177  04C7  346F               	retlw	111	;'o'
  1178  04C8  3464               	retlw	100	;'d'
  1179  04C9  3465               	retlw	101	;'e'
  1180  04CA  3472               	retlw	114	;'r'
  1181  04CB  3473               	retlw	115	;'s'
  1182  04CC  343D               	retlw	61	;'='
  1183  04CD  3400               	retlw	0
  1184  04CE                     STR_2:	
  1185  04CE  3473               	retlw	115	;'s'
  1186  04CF  3474               	retlw	116	;'t'
  1187  04D0  3465               	retlw	101	;'e'
  1188  04D1  3470               	retlw	112	;'p'
  1189  04D2  343D               	retlw	61	;'='
  1190  04D3  3400               	retlw	0
  1191  04C2                     
  1192                           ; #config settings
  1193  0000                     
  1194                           	psect	cinit
  1195  0015                     start_initialization:	
  1196  0015                     __initialization:	
  1197                           
  1198                           ; Initialize objects allocated to BANK0
  1199  0015  120A  158A  2000  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1200  001A  00E2               	movwf	__pdataBANK0& (0+127)
  1201  001B  120A  158A  2001  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1202  0020  00E3               	movwf	(__pdataBANK0+1)& (0+127)
  1203  0021  120A  158A  2002  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
  1204  0026  00E4               	movwf	(__pdataBANK0+2)& (0+127)
  1205                           
  1206                           ; Clear objects allocated to BANK3
  1207  0027  1783               	bsf	3,7	;select IRP bank2
  1208  0028  3090               	movlw	low __pbssBANK3
  1209  0029  0084               	movwf	4
  1210  002A  30DB               	movlw	low (__pbssBANK3+75)
  1211  002B  160A  118A  273E  120A  118A  	fcall	clear_ram0
  1212                           
  1213                           ; Clear objects allocated to BANK2
  1214  0030  3010               	movlw	low __pbssBANK2
  1215  0031  0084               	movwf	4
  1216  0032  3050               	movlw	low (__pbssBANK2+64)
  1217  0033  160A  118A  273E  120A  118A  	fcall	clear_ram0
  1218                           
  1219                           ; Clear objects allocated to BANK1
  1220  0038  1383               	bcf	3,7	;select IRP bank0
  1221  0039  30A0               	movlw	low __pbssBANK1
  1222  003A  0084               	movwf	4
  1223  003B  30DC               	movlw	low (__pbssBANK1+60)
  1224  003C  160A  118A  273E  120A  118A  	fcall	clear_ram0
  1225                           
  1226                           ; Clear objects allocated to BANK0
  1227  0041  3049               	movlw	low __pbssBANK0
  1228  0042  0084               	movwf	4
  1229  0043  3062               	movlw	low (__pbssBANK0+25)
  1230  0044  160A  118A  273E   	fcall	clear_ram0
  1231                           
  1232                           ; Clear objects allocated to COMMON
  1233  0047  01F7               	clrf	__pbssCOMMON& (0+127)
  1234  0048  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1235  0049  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1236  004A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1237  004B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1238  004C  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  1239  004D                     end_of_initialization:	
  1240                           ;End of C runtime variable initialization code
  1241                           
  1242  004D                     __end_of__initialization:	
  1243  004D  0183               	clrf	3
  1244  004E  120A  118A  2CD4   	ljmp	_main	;jump to C main() function
  1245                           
  1246                           	psect	bssCOMMON
  1247  0077                     __pbssCOMMON:	
  1248  0077                     _uart_position2:	
  1249  0077                     	ds	1
  1250  0078                     _uart_position1:	
  1251  0078                     	ds	1
  1252  0079                     _uart_size:	
  1253  0079                     	ds	1
  1254  007A                     _interrupt_done:	
  1255  007A                     	ds	1
  1256  007B                     _serial_in:	
  1257  007B                     	ds	1
  1258  007C                     _have_serial:	
  1259  007C                     	ds	1
  1260                           
  1261                           	psect	bssBANK0
  1262  0049                     __pbssBANK0:	
  1263  0049                     _ir_code_failed:	
  1264  0049                     	ds	6
  1265  004F                     _ir_time2:	
  1266  004F                     	ds	2
  1267  0051                     _ir_time:	
  1268  0051                     	ds	2
  1269  0053                     _tmr2_high:	
  1270  0053                     	ds	1
  1271  0054                     _got_ir_int:	
  1272  0054                     	ds	1
  1273  0055                     _repeat_delay:	
  1274  0055                     	ds	1
  1275  0056                     _ir_code:	
  1276  0056                     	ds	1
  1277  0057                     _have_ir:	
  1278  0057                     	ds	1
  1279  0058                     _ir_offset:	
  1280  0058                     	ds	1
  1281  0059                     _radial_position:	
  1282  0059                     	ds	1
  1283  005A                     _current_adc:	
  1284  005A                     	ds	1
  1285  005B                     _motor_master:	
  1286  005B                     	ds	1
  1287  005C                     _current_motor:	
  1288  005C                     	ds	1
  1289  005D                     _tick:	
  1290  005D                     	ds	1
  1291  005E                     _got_tick:	
  1292  005E                     	ds	1
  1293  005F                     _led_counter:	
  1294  005F                     	ds	1
  1295  0060                     _armed:	
  1296  0060                     	ds	1
  1297  0061                     _nozzle_step:	
  1298  0061                     	ds	1
  1299                           
  1300                           	psect	dataBANK0
  1301  0062                     __pdataBANK0:	
  1302  0062                     _adc_state:	
  1303  0062                     	ds	1
  1304  0063                     _motor_state:	
  1305  0063                     	ds	1
  1306  0064                     _first_edge:	
  1307  0064                     	ds	1
  1308                           
  1309                           	psect	bssBANK1
  1310  00A0                     __pbssBANK1:	
  1311  00A0                     _tracking_state:	
  1312  00A0                     	ds	36
  1313  00C4                     _sensors:	
  1314  00C4                     	ds	24
  1315                           
  1316                           	psect	bssBANK3
  1317  0190                     __pbssBANK3:	
  1318  0190                     _step_to_encoders:	
  1319  0190                     	ds	75
  1320                           
  1321                           	psect	bssBANK2
  1322  0110                     __pbssBANK2:	
  1323  0110                     _uart_buffer:	
  1324  0110                     	ds	64
  1325                           
  1326                           	psect	clrtext
  1327  173E                     clear_ram0:	
  1328                           ;	Called with FSR containing the base address, and
  1329                           ;	W with the last address+1
  1330                           
  1331  173E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1332  173F                     clrloop0:	
  1333  173F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1334  1740  0A84               	incf	4,f	;increment pointer
  1335  1741  0604               	xorwf	4,w	;XOR with final address
  1336  1742  1903               	btfsc	3,2	;have we reached the end yet?
  1337  1743  3400               	retlw	0	;all done for this memory range, return
  1338  1744  0604               	xorwf	4,w	;XOR again to restore value
  1339  1745  2F3F               	goto	clrloop0	;do the next byte
  1340                           
  1341                           	psect	cstackCOMMON
  1342  0070                     __pcstackCOMMON:	
  1343  0070                     ?_motor_idle:	
  1344  0070                     ?_motor_home1:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_charge_adc:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_print_byte:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ?_handle_uart:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_flush_uart:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_motor_tracking:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_motor_home6:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_motor_home5:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_motor_home4:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_motor_home3:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_motor_home2:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ?_arm_motors:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_disarm_motors:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_handle_nozzle_step:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_handle_ir_code:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_handle_ir2:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_handle_ir:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ?_capture_adc:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_isr:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ??_isr:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_main:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407                           
  1408                           ; 1 bytes @ 0x0
  1409  0070                     	ds	6
  1410  0076                     isr@prev_port:	
  1411                           
  1412                           ; 1 bytes @ 0x6
  1413  0076                     	ds	1
  1414                           
  1415                           	psect	cstackBANK0
  1416  0020                     __pcstackBANK0:	
  1417  0020                     ??_motor_idle:	
  1418  0020                     ??_charge_adc:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0020                     ?_memset:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0020                     ??_print_byte:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0020                     ??_handle_uart:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0020                     ??_arm_motors:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0020                     ??_disarm_motors:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0020                     ??_capture_adc:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0020                     ?___bmul:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0020                     ?___lwdiv:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     ?___lmul:	
  1446                           ; 2 bytes @ 0x0
  1447                           
  1448  0020                     ___bmul@multiplicand:	
  1449                           ; 4 bytes @ 0x0
  1450                           
  1451  0020                     ___lwdiv@divisor:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0020                     memset@c:	
  1455                           ; 2 bytes @ 0x0
  1456                           
  1457  0020                     ___lmul@multiplier:	
  1458                           ; 2 bytes @ 0x0
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x0
  1462  0020                     	ds	1
  1463  0021                     ??_flush_uart:	
  1464  0021                     ??___bmul:	
  1465                           ; 1 bytes @ 0x1
  1466                           
  1467  0021                     print_byte@c:	
  1468                           ; 1 bytes @ 0x1
  1469                           
  1470                           
  1471                           ; 1 bytes @ 0x1
  1472  0021                     	ds	1
  1473  0022                     ?_print_text:	
  1474  0022                     capture_adc@sensor:	
  1475                           ; 1 bytes @ 0x2
  1476                           
  1477  0022                     ___bmul@product:	
  1478                           ; 1 bytes @ 0x2
  1479                           
  1480  0022                     print_text@s:	
  1481                           ; 1 bytes @ 0x2
  1482                           
  1483  0022                     ___lwdiv@dividend:	
  1484                           ; 2 bytes @ 0x2
  1485                           
  1486  0022                     memset@n:	
  1487                           ; 2 bytes @ 0x2
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x2
  1491  0022                     	ds	1
  1492  0023                     ___bmul@multiplier:	
  1493                           
  1494                           ; 1 bytes @ 0x3
  1495  0023                     	ds	1
  1496  0024                     ??_motor_home1:	
  1497  0024                     ??_memset:	
  1498                           ; 1 bytes @ 0x4
  1499                           
  1500  0024                     ??_print_text:	
  1501                           ; 1 bytes @ 0x4
  1502                           
  1503  0024                     ??_motor_tracking:	
  1504                           ; 1 bytes @ 0x4
  1505                           
  1506  0024                     ??_motor_home6:	
  1507                           ; 1 bytes @ 0x4
  1508                           
  1509  0024                     ??_motor_home5:	
  1510                           ; 1 bytes @ 0x4
  1511                           
  1512  0024                     ??_motor_home4:	
  1513                           ; 1 bytes @ 0x4
  1514                           
  1515  0024                     ??_motor_home3:	
  1516                           ; 1 bytes @ 0x4
  1517                           
  1518  0024                     ??_motor_home2:	
  1519                           ; 1 bytes @ 0x4
  1520                           
  1521  0024                     ??_handle_nozzle_step:	
  1522                           ; 1 bytes @ 0x4
  1523                           
  1524  0024                     ??___lwdiv:	
  1525                           ; 1 bytes @ 0x4
  1526                           
  1527  0024                     ___lmul@multiplicand:	
  1528                           ; 1 bytes @ 0x4
  1529                           
  1530                           
  1531                           ; 4 bytes @ 0x4
  1532  0024                     	ds	1
  1533  0025                     memset@p1:	
  1534  0025                     ___lwdiv@quotient:	
  1535                           ; 1 bytes @ 0x5
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x5
  1539  0025                     	ds	1
  1540  0026                     motor_tracking@encoder:	
  1541  0026                     motor_home6@current_encoder:	
  1542                           ; 1 bytes @ 0x6
  1543                           
  1544  0026                     motor_home4@current_boundary:	
  1545                           ; 1 bytes @ 0x6
  1546                           
  1547  0026                     motor_home3@tracking:	
  1548                           ; 1 bytes @ 0x6
  1549                           
  1550  0026                     motor_home2@current_boundary:	
  1551                           ; 1 bytes @ 0x6
  1552                           
  1553  0026                     motor_home1@current_boundary:	
  1554                           ; 1 bytes @ 0x6
  1555                           
  1556  0026                     handle_nozzle_step@diff:	
  1557                           ; 1 bytes @ 0x6
  1558                           
  1559  0026                     memset@p:	
  1560                           ; 1 bytes @ 0x6
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x6
  1564  0026                     	ds	1
  1565  0027                     motor_tracking@tracking:	
  1566  0027                     motor_home6@tracking:	
  1567                           ; 1 bytes @ 0x7
  1568                           
  1569  0027                     motor_home5@current_encoder:	
  1570                           ; 1 bytes @ 0x7
  1571                           
  1572  0027                     handle_nozzle_step@diff_488:	
  1573                           ; 1 bytes @ 0x7
  1574                           
  1575  0027                     ___lwdiv@counter:	
  1576                           ; 1 bytes @ 0x7
  1577                           
  1578  0027                     _motor_home4$425:	
  1579                           ; 1 bytes @ 0x7
  1580                           
  1581  0027                     _motor_home2$457:	
  1582                           ; 2 bytes @ 0x7
  1583                           
  1584  0027                     _motor_home1$474:	
  1585                           ; 2 bytes @ 0x7
  1586                           
  1587                           
  1588                           ; 2 bytes @ 0x7
  1589  0027                     	ds	1
  1590  0028                     ??_handle_ir_code:	
  1591  0028                     ??___lmul:	
  1592                           ; 1 bytes @ 0x8
  1593                           
  1594  0028                     ?___lwmod:	
  1595                           ; 1 bytes @ 0x8
  1596                           
  1597  0028                     motor_home5@tracking:	
  1598                           ; 2 bytes @ 0x8
  1599                           
  1600  0028                     ___lwmod@divisor:	
  1601                           ; 1 bytes @ 0x8
  1602                           
  1603                           
  1604                           ; 2 bytes @ 0x8
  1605  0028                     	ds	1
  1606  0029                     ??_handle_ir2:	
  1607  0029                     motor_home4@tracking:	
  1608                           ; 1 bytes @ 0x9
  1609                           
  1610  0029                     motor_home2@tracking:	
  1611                           ; 1 bytes @ 0x9
  1612                           
  1613  0029                     motor_home1@tracking:	
  1614                           ; 1 bytes @ 0x9
  1615                           
  1616  0029                     ___lmul@product:	
  1617                           ; 1 bytes @ 0x9
  1618                           
  1619                           
  1620                           ; 4 bytes @ 0x9
  1621  0029                     	ds	1
  1622  002A                     motor_home4@current_encoder:	
  1623  002A                     motor_home2@sensor_value:	
  1624                           ; 1 bytes @ 0xA
  1625                           
  1626  002A                     motor_home1@sensor_value:	
  1627                           ; 1 bytes @ 0xA
  1628                           
  1629  002A                     ___lwmod@dividend:	
  1630                           ; 1 bytes @ 0xA
  1631                           
  1632                           
  1633                           ; 2 bytes @ 0xA
  1634  002A                     	ds	1
  1635  002B                     motor_home4@sensor_value:	
  1636                           
  1637                           ; 1 bytes @ 0xB
  1638  002B                     	ds	1
  1639  002C                     ??___lwmod:	
  1640                           
  1641                           ; 1 bytes @ 0xC
  1642  002C                     	ds	1
  1643  002D                     ?___lldiv:	
  1644  002D                     ___lwmod@counter:	
  1645                           ; 4 bytes @ 0xD
  1646                           
  1647  002D                     handle_ir2@data:	
  1648                           ; 1 bytes @ 0xD
  1649                           
  1650  002D                     ___lldiv@divisor:	
  1651                           ; 2 bytes @ 0xD
  1652                           
  1653                           
  1654                           ; 4 bytes @ 0xD
  1655  002D                     	ds	1
  1656  002E                     ?_print_number_nospace:	
  1657  002E                     print_number_nospace@number:	
  1658                           ; 1 bytes @ 0xE
  1659                           
  1660                           
  1661                           ; 2 bytes @ 0xE
  1662  002E                     	ds	1
  1663  002F                     handle_ir2@error:	
  1664                           
  1665                           ; 2 bytes @ 0xF
  1666  002F                     	ds	1
  1667  0030                     ??_print_number_nospace:	
  1668  0030                     ?_print_number:	
  1669                           ; 1 bytes @ 0x10
  1670                           
  1671  0030                     ?_print_number_signed:	
  1672                           ; 1 bytes @ 0x10
  1673                           
  1674  0030                     print_number@number:	
  1675                           ; 1 bytes @ 0x10
  1676                           
  1677  0030                     print_number_signed@number:	
  1678                           ; 2 bytes @ 0x10
  1679                           
  1680                           
  1681                           ; 2 bytes @ 0x10
  1682  0030                     	ds	1
  1683  0031                     handle_ir2@got_one:	
  1684  0031                     ___lldiv@dividend:	
  1685                           ; 1 bytes @ 0x11
  1686                           
  1687                           
  1688                           ; 4 bytes @ 0x11
  1689  0031                     	ds	1
  1690  0032                     ??_print_number:	
  1691  0032                     ??_print_number_signed:	
  1692                           ; 1 bytes @ 0x12
  1693                           
  1694  0032                     handle_ir2@got_it:	
  1695                           ; 1 bytes @ 0x12
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0x12
  1699  0032                     	ds	1
  1700  0033                     handle_ir2@data_value:	
  1701                           
  1702                           ; 2 bytes @ 0x13
  1703  0033                     	ds	2
  1704  0035                     ??___lldiv:	
  1705  0035                     handle_ir2@code:	
  1706                           ; 1 bytes @ 0x15
  1707                           
  1708                           
  1709                           ; 2 bytes @ 0x15
  1710  0035                     	ds	1
  1711  0036                     ___lldiv@quotient:	
  1712                           
  1713                           ; 4 bytes @ 0x16
  1714  0036                     	ds	1
  1715  0037                     handle_ir2@i:	
  1716                           
  1717                           ; 1 bytes @ 0x17
  1718  0037                     	ds	1
  1719  0038                     ??_handle_ir:	
  1720                           
  1721                           ; 1 bytes @ 0x18
  1722  0038                     	ds	2
  1723  003A                     ___lldiv@counter:	
  1724  003A                     handle_ir@test_time:	
  1725                           ; 1 bytes @ 0x1A
  1726                           
  1727                           
  1728                           ; 2 bytes @ 0x1A
  1729  003A                     	ds	2
  1730  003C                     handle_ir@i:	
  1731                           
  1732                           ; 1 bytes @ 0x1C
  1733  003C                     	ds	1
  1734  003D                     ??_main:	
  1735                           
  1736                           ; 1 bytes @ 0x1D
  1737  003D                     	ds	10
  1738  0047                     main@tracking:	
  1739                           
  1740                           ; 1 bytes @ 0x27
  1741  0047                     	ds	1
  1742  0048                     main@i:	
  1743                           
  1744                           ; 1 bytes @ 0x28
  1745  0048                     	ds	1
  1746                           
  1747                           	psect	maintext
  1748  04D4                     __pmaintext:	
  1749 ;;
  1750 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  1751 ;;
  1752 ;; *************** function _main *****************
  1753 ;; Defined at:
  1754 ;;		line 1254 in file "nozzle.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  tracking        1   39[BANK0 ] PTR struct .
  1759 ;;		 -> tracking_state(36), 
  1760 ;;  i               1   40[BANK0 ] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : B00/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       2       0       0       0
  1772 ;;      Temps:          0      10       0       0       0
  1773 ;;      Totals:         0      12       0       0       0
  1774 ;;Total ram usage:       12 bytes
  1775 ;; Hardware stack levels required when called:    6
  1776 ;; This function calls:
  1777 ;;		___bmul
  1778 ;;		___lldiv
  1779 ;;		___lmul
  1780 ;;		_capture_adc
  1781 ;;		_charge_adc
  1782 ;;		_flush_uart
  1783 ;;		_handle_ir
  1784 ;;		_handle_uart
  1785 ;;		_memset
  1786 ;;		_motor_home1
  1787 ;;		_motor_home2
  1788 ;;		_motor_home3
  1789 ;;		_motor_home4
  1790 ;;		_motor_home5
  1791 ;;		_motor_home6
  1792 ;;		_motor_idle
  1793 ;;		_motor_tracking
  1794 ;;		_print_number
  1795 ;;		_print_number_signed
  1796 ;;		_print_text
  1797 ;; This function is called by:
  1798 ;;		Startup code after reset
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _main
  1804  04D4                     _main:	
  1805                           
  1806                           ;nozzle.c: 1256: uint8_t i;
  1807                           ;nozzle.c: 1257: PORTDbits.RD7 = 1;
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1812  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1813  04D6  1788               	bsf	8,7	;volatile
  1814                           
  1815                           ;nozzle.c: 1258: TRISDbits.TRISD7 = 0;
  1816  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1817  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1818  04D9  1388               	bcf	8,7	;volatile
  1819                           
  1820                           ;nozzle.c: 1260: PORTD &= ~(uint8_t)0b00111111;
  1821  04DA  30C0               	movlw	192
  1822  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1823  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1824  04DD  00BD               	movwf	??_main
  1825  04DE  083D               	movf	??_main,w
  1826  04DF  0588               	andwf	8,f	;volatile
  1827                           
  1828                           ;nozzle.c: 1261: TRISD &= ~(uint8_t)0b00111111;
  1829  04E0  30C0               	movlw	192
  1830  04E1  00BD               	movwf	??_main
  1831  04E2  083D               	movf	??_main,w
  1832  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  1833  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  1834  04E5  0588               	andwf	8,f	;volatile
  1835                           
  1836                           ;nozzle.c: 1263: have_serial = 0;
  1837  04E6  01FC               	clrf	_have_serial
  1838                           
  1839                           ;nozzle.c: 1264: SPBRG = (13300000 / 16 / 57600);
  1840  04E7  300E               	movlw	14
  1841  04E8  0099               	movwf	25	;volatile
  1842                           
  1843                           ;nozzle.c: 1266: TXSTA = 0b00100100;
  1844  04E9  3024               	movlw	36
  1845  04EA  0098               	movwf	24	;volatile
  1846                           
  1847                           ;nozzle.c: 1268: RCSTA = 0b10010000;
  1848  04EB  3090               	movlw	144
  1849  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1850  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1851  04EE  0098               	movwf	24	;volatile
  1852                           
  1853                           ;nozzle.c: 1269: PIE1bits.RCIE = 1;
  1854  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  1855  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  1856  04F1  168C               	bsf	12,5	;volatile
  1857                           
  1858                           ;nozzle.c: 1273: INTCONbits.INTE = 1;
  1859  04F2  160B               	bsf	11,4	;volatile
  1860                           
  1861                           ;nozzle.c: 1274: INTCONbits.INTF = 0;
  1862  04F3  108B               	bcf	11,1	;volatile
  1863                           
  1864                           ;nozzle.c: 1276: OPTION_REGbits.INTEDG = 0;
  1865  04F4  1301               	bcf	1,6	;volatile
  1866                           
  1867                           ;nozzle.c: 1277: ir_offset = 0;
  1868  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1869  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1870  04F7  01D8               	clrf	_ir_offset
  1871                           
  1872                           ;nozzle.c: 1278: first_edge = 1;
  1873  04F8  01E4               	clrf	_first_edge
  1874  04F9  0AE4               	incf	_first_edge,f
  1875                           
  1876                           ;nozzle.c: 1281: T2CON = 0b00000111;
  1877  04FA  3007               	movlw	7
  1878  04FB  0092               	movwf	18	;volatile
  1879                           
  1880                           ;nozzle.c: 1283: PR2 = 0xff;
  1881  04FC  30FF               	movlw	255
  1882  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1883  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  1884  04FF  0092               	movwf	18	;volatile
  1885                           
  1886                           ;nozzle.c: 1284: PIR1bits.TMR2IF = 0;
  1887  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0502  108C               	bcf	12,1	;volatile
  1890                           
  1891                           ;nozzle.c: 1285: PIE1bits.TMR2IE = 1;
  1892  0503  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0504  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0505  148C               	bsf	12,1	;volatile
  1895                           
  1896                           ;nozzle.c: 1290: T1CON = 0b00110001;
  1897  0506  3031               	movlw	49
  1898  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0509  0090               	movwf	16	;volatile
  1901                           
  1902                           ;nozzle.c: 1291: TMR1 = (-13300000 / 4 / 8 / 100);
  1903  050A  30EF               	movlw	239
  1904  050B  008F               	movwf	15	;volatile
  1905  050C  30C4               	movlw	196
  1906  050D  008E               	movwf	14	;volatile
  1907                           
  1908                           ;nozzle.c: 1293: memset(sensors, 0, sizeof(sensor_state_t) * 6);
  1909  050E  3000               	movlw	0
  1910  050F  00A0               	movwf	memset@c
  1911  0510  00A1               	movwf	memset@c+1
  1912  0511  3018               	movlw	24
  1913  0512  00A2               	movwf	memset@n
  1914  0513  3000               	movlw	0
  1915  0514  00A3               	movwf	memset@n+1
  1916  0515  30C4               	movlw	(low (_sensors| 0))& (0+255)
  1917  0516  160A  118A  27B6  120A  118A  	fcall	_memset
  1918                           
  1919                           ;nozzle.c: 1296: ADCON0 = 0b10000001;
  1920  051B  3081               	movlw	129
  1921  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1922  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1923  051E  009F               	movwf	31	;volatile
  1924                           
  1925                           ;nozzle.c: 1298: ADCON1 = 0b01001001;
  1926  051F  3049               	movlw	73
  1927  0520  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0521  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0522  009F               	movwf	31	;volatile
  1930                           
  1931                           ;nozzle.c: 1300: OPTION_REGbits.T0CS = 0;
  1932  0523  1281               	bcf	1,5	;volatile
  1933                           
  1934                           ;nozzle.c: 1301: TMR0 = 0;
  1935  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0526  0181               	clrf	1	;volatile
  1938                           
  1939                           ;nozzle.c: 1302: INTCONbits.TMR0IF = 0;
  1940  0527  110B               	bcf	11,2	;volatile
  1941                           
  1942                           ;nozzle.c: 1307: INTCONbits.PEIE = 1;
  1943  0528  170B               	bsf	11,6	;volatile
  1944                           
  1945                           ;nozzle.c: 1308: INTCONbits.GIE = 1;
  1946  0529  178B               	bsf	11,7	;volatile
  1947                           
  1948                           ;nozzle.c: 1310: print_text("\n\n\n\nWelcome to F-35 nozzle\n");
  1949  052A  30A8               	movlw	low (STR_1| (0+32768))
  1950  052B  00A2               	movwf	print_text@s
  1951  052C  3084               	movlw	high (STR_1| (0+32768))
  1952  052D  00A3               	movwf	print_text@s+1
  1953  052E  120A  158A  2003  120A  118A  	fcall	_print_text
  1954                           
  1955                           ;nozzle.c: 1314: tracking_state[2].min = 8;
  1956  0533  3008               	movlw	8
  1957  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0536  00BD               	movwf	??_main
  1960  0537  083D               	movf	??_main,w
  1961  0538  1683               	bsf	3,5	;RP0=1, select bank1
  1962  0539  1303               	bcf	3,6	;RP1=0, select bank1
  1963  053A  00C0               	movwf	(_tracking_state^(0+128)+32)
  1964                           
  1965                           ;nozzle.c: 1315: tracking_state[2].max = 31;
  1966  053B  301F               	movlw	31
  1967  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1968  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1969  053E  00BD               	movwf	??_main
  1970  053F  083D               	movf	??_main,w
  1971  0540  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0541  1303               	bcf	3,6	;RP1=0, select bank1
  1973  0542  00C1               	movwf	(_tracking_state^(0+128)+33)
  1974                           
  1975                           ;nozzle.c: 1316: tracking_state[2].boundary = 5;
  1976  0543  3005               	movlw	5
  1977  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0546  00BD               	movwf	??_main
  1980  0547  083D               	movf	??_main,w
  1981  0548  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0549  1303               	bcf	3,6	;RP1=0, select bank1
  1983  054A  00B8               	movwf	(_tracking_state^(0+128)+24)
  1984                           
  1985                           ;nozzle.c: 1317: tracking_state[2].encoder = 4;
  1986  054B  3004               	movlw	4
  1987  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1988  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1989  054E  00BD               	movwf	??_main
  1990  054F  083D               	movf	??_main,w
  1991  0550  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0551  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0552  00B9               	movwf	(_tracking_state^(0+128)+25)
  1994                           
  1995                           ;nozzle.c: 1318: tracking_state[2].dec_mask = (uint8_t)0b00000010;
  1996  0553  3002               	movlw	2
  1997  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0556  00BD               	movwf	??_main
  2000  0557  083D               	movf	??_main,w
  2001  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2003  055A  00BA               	movwf	(_tracking_state^(0+128)+26)
  2004                           
  2005                           ;nozzle.c: 1319: tracking_state[2].inc_mask = (uint8_t)0b00000001;
  2006  055B  01BB               	clrf	(_tracking_state^(0+128)+27)
  2007  055C  0ABB               	incf	(_tracking_state^(0+128)+27),f
  2008                           
  2009                           ;nozzle.c: 1320: tracking_state[2].total_unmask = ~((uint8_t)0b00000001 | (uint8_t)0b000
      +                          00010);
  2010  055D  30FC               	movlw	252
  2011  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2012  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0560  00BD               	movwf	??_main
  2014  0561  083D               	movf	??_main,w
  2015  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0564  00BC               	movwf	(_tracking_state^(0+128)+28)
  2018                           
  2019                           ;nozzle.c: 1321: tracking_state[2].total_mask = (uint8_t)0b00000001 | (uint8_t)0b0000001
      +                          0;
  2020  0565  3003               	movlw	3
  2021  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0568  00BD               	movwf	??_main
  2024  0569  083D               	movf	??_main,w
  2025  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2026  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2027  056C  00BD               	movwf	(_tracking_state^(0+128)+29)
  2028                           
  2029                           ;nozzle.c: 1322: tracking_state[2].brake = 1;
  2030  056D  01C3               	clrf	(_tracking_state^(0+128)+35)
  2031  056E  0AC3               	incf	(_tracking_state^(0+128)+35),f
  2032                           
  2033                           ;nozzle.c: 1324: tracking_state[1].min = 17;
  2034  056F  3011               	movlw	17
  2035  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0572  00BD               	movwf	??_main
  2038  0573  083D               	movf	??_main,w
  2039  0574  1683               	bsf	3,5	;RP0=1, select bank1
  2040  0575  1303               	bcf	3,6	;RP1=0, select bank1
  2041  0576  00B4               	movwf	(_tracking_state^(0+128)+20)
  2042                           
  2043                           ;nozzle.c: 1325: tracking_state[1].max = 41;
  2044  0577  3029               	movlw	41
  2045  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2047  057A  00BD               	movwf	??_main
  2048  057B  083D               	movf	??_main,w
  2049  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2050  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2051  057E  00B5               	movwf	(_tracking_state^(0+128)+21)
  2052                           
  2053                           ;nozzle.c: 1326: tracking_state[1].boundary = 2;
  2054  057F  3002               	movlw	2
  2055  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0582  00BD               	movwf	??_main
  2058  0583  083D               	movf	??_main,w
  2059  0584  1683               	bsf	3,5	;RP0=1, select bank1
  2060  0585  1303               	bcf	3,6	;RP1=0, select bank1
  2061  0586  00AC               	movwf	(_tracking_state^(0+128)+12)
  2062                           
  2063                           ;nozzle.c: 1327: tracking_state[1].encoder = 3;
  2064  0587  3003               	movlw	3
  2065  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2067  058A  00BD               	movwf	??_main
  2068  058B  083D               	movf	??_main,w
  2069  058C  1683               	bsf	3,5	;RP0=1, select bank1
  2070  058D  1303               	bcf	3,6	;RP1=0, select bank1
  2071  058E  00AD               	movwf	(_tracking_state^(0+128)+13)
  2072                           
  2073                           ;nozzle.c: 1328: tracking_state[1].dec_mask = (uint8_t)0b00100000;
  2074  058F  3020               	movlw	32
  2075  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0592  00BD               	movwf	??_main
  2078  0593  083D               	movf	??_main,w
  2079  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0596  00AE               	movwf	(_tracking_state^(0+128)+14)
  2082                           
  2083                           ;nozzle.c: 1329: tracking_state[1].inc_mask = (uint8_t)0b00010000;
  2084  0597  3010               	movlw	16
  2085  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2087  059A  00BD               	movwf	??_main
  2088  059B  083D               	movf	??_main,w
  2089  059C  1683               	bsf	3,5	;RP0=1, select bank1
  2090  059D  1303               	bcf	3,6	;RP1=0, select bank1
  2091  059E  00AF               	movwf	(_tracking_state^(0+128)+15)
  2092                           
  2093                           ;nozzle.c: 1330: tracking_state[1].total_unmask = ~((uint8_t)0b00100000 | (uint8_t)0b000
      +                          10000);
  2094  059F  30CF               	movlw	207
  2095  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2096  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2097  05A2  00BD               	movwf	??_main
  2098  05A3  083D               	movf	??_main,w
  2099  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2100  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2101  05A6  00B0               	movwf	(_tracking_state^(0+128)+16)
  2102                           
  2103                           ;nozzle.c: 1331: tracking_state[1].total_mask = (uint8_t)0b00100000 | (uint8_t)0b0001000
      +                          0;
  2104  05A7  3030               	movlw	48
  2105  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2106  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2107  05AA  00BD               	movwf	??_main
  2108  05AB  083D               	movf	??_main,w
  2109  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  2110  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  2111  05AE  00B1               	movwf	(_tracking_state^(0+128)+17)
  2112                           
  2113                           ;nozzle.c: 1333: tracking_state[0].min = 6;
  2114  05AF  3006               	movlw	6
  2115  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2116  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2117  05B2  00BD               	movwf	??_main
  2118  05B3  083D               	movf	??_main,w
  2119  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2120  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2121  05B6  00A8               	movwf	(_tracking_state^(0+128)+8)
  2122                           
  2123                           ;nozzle.c: 1334: tracking_state[0].max = 45;
  2124  05B7  302D               	movlw	45
  2125  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2126  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2127  05BA  00BD               	movwf	??_main
  2128  05BB  083D               	movf	??_main,w
  2129  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  2130  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  2131  05BE  00A9               	movwf	(_tracking_state^(0+128)+9)
  2132                           
  2133                           ;nozzle.c: 1335: tracking_state[0].boundary = 1;
  2134  05BF  01A0               	clrf	_tracking_state^(0+128)
  2135  05C0  0AA0               	incf	_tracking_state^(0+128),f
  2136                           
  2137                           ;nozzle.c: 1336: tracking_state[0].encoder = 0;
  2138  05C1  01A1               	clrf	(_tracking_state^(0+128)+1)
  2139                           
  2140                           ;nozzle.c: 1337: tracking_state[0].dec_mask = (uint8_t)0b00001000;
  2141  05C2  3008               	movlw	8
  2142  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2143  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2144  05C5  00BD               	movwf	??_main
  2145  05C6  083D               	movf	??_main,w
  2146  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2147  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  2148  05C9  00A2               	movwf	(_tracking_state^(0+128)+2)
  2149                           
  2150                           ;nozzle.c: 1338: tracking_state[0].inc_mask = (uint8_t)0b00000100;
  2151  05CA  3004               	movlw	4
  2152  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2154  05CD  00BD               	movwf	??_main
  2155  05CE  083D               	movf	??_main,w
  2156  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  2157  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  2158  05D1  00A3               	movwf	(_tracking_state^(0+128)+3)
  2159                           
  2160                           ;nozzle.c: 1339: tracking_state[0].total_unmask = ~((uint8_t)0b00000100 | (uint8_t)0b000
      +                          01000);
  2161  05D2  30F3               	movlw	243
  2162  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2163  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2164  05D5  00BD               	movwf	??_main
  2165  05D6  083D               	movf	??_main,w
  2166  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  2167  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  2168  05D9  00A4               	movwf	(_tracking_state^(0+128)+4)
  2169                           
  2170                           ;nozzle.c: 1340: tracking_state[0].total_mask = (uint8_t)0b00000100 | (uint8_t)0b0000100
      +                          0;
  2171  05DA  300C               	movlw	12
  2172  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2173  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2174  05DD  00BD               	movwf	??_main
  2175  05DE  083D               	movf	??_main,w
  2176  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  2177  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  2178  05E1  00A5               	movwf	(_tracking_state^(0+128)+5)
  2179                           
  2180                           ;nozzle.c: 1343: const int8_t encoder0_values[] = {
  2181                           ;nozzle.c: 1344: -10, -10, -10, -10, -10, -10, -10, -9,
  2182                           ;nozzle.c: 1345: -9, -8, -8, -7, -6, -6, -5, -5,
  2183                           ;nozzle.c: 1346: -4, -4, -3, -3, -2, -2, -1, -1,
  2184                           ;nozzle.c: 1347: 0, 0
  2185                           ;nozzle.c: 1348: };
  2186                           ;nozzle.c: 1351: for(i = 0; i < 24 + 1; i++)
  2187  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2188  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2189  05E4  01C8               	clrf	main@i
  2190  05E5  3019               	movlw	25
  2191  05E6  0248               	subwf	main@i,w
  2192  05E7  1803               	btfsc	3,0
  2193  05E8  2F62               	goto	l375
  2194  05E9                     l2981:	
  2195                           
  2196                           ;nozzle.c: 1352: {
  2197                           ;nozzle.c: 1353: step_to_encoders[i * 3 + 0] = encoder0_values[i];
  2198  05E9  0848               	movf	main@i,w
  2199  05EA  3E12               	addlw	low (main@encoder0_values| (0+32768))
  2200  05EB  0084               	movwf	4
  2201  05EC  3081               	movlw	high (main@encoder0_values| (0+32768))
  2202  05ED  1803               	skipnc
  2203  05EE  3E01               	addlw	1
  2204  05EF  00FF               	movwf	127
  2205  05F0  120A  118A  2100  120A  118A  	fcall	stringtab
  2206  05F5  00BD               	movwf	??_main
  2207  05F6  3003               	movlw	3
  2208  05F7  00BE               	movwf	??_main+1
  2209  05F8  083E               	movf	??_main+1,w
  2210  05F9  00A0               	movwf	___bmul@multiplicand
  2211  05FA  0848               	movf	main@i,w
  2212  05FB  160A  118A  276C  120A  118A  	fcall	___bmul
  2213  0600  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  2214  0601  0084               	movwf	4
  2215  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0604  083D               	movf	??_main,w
  2218  0605  1783               	bsf	3,7	;select IRP bank3
  2219  0606  0080               	movwf	0
  2220                           
  2221                           ;nozzle.c: 1355: step_to_encoders[i * 3 + 1] =
  2222                           ;nozzle.c: 1356: (uint32_t)tracking_state[1].min +
  2223                           ;nozzle.c: 1357: (uint32_t)(tracking_state[1].max - tracking_state[1].min) * i / 24;
  2224  0607  3000               	movlw	0
  2225  0608  00B0               	movwf	___lldiv@divisor+3
  2226  0609  3000               	movlw	0
  2227  060A  00AF               	movwf	___lldiv@divisor+2
  2228  060B  3000               	movlw	0
  2229  060C  00AE               	movwf	___lldiv@divisor+1
  2230  060D  3018               	movlw	24
  2231  060E  00AD               	movwf	___lldiv@divisor
  2232  060F  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0610  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0611  0834               	movf	(_tracking_state^(0+128)+20),w
  2235  0612  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0613  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0614  00BD               	movwf	??_main
  2238  0615  01BE               	clrf	??_main+1
  2239  0616  1BBD               	btfsc	??_main,7
  2240  0617  03BE               	decf	??_main+1,f
  2241  0618  09BD               	comf	??_main,f
  2242  0619  09BE               	comf	??_main+1,f
  2243  061A  0ABD               	incf	??_main,f
  2244  061B  1903               	skipnz
  2245  061C  0ABE               	incf	??_main+1,f
  2246  061D  1683               	bsf	3,5	;RP0=1, select bank1
  2247  061E  1303               	bcf	3,6	;RP1=0, select bank1
  2248  061F  0835               	movf	(_tracking_state^(0+128)+21),w
  2249  0620  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0621  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0622  00BF               	movwf	??_main+2
  2252  0623  01C0               	clrf	??_main+3
  2253  0624  1BBF               	btfsc	??_main+2,7
  2254  0625  03C0               	decf	??_main+3,f
  2255  0626  083D               	movf	??_main,w
  2256  0627  073F               	addwf	??_main+2,w
  2257  0628  00A0               	movwf	___lmul@multiplier
  2258  0629  083E               	movf	??_main+1,w
  2259  062A  1803               	skipnc
  2260  062B  0A3E               	incf	??_main+1,w
  2261  062C  0740               	addwf	??_main+3,w
  2262  062D  00A1               	movwf	___lmul@multiplier+1
  2263  062E  01A2               	clrf	___lmul@multiplier+2
  2264  062F  1BA1               	btfsc	___lmul@multiplier+1,7
  2265  0630  03A2               	decf	___lmul@multiplier+2,f
  2266  0631  0822               	movf	___lmul@multiplier+2,w
  2267  0632  00A3               	movwf	___lmul@multiplier+3
  2268  0633  0848               	movf	main@i,w
  2269  0634  00C1               	movwf	??_main+4
  2270  0635  01C2               	clrf	??_main+5
  2271  0636  01C3               	clrf	??_main+6
  2272  0637  01C4               	clrf	??_main+7
  2273  0638  0844               	movf	??_main+7,w
  2274  0639  00A7               	movwf	___lmul@multiplicand+3
  2275  063A  0843               	movf	??_main+6,w
  2276  063B  00A6               	movwf	___lmul@multiplicand+2
  2277  063C  0842               	movf	??_main+5,w
  2278  063D  00A5               	movwf	___lmul@multiplicand+1
  2279  063E  0841               	movf	??_main+4,w
  2280  063F  00A4               	movwf	___lmul@multiplicand
  2281  0640  120A  158A  210A  120A  118A  	fcall	___lmul
  2282  0645  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0646  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0647  0823               	movf	?___lmul+3,w
  2285  0648  00B4               	movwf	___lldiv@dividend+3
  2286  0649  0822               	movf	?___lmul+2,w
  2287  064A  00B3               	movwf	___lldiv@dividend+2
  2288  064B  0821               	movf	?___lmul+1,w
  2289  064C  00B2               	movwf	___lldiv@dividend+1
  2290  064D  0820               	movf	?___lmul,w
  2291  064E  00B1               	movwf	___lldiv@dividend
  2292  064F  120A  158A  21ED  120A  118A  	fcall	___lldiv
  2293  0654  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0655  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0656  0834               	movf	(_tracking_state^(0+128)+20),w
  2296  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0659  072D               	addwf	?___lldiv,w
  2299  065A  00C5               	movwf	??_main+8
  2300  065B  3003               	movlw	3
  2301  065C  00C6               	movwf	??_main+9
  2302  065D  0846               	movf	??_main+9,w
  2303  065E  00A0               	movwf	___bmul@multiplicand
  2304  065F  0848               	movf	main@i,w
  2305  0660  160A  118A  276C  120A  118A  	fcall	___bmul
  2306  0665  3E01               	addlw	1
  2307  0666  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  2308  0667  0084               	movwf	4
  2309  0668  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0669  1303               	bcf	3,6	;RP1=0, select bank0
  2311  066A  0845               	movf	??_main+8,w
  2312  066B  1783               	bsf	3,7	;select IRP bank3
  2313  066C  0080               	movwf	0
  2314                           
  2315                           ;nozzle.c: 1359: step_to_encoders[i * 3 + 2] =
  2316                           ;nozzle.c: 1360: (uint32_t)tracking_state[2].min +
  2317                           ;nozzle.c: 1361: (uint32_t)(tracking_state[2].max - tracking_state[2].min) * i / 24;
  2318  066D  3000               	movlw	0
  2319  066E  00B0               	movwf	___lldiv@divisor+3
  2320  066F  3000               	movlw	0
  2321  0670  00AF               	movwf	___lldiv@divisor+2
  2322  0671  3000               	movlw	0
  2323  0672  00AE               	movwf	___lldiv@divisor+1
  2324  0673  3018               	movlw	24
  2325  0674  00AD               	movwf	___lldiv@divisor
  2326  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2328  0677  0840               	movf	(_tracking_state^(0+128)+32),w
  2329  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2331  067A  00BD               	movwf	??_main
  2332  067B  01BE               	clrf	??_main+1
  2333  067C  1BBD               	btfsc	??_main,7
  2334  067D  03BE               	decf	??_main+1,f
  2335  067E  09BD               	comf	??_main,f
  2336  067F  09BE               	comf	??_main+1,f
  2337  0680  0ABD               	incf	??_main,f
  2338  0681  1903               	skipnz
  2339  0682  0ABE               	incf	??_main+1,f
  2340  0683  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0684  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0685  0841               	movf	(_tracking_state^(0+128)+33),w
  2343  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0688  00BF               	movwf	??_main+2
  2346  0689  01C0               	clrf	??_main+3
  2347  068A  1BBF               	btfsc	??_main+2,7
  2348  068B  03C0               	decf	??_main+3,f
  2349  068C  083D               	movf	??_main,w
  2350  068D  073F               	addwf	??_main+2,w
  2351  068E  00A0               	movwf	___lmul@multiplier
  2352  068F  083E               	movf	??_main+1,w
  2353  0690  1803               	skipnc
  2354  0691  0A3E               	incf	??_main+1,w
  2355  0692  0740               	addwf	??_main+3,w
  2356  0693  00A1               	movwf	___lmul@multiplier+1
  2357  0694  01A2               	clrf	___lmul@multiplier+2
  2358  0695  1BA1               	btfsc	___lmul@multiplier+1,7
  2359  0696  03A2               	decf	___lmul@multiplier+2,f
  2360  0697  0822               	movf	___lmul@multiplier+2,w
  2361  0698  00A3               	movwf	___lmul@multiplier+3
  2362  0699  0848               	movf	main@i,w
  2363  069A  00C1               	movwf	??_main+4
  2364  069B  01C2               	clrf	??_main+5
  2365  069C  01C3               	clrf	??_main+6
  2366  069D  01C4               	clrf	??_main+7
  2367  069E  0844               	movf	??_main+7,w
  2368  069F  00A7               	movwf	___lmul@multiplicand+3
  2369  06A0  0843               	movf	??_main+6,w
  2370  06A1  00A6               	movwf	___lmul@multiplicand+2
  2371  06A2  0842               	movf	??_main+5,w
  2372  06A3  00A5               	movwf	___lmul@multiplicand+1
  2373  06A4  0841               	movf	??_main+4,w
  2374  06A5  00A4               	movwf	___lmul@multiplicand
  2375  06A6  120A  158A  210A  120A  118A  	fcall	___lmul
  2376  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2377  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2378  06AD  0823               	movf	?___lmul+3,w
  2379  06AE  00B4               	movwf	___lldiv@dividend+3
  2380  06AF  0822               	movf	?___lmul+2,w
  2381  06B0  00B3               	movwf	___lldiv@dividend+2
  2382  06B1  0821               	movf	?___lmul+1,w
  2383  06B2  00B2               	movwf	___lldiv@dividend+1
  2384  06B3  0820               	movf	?___lmul,w
  2385  06B4  00B1               	movwf	___lldiv@dividend
  2386  06B5  120A  158A  21ED  120A  118A  	fcall	___lldiv
  2387  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2388  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2389  06BC  0840               	movf	(_tracking_state^(0+128)+32),w
  2390  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2391  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2392  06BF  072D               	addwf	?___lldiv,w
  2393  06C0  00C5               	movwf	??_main+8
  2394  06C1  3003               	movlw	3
  2395  06C2  00C6               	movwf	??_main+9
  2396  06C3  0846               	movf	??_main+9,w
  2397  06C4  00A0               	movwf	___bmul@multiplicand
  2398  06C5  0848               	movf	main@i,w
  2399  06C6  160A  118A  276C  120A  118A  	fcall	___bmul
  2400  06CB  3E02               	addlw	2
  2401  06CC  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  2402  06CD  0084               	movwf	4
  2403  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2404  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2405  06D0  0845               	movf	??_main+8,w
  2406  06D1  1783               	bsf	3,7	;select IRP bank3
  2407  06D2  0080               	movwf	0
  2408                           
  2409                           ;nozzle.c: 1363: print_text("step=");
  2410  06D3  30CE               	movlw	low (STR_2| (0+32768))
  2411  06D4  00A2               	movwf	print_text@s
  2412  06D5  3084               	movlw	high (STR_2| (0+32768))
  2413  06D6  00A3               	movwf	print_text@s+1
  2414  06D7  120A  158A  2003  120A  118A  	fcall	_print_text
  2415                           
  2416                           ;nozzle.c: 1364: print_number(i);
  2417  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2418  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2419  06DE  0848               	movf	main@i,w
  2420  06DF  00BD               	movwf	??_main
  2421  06E0  01BE               	clrf	??_main+1
  2422  06E1  083D               	movf	??_main,w
  2423  06E2  00B0               	movwf	print_number@number
  2424  06E3  083E               	movf	??_main+1,w
  2425  06E4  00B1               	movwf	print_number@number+1
  2426  06E5  160A  118A  275C  120A  118A  	fcall	_print_number
  2427                           
  2428                           ;nozzle.c: 1365: print_text("encoders=");
  2429  06EA  30C4               	movlw	low (STR_3| (0+32768))
  2430  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2431  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2432  06ED  00A2               	movwf	print_text@s
  2433  06EE  3084               	movlw	high (STR_3| (0+32768))
  2434  06EF  00A3               	movwf	print_text@s+1
  2435  06F0  120A  158A  2003  120A  118A  	fcall	_print_text
  2436                           
  2437                           ;nozzle.c: 1366: print_number_signed(step_to_encoders[i * 3 + 0]);
  2438  06F5  3003               	movlw	3
  2439  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2440  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2441  06F8  00BD               	movwf	??_main
  2442  06F9  083D               	movf	??_main,w
  2443  06FA  00A0               	movwf	___bmul@multiplicand
  2444  06FB  0848               	movf	main@i,w
  2445  06FC  160A  118A  276C  120A  118A  	fcall	___bmul
  2446  0701  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  2447  0702  0084               	movwf	4
  2448  0703  1783               	bsf	3,7	;select IRP bank3
  2449  0704  0800               	movf	0,w
  2450  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0706  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0707  00B0               	movwf	print_number_signed@number
  2453  0708  01B1               	clrf	print_number_signed@number+1
  2454  0709  1BB0               	btfsc	print_number_signed@number,7
  2455  070A  03B1               	decf	print_number_signed@number+1,f
  2456  070B  120A  118A  27D7  120A  118A  	fcall	_print_number_signed
  2457                           
  2458                           ;nozzle.c: 1367: print_number_signed(step_to_encoders[i * 3 + 1]);
  2459  0710  3003               	movlw	3
  2460  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0712  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0713  00BD               	movwf	??_main
  2463  0714  083D               	movf	??_main,w
  2464  0715  00A0               	movwf	___bmul@multiplicand
  2465  0716  0848               	movf	main@i,w
  2466  0717  160A  118A  276C  120A  118A  	fcall	___bmul
  2467  071C  3E01               	addlw	1
  2468  071D  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  2469  071E  0084               	movwf	4
  2470  071F  1783               	bsf	3,7	;select IRP bank3
  2471  0720  0800               	movf	0,w
  2472  0721  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0722  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0723  00B0               	movwf	print_number_signed@number
  2475  0724  01B1               	clrf	print_number_signed@number+1
  2476  0725  1BB0               	btfsc	print_number_signed@number,7
  2477  0726  03B1               	decf	print_number_signed@number+1,f
  2478  0727  120A  118A  27D7  120A  118A  	fcall	_print_number_signed
  2479                           
  2480                           ;nozzle.c: 1368: print_number_signed(step_to_encoders[i * 3 + 2]);
  2481  072C  3003               	movlw	3
  2482  072D  1283               	bcf	3,5	;RP0=0, select bank0
  2483  072E  1303               	bcf	3,6	;RP1=0, select bank0
  2484  072F  00BD               	movwf	??_main
  2485  0730  083D               	movf	??_main,w
  2486  0731  00A0               	movwf	___bmul@multiplicand
  2487  0732  0848               	movf	main@i,w
  2488  0733  160A  118A  276C  120A  118A  	fcall	___bmul
  2489  0738  3E02               	addlw	2
  2490  0739  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  2491  073A  0084               	movwf	4
  2492  073B  1783               	bsf	3,7	;select IRP bank3
  2493  073C  0800               	movf	0,w
  2494  073D  1283               	bcf	3,5	;RP0=0, select bank0
  2495  073E  1303               	bcf	3,6	;RP1=0, select bank0
  2496  073F  00B0               	movwf	print_number_signed@number
  2497  0740  01B1               	clrf	print_number_signed@number+1
  2498  0741  1BB0               	btfsc	print_number_signed@number,7
  2499  0742  03B1               	decf	print_number_signed@number+1,f
  2500  0743  120A  118A  27D7  120A  118A  	fcall	_print_number_signed
  2501                           
  2502                           ;nozzle.c: 1369: print_text("\n");
  2503  0748  30C2               	movlw	low ((STR_1+26)| (0+32768))
  2504  0749  1283               	bcf	3,5	;RP0=0, select bank0
  2505  074A  1303               	bcf	3,6	;RP1=0, select bank0
  2506  074B  00A2               	movwf	print_text@s
  2507  074C  3084               	movlw	high ((STR_1+26)| (0+32768))
  2508  074D  00A3               	movwf	print_text@s+1
  2509  074E  120A  158A  2003  120A  118A  	fcall	_print_text
  2510                           
  2511                           ;nozzle.c: 1370: flush_uart();
  2512  0753  160A  118A  2746  120A  118A  	fcall	_flush_uart
  2513  0758  3001               	movlw	1
  2514  0759  1283               	bcf	3,5	;RP0=0, select bank0
  2515  075A  1303               	bcf	3,6	;RP1=0, select bank0
  2516  075B  00BD               	movwf	??_main
  2517  075C  083D               	movf	??_main,w
  2518  075D  07C8               	addwf	main@i,f
  2519  075E  3019               	movlw	25
  2520  075F  0248               	subwf	main@i,w
  2521  0760  1C03               	skipc
  2522  0761  2DE9               	goto	l2981
  2523  0762                     l375:	
  2524                           ;nozzle.c: 1371: }
  2525                           ;nozzle.c: 1378: while(1)
  2526                           
  2527  0762  0064               	clrwdt	;# 
  2528                           
  2529                           ;nozzle.c: 1383: if(!armed)
  2530  0763  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0765  0860               	movf	_armed,w
  2533  0766  1D03               	btfss	3,2
  2534  0767  2F6C               	goto	l3003
  2535                           
  2536                           ;nozzle.c: 1384: {
  2537                           ;nozzle.c: 1385: motor_master &= ~(uint8_t)0b00111111;
  2538  0768  30C0               	movlw	192
  2539  0769  00BD               	movwf	??_main
  2540  076A  083D               	movf	??_main,w
  2541  076B  05DB               	andwf	_motor_master,f
  2542  076C                     l3003:	
  2543                           ;nozzle.c: 1387: else
  2544                           ;nozzle.c: 1388: {
  2545                           
  2546                           ;nozzle.c: 1386: }
  2547                           
  2548                           
  2549                           ;nozzle.c: 1390: }
  2550                           ;nozzle.c: 1393: handle_uart();
  2551  076C  160A  118A  277F  120A  118A  	fcall	_handle_uart
  2552                           
  2553                           ;nozzle.c: 1401: if(got_tick)
  2554  0771  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0772  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0773  085E               	movf	_got_tick,w
  2557  0774  1903               	btfsc	3,2
  2558  0775  2FC1               	goto	l3035
  2559                           
  2560                           ;nozzle.c: 1402: {
  2561                           ;nozzle.c: 1403: got_tick = 0;
  2562  0776  01DE               	clrf	_got_tick
  2563                           
  2564                           ;nozzle.c: 1404: for(i = 0; i < 3; i++)
  2565  0777  01C8               	clrf	main@i
  2566  0778  3003               	movlw	3
  2567  0779  0248               	subwf	main@i,w
  2568  077A  1803               	btfsc	3,0
  2569  077B  2FA0               	goto	l3023
  2570  077C                     l3013:	
  2571                           
  2572                           ;nozzle.c: 1405: {
  2573                           ;nozzle.c: 1406: tracking_state_t *tracking = &tracking_state[i];
  2574  077C  300C               	movlw	12
  2575  077D  00BD               	movwf	??_main
  2576  077E  083D               	movf	??_main,w
  2577  077F  00A0               	movwf	___bmul@multiplicand
  2578  0780  0848               	movf	main@i,w
  2579  0781  160A  118A  276C  120A  118A  	fcall	___bmul
  2580  0786  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  2581  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0789  00BE               	movwf	??_main+1
  2584  078A  083E               	movf	??_main+1,w
  2585  078B  00C7               	movwf	main@tracking
  2586                           
  2587                           ;nozzle.c: 1407: if(tracking->timer > 0)
  2588  078C  0847               	movf	main@tracking,w
  2589  078D  3E06               	addlw	6
  2590  078E  0084               	movwf	4
  2591  078F  1383               	bcf	3,7	;select IRP bank0
  2592  0790  0800               	movf	0,w
  2593  0791  1903               	btfsc	3,2
  2594  0792  2F98               	goto	l3019
  2595                           
  2596                           ;nozzle.c: 1408: {
  2597                           ;nozzle.c: 1409: tracking->timer--;
  2598  0793  0847               	movf	main@tracking,w
  2599  0794  3E06               	addlw	6
  2600  0795  0084               	movwf	4
  2601  0796  3001               	movlw	1
  2602  0797  0280               	subwf	0,f
  2603  0798                     l3019:	
  2604  0798  3001               	movlw	1
  2605  0799  00BD               	movwf	??_main
  2606  079A  083D               	movf	??_main,w
  2607  079B  07C8               	addwf	main@i,f
  2608  079C  3003               	movlw	3
  2609  079D  0248               	subwf	main@i,w
  2610  079E  1C03               	skipc
  2611  079F  2F7C               	goto	l3013
  2612  07A0                     l3023:	
  2613                           
  2614                           ;nozzle.c: 1410: }
  2615                           ;nozzle.c: 1411: }
  2616                           ;nozzle.c: 1412: tick++;
  2617  07A0  3001               	movlw	1
  2618  07A1  00BD               	movwf	??_main
  2619  07A2  083D               	movf	??_main,w
  2620  07A3  07DD               	addwf	_tick,f
  2621                           
  2622                           ;nozzle.c: 1413: if(repeat_delay > 0)
  2623  07A4  0855               	movf	_repeat_delay,w
  2624  07A5  1903               	btfsc	3,2
  2625  07A6  2FA9               	goto	l382
  2626                           
  2627                           ;nozzle.c: 1414: {
  2628                           ;nozzle.c: 1415: repeat_delay--;
  2629  07A7  3001               	movlw	1
  2630  07A8  02D5               	subwf	_repeat_delay,f
  2631  07A9                     l382:	
  2632                           
  2633                           ;nozzle.c: 1416: }
  2634                           ;nozzle.c: 1419: if(!armed)
  2635  07A9  0860               	movf	_armed,w
  2636  07AA  1D03               	btfss	3,2
  2637  07AB  2FC1               	goto	l3035
  2638                           
  2639                           ;nozzle.c: 1420: {
  2640                           ;nozzle.c: 1421: led_counter++;
  2641  07AC  3001               	movlw	1
  2642  07AD  00BD               	movwf	??_main
  2643  07AE  083D               	movf	??_main,w
  2644  07AF  07DF               	addwf	_led_counter,f
  2645                           
  2646                           ;nozzle.c: 1422: if(led_counter >= (100 / 2))
  2647  07B0  3032               	movlw	50
  2648  07B1  025F               	subwf	_led_counter,w
  2649  07B2  1C03               	skipc
  2650  07B3  2FC1               	goto	l3035
  2651                           
  2652                           ;nozzle.c: 1423: {
  2653                           ;nozzle.c: 1428: led_counter = 0;
  2654  07B4  01DF               	clrf	_led_counter
  2655                           
  2656                           ;nozzle.c: 1429: PORTDbits.RD7 = !PORTDbits.RD7;
  2657  07B5  1003               	clrc
  2658  07B6  1F88               	btfss	8,7	;volatile
  2659  07B7  1403               	setc
  2660  07B8  1C03               	btfss	3,0
  2661  07B9  2FBE               	goto	u3560
  2662  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2663  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  2664  07BC  1788               	bsf	8,7	;volatile
  2665  07BD  2FC1               	goto	l3035
  2666  07BE                     u3560:	
  2667  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2668  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  2669  07C0  1388               	bcf	8,7	;volatile
  2670  07C1                     l3035:	
  2671                           
  2672                           ;nozzle.c: 1430: }
  2673                           ;nozzle.c: 1431: }
  2674                           ;nozzle.c: 1432: }
  2675                           ;nozzle.c: 1435: handle_ir();
  2676  07C1  120A  158A  22B7  120A  118A  	fcall	_handle_ir
  2677                           
  2678                           ;nozzle.c: 1440: adc_state();
  2679  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  2680  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  2681  07C8  0862               	movf	_adc_state,w
  2682  07C9  120A  118A  2051  120A  118A  	fcall	fptable
  2683                           
  2684                           ;nozzle.c: 1443: motor_state();
  2685  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2686  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2687  07D0  0863               	movf	_motor_state,w
  2688  07D1  120A  118A  2051  120A  118A  	fcall	fptable
  2689  07D6  2F62               	goto	l375
  2690  07D7                     __end_of_main:	
  2691                           
  2692                           	psect	text1
  2693  0803                     __ptext1:	
  2694 ;; *************** function _print_text *****************
  2695 ;; Defined at:
  2696 ;;		line 325 in file "nozzle.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  2699 ;;		 -> STR_4(2), STR_3(10), STR_2(6), STR_1(28), 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       2       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0
  2714 ;;      Totals:         0       2       0       0       0
  2715 ;;Total ram usage:        2 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    2
  2718 ;; This function calls:
  2719 ;;		_print_byte
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _print_text
  2727  0803                     _print_text:	
  2728  0803                     l2705:	
  2729                           ;nozzle.c: 327: while(*s != 0)
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _print_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2733                           
  2734  0803  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0804  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0805  0823               	movf	print_text@s+1,w
  2737  0806  00FF               	movwf	127
  2738  0807  0822               	movf	print_text@s,w
  2739  0808  0084               	movwf	4
  2740  0809  120A  118A  2100  120A  158A  	fcall	stringtab
  2741  080E  3A00               	xorlw	0
  2742  080F  1903               	btfsc	3,2
  2743  0810  0008               	return
  2744                           
  2745                           ;nozzle.c: 328: {
  2746                           ;nozzle.c: 329: print_byte(*s);
  2747  0811  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0812  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0813  0823               	movf	print_text@s+1,w
  2750  0814  00FF               	movwf	127
  2751  0815  0822               	movf	print_text@s,w
  2752  0816  0084               	movwf	4
  2753  0817  120A  118A  2100  120A  158A  	fcall	stringtab
  2754  081C  160A  118A  2799  120A  158A  	fcall	_print_byte
  2755                           
  2756                           ;nozzle.c: 330: s++;
  2757  0821  3001               	movlw	1
  2758  0822  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0823  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0824  07A2               	addwf	print_text@s,f
  2761  0825  1803               	skipnc
  2762  0826  0AA3               	incf	print_text@s+1,f
  2763  0827  2803               	goto	l2705
  2764  0828                     __end_of_print_text:	
  2765                           
  2766                           	psect	text2
  2767  07D7                     __ptext2:	
  2768 ;; *************** function _print_number_signed *****************
  2769 ;; Defined at:
  2770 ;;		line 356 in file "nozzle.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  number          2   16[BANK0 ] int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       2       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          0       2       0       0       0
  2787 ;;      Totals:         0       4       0       0       0
  2788 ;;Total ram usage:        4 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    3
  2791 ;; This function calls:
  2792 ;;		_print_byte
  2793 ;;		_print_number_nospace
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _print_number_signed
  2801  07D7                     _print_number_signed:	
  2802                           
  2803                           ;nozzle.c: 358: if(number < 0)
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _print_number_signed: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2807  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2808  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2809  07D9  1FB1               	btfss	print_number_signed@number+1,7
  2810  07DA  2FEF               	goto	l2713
  2811                           
  2812                           ;nozzle.c: 359: {
  2813                           ;nozzle.c: 360: print_byte('-');
  2814  07DB  302D               	movlw	45
  2815  07DC  160A  118A  2799  120A  118A  	fcall	_print_byte
  2816                           
  2817                           ;nozzle.c: 361: print_number_nospace(-number);
  2818  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  2819  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  2820  07E3  0930               	comf	print_number_signed@number,w
  2821  07E4  00B2               	movwf	??_print_number_signed
  2822  07E5  0931               	comf	print_number_signed@number+1,w
  2823  07E6  00B3               	movwf	??_print_number_signed+1
  2824  07E7  0AB2               	incf	??_print_number_signed,f
  2825  07E8  1903               	skipnz
  2826  07E9  0AB3               	incf	??_print_number_signed+1,f
  2827  07EA  0832               	movf	??_print_number_signed,w
  2828  07EB  00AE               	movwf	print_number_nospace@number
  2829  07EC  0833               	movf	??_print_number_signed+1,w
  2830  07ED  00AF               	movwf	print_number_nospace@number+1
  2831  07EE  2FF5               	goto	L1
  2832  07EF                     l2713:	
  2833                           ;nozzle.c: 362: }
  2834                           
  2835                           
  2836                           ;nozzle.c: 363: else
  2837                           ;nozzle.c: 364: {
  2838                           ;nozzle.c: 365: print_number_nospace(number);
  2839  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  2840  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  2841  07F1  0831               	movf	print_number_signed@number+1,w
  2842  07F2  00AF               	movwf	print_number_nospace@number+1
  2843  07F3  0830               	movf	print_number_signed@number,w
  2844  07F4  00AE               	movwf	print_number_nospace@number
  2845  07F5                     L1:	
  2846  07F5  120A  158A  2560  120A  118A  	fcall	_print_number_nospace
  2847                           
  2848                           ;nozzle.c: 366: }
  2849                           ;nozzle.c: 367: print_byte(' ');
  2850  07FA  3020               	movlw	32
  2851  07FB  160A  118A  2799   	fcall	_print_byte
  2852  07FE  0008               	return
  2853  07FF                     __end_of_print_number_signed:	
  2854                           
  2855                           	psect	text3
  2856  175C                     __ptext3:	
  2857 ;; *************** function _print_number *****************
  2858 ;; Defined at:
  2859 ;;		line 350 in file "nozzle.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  number          2   16[BANK0 ] unsigned int 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       2       0       0       0
  2874 ;;      Locals:         0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         0       2       0       0       0
  2877 ;;Total ram usage:        2 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    3
  2880 ;; This function calls:
  2881 ;;		_print_byte
  2882 ;;		_print_number_nospace
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _print_number
  2890  175C                     _print_number:	
  2891                           
  2892                           ;nozzle.c: 352: print_number_nospace(number);
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _print_number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2896  175C  1283               	bcf	3,5	;RP0=0, select bank0
  2897  175D  1303               	bcf	3,6	;RP1=0, select bank0
  2898  175E  0831               	movf	print_number@number+1,w
  2899  175F  00AF               	movwf	print_number_nospace@number+1
  2900  1760  0830               	movf	print_number@number,w
  2901  1761  00AE               	movwf	print_number_nospace@number
  2902  1762  120A  158A  2560  160A  118A  	fcall	_print_number_nospace
  2903                           
  2904                           ;nozzle.c: 353: print_byte(' ');
  2905  1767  3020               	movlw	32
  2906  1768  160A  118A  2799   	fcall	_print_byte
  2907  176B  0008               	return
  2908  176C                     __end_of_print_number:	
  2909                           
  2910                           	psect	text4
  2911  0D60                     __ptext4:	
  2912 ;; *************** function _print_number_nospace *****************
  2913 ;; Defined at:
  2914 ;;		line 335 in file "nozzle.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  number          2   14[BANK0 ] unsigned int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       2       0       0       0
  2929 ;;      Locals:         0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0
  2931 ;;      Totals:         0       2       0       0       0
  2932 ;;Total ram usage:        2 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		___lwdiv
  2937 ;;		___lwmod
  2938 ;;		_print_byte
  2939 ;; This function is called by:
  2940 ;;		_print_number
  2941 ;;		_print_number_signed
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _print_number_nospace
  2947  0D60                     _print_number_nospace:	
  2948                           
  2949                           ;nozzle.c: 337: if(number >= 10000) print_byte('0' + (number / 10000));
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _print_number_nospace: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2953  0D60  3027               	movlw	39
  2954  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0D63  022F               	subwf	print_number_nospace@number+1,w
  2957  0D64  3010               	movlw	16
  2958  0D65  1903               	skipnz
  2959  0D66  022E               	subwf	print_number_nospace@number,w
  2960  0D67  1C03               	skipc
  2961  0D68  2D7F               	goto	l2627
  2962  0D69  3010               	movlw	16
  2963  0D6A  00A0               	movwf	___lwdiv@divisor
  2964  0D6B  3027               	movlw	39
  2965  0D6C  00A1               	movwf	___lwdiv@divisor+1
  2966  0D6D  082F               	movf	print_number_nospace@number+1,w
  2967  0D6E  00A3               	movwf	___lwdiv@dividend+1
  2968  0D6F  082E               	movf	print_number_nospace@number,w
  2969  0D70  00A2               	movwf	___lwdiv@dividend
  2970  0D71  120A  158A  208D  120A  158A  	fcall	___lwdiv
  2971  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0D78  0820               	movf	?___lwdiv,w
  2974  0D79  3E30               	addlw	48
  2975  0D7A  160A  118A  2799  120A  158A  	fcall	_print_byte
  2976  0D7F                     l2627:	
  2977                           
  2978                           ;nozzle.c: 338: if(number >= 1000) print_byte('0' + ((number / 1000) % 10));
  2979  0D7F  3003               	movlw	3
  2980  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0D82  022F               	subwf	print_number_nospace@number+1,w
  2983  0D83  30E8               	movlw	232
  2984  0D84  1903               	skipnz
  2985  0D85  022E               	subwf	print_number_nospace@number,w
  2986  0D86  1C03               	skipc
  2987  0D87  2DAD               	goto	l2631
  2988  0D88  300A               	movlw	10
  2989  0D89  00A8               	movwf	___lwmod@divisor
  2990  0D8A  3000               	movlw	0
  2991  0D8B  00A9               	movwf	___lwmod@divisor+1
  2992  0D8C  30E8               	movlw	232
  2993  0D8D  00A0               	movwf	___lwdiv@divisor
  2994  0D8E  3003               	movlw	3
  2995  0D8F  00A1               	movwf	___lwdiv@divisor+1
  2996  0D90  082F               	movf	print_number_nospace@number+1,w
  2997  0D91  00A3               	movwf	___lwdiv@dividend+1
  2998  0D92  082E               	movf	print_number_nospace@number,w
  2999  0D93  00A2               	movwf	___lwdiv@dividend
  3000  0D94  120A  158A  208D  120A  158A  	fcall	___lwdiv
  3001  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0D9B  0821               	movf	?___lwdiv+1,w
  3004  0D9C  00AB               	movwf	___lwmod@dividend+1
  3005  0D9D  0820               	movf	?___lwdiv,w
  3006  0D9E  00AA               	movwf	___lwmod@dividend
  3007  0D9F  120A  158A  2059  120A  158A  	fcall	___lwmod
  3008  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0DA6  0828               	movf	?___lwmod,w
  3011  0DA7  3E30               	addlw	48
  3012  0DA8  160A  118A  2799  120A  158A  	fcall	_print_byte
  3013  0DAD                     l2631:	
  3014                           
  3015                           ;nozzle.c: 339: if(number >= 100) print_byte('0' + ((number / 100) % 10));
  3016  0DAD  3000               	movlw	0
  3017  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0DB0  022F               	subwf	print_number_nospace@number+1,w
  3020  0DB1  3064               	movlw	100
  3021  0DB2  1903               	skipnz
  3022  0DB3  022E               	subwf	print_number_nospace@number,w
  3023  0DB4  1C03               	skipc
  3024  0DB5  2DDB               	goto	l2635
  3025  0DB6  300A               	movlw	10
  3026  0DB7  00A8               	movwf	___lwmod@divisor
  3027  0DB8  3000               	movlw	0
  3028  0DB9  00A9               	movwf	___lwmod@divisor+1
  3029  0DBA  3064               	movlw	100
  3030  0DBB  00A0               	movwf	___lwdiv@divisor
  3031  0DBC  3000               	movlw	0
  3032  0DBD  00A1               	movwf	___lwdiv@divisor+1
  3033  0DBE  082F               	movf	print_number_nospace@number+1,w
  3034  0DBF  00A3               	movwf	___lwdiv@dividend+1
  3035  0DC0  082E               	movf	print_number_nospace@number,w
  3036  0DC1  00A2               	movwf	___lwdiv@dividend
  3037  0DC2  120A  158A  208D  120A  158A  	fcall	___lwdiv
  3038  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0DC9  0821               	movf	?___lwdiv+1,w
  3041  0DCA  00AB               	movwf	___lwmod@dividend+1
  3042  0DCB  0820               	movf	?___lwdiv,w
  3043  0DCC  00AA               	movwf	___lwmod@dividend
  3044  0DCD  120A  158A  2059  120A  158A  	fcall	___lwmod
  3045  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  3047  0DD4  0828               	movf	?___lwmod,w
  3048  0DD5  3E30               	addlw	48
  3049  0DD6  160A  118A  2799  120A  158A  	fcall	_print_byte
  3050  0DDB                     l2635:	
  3051                           
  3052                           ;nozzle.c: 340: if(number >= 10) print_byte('0' + ((number / 10) % 10));
  3053  0DDB  3000               	movlw	0
  3054  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0DDE  022F               	subwf	print_number_nospace@number+1,w
  3057  0DDF  300A               	movlw	10
  3058  0DE0  1903               	skipnz
  3059  0DE1  022E               	subwf	print_number_nospace@number,w
  3060  0DE2  1C03               	skipc
  3061  0DE3  2E09               	goto	l143
  3062  0DE4  300A               	movlw	10
  3063  0DE5  00A8               	movwf	___lwmod@divisor
  3064  0DE6  3000               	movlw	0
  3065  0DE7  00A9               	movwf	___lwmod@divisor+1
  3066  0DE8  300A               	movlw	10
  3067  0DE9  00A0               	movwf	___lwdiv@divisor
  3068  0DEA  3000               	movlw	0
  3069  0DEB  00A1               	movwf	___lwdiv@divisor+1
  3070  0DEC  082F               	movf	print_number_nospace@number+1,w
  3071  0DED  00A3               	movwf	___lwdiv@dividend+1
  3072  0DEE  082E               	movf	print_number_nospace@number,w
  3073  0DEF  00A2               	movwf	___lwdiv@dividend
  3074  0DF0  120A  158A  208D  120A  158A  	fcall	___lwdiv
  3075  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0DF7  0821               	movf	?___lwdiv+1,w
  3078  0DF8  00AB               	movwf	___lwmod@dividend+1
  3079  0DF9  0820               	movf	?___lwdiv,w
  3080  0DFA  00AA               	movwf	___lwmod@dividend
  3081  0DFB  120A  158A  2059  120A  158A  	fcall	___lwmod
  3082  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0E02  0828               	movf	?___lwmod,w
  3085  0E03  3E30               	addlw	48
  3086  0E04  160A  118A  2799  120A  158A  	fcall	_print_byte
  3087  0E09                     l143:	
  3088                           
  3089                           ;nozzle.c: 341: print_byte('0' + (number % 10));
  3090  0E09  300A               	movlw	10
  3091  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0E0C  00A8               	movwf	___lwmod@divisor
  3094  0E0D  3000               	movlw	0
  3095  0E0E  00A9               	movwf	___lwmod@divisor+1
  3096  0E0F  082F               	movf	print_number_nospace@number+1,w
  3097  0E10  00AB               	movwf	___lwmod@dividend+1
  3098  0E11  082E               	movf	print_number_nospace@number,w
  3099  0E12  00AA               	movwf	___lwmod@dividend
  3100  0E13  120A  158A  2059  120A  158A  	fcall	___lwmod
  3101  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0E1A  0828               	movf	?___lwmod,w
  3104  0E1B  3E30               	addlw	48
  3105  0E1C  160A  118A  2799   	fcall	_print_byte
  3106  0E1F  0008               	return
  3107  0E20                     __end_of_print_number_nospace:	
  3108                           
  3109                           	psect	text5
  3110  1799                     __ptext5:	
  3111 ;; *************** function _print_byte *****************
  3112 ;; Defined at:
  3113 ;;		line 312 in file "nozzle.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  c               1    wreg     unsigned char 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  c               1    1[BANK0 ] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       0       0       0       0
  3128 ;;      Locals:         0       1       0       0       0
  3129 ;;      Temps:          0       1       0       0       0
  3130 ;;      Totals:         0       2       0       0       0
  3131 ;;Total ram usage:        2 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_print_text
  3138 ;;		_print_number_nospace
  3139 ;;		_print_number
  3140 ;;		_print_number_signed
  3141 ;;		_print_number2
  3142 ;;		_print_hex2
  3143 ;;		_print_bin
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _print_byte
  3149  1799                     _print_byte:	
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _print_byte: [wreg-fsr0h+status,2+status,0]
  3153                           ;print_byte@c stored from wreg
  3154  1799  1283               	bcf	3,5	;RP0=0, select bank0
  3155  179A  1303               	bcf	3,6	;RP1=0, select bank0
  3156  179B  00A1               	movwf	print_byte@c
  3157                           
  3158                           ;nozzle.c: 314: if(uart_size < 64)
  3159  179C  3040               	movlw	64
  3160  179D  0279               	subwf	_uart_size,w
  3161  179E  1803               	skipnc
  3162  179F  0008               	return
  3163                           
  3164                           ;nozzle.c: 315: {
  3165                           ;nozzle.c: 316: uart_buffer[uart_position1++] = c;
  3166  17A0  0821               	movf	print_byte@c,w
  3167  17A1  00A0               	movwf	??_print_byte
  3168  17A2  0878               	movf	_uart_position1,w
  3169  17A3  3E10               	addlw	(low (_uart_buffer| (0+256)))& (0+255)
  3170  17A4  0084               	movwf	4
  3171  17A5  0820               	movf	??_print_byte,w
  3172  17A6  1783               	bsf	3,7	;select IRP bank2
  3173  17A7  0080               	movwf	0
  3174  17A8  3001               	movlw	1
  3175  17A9  00A0               	movwf	??_print_byte
  3176  17AA  0820               	movf	??_print_byte,w
  3177  17AB  07F8               	addwf	_uart_position1,f
  3178                           
  3179                           ;nozzle.c: 317: uart_size++;
  3180  17AC  3001               	movlw	1
  3181  17AD  00A0               	movwf	??_print_byte
  3182  17AE  0820               	movf	??_print_byte,w
  3183  17AF  07F9               	addwf	_uart_size,f
  3184                           
  3185                           ;nozzle.c: 318: if(uart_position1 >= 64)
  3186  17B0  3040               	movlw	64
  3187  17B1  0278               	subwf	_uart_position1,w
  3188  17B2  1C03               	skipc
  3189  17B3  0008               	return
  3190                           
  3191                           ;nozzle.c: 319: {
  3192                           ;nozzle.c: 320: uart_position1 = 0;
  3193  17B4  01F8               	clrf	_uart_position1
  3194  17B5  0008               	return
  3195  17B6                     __end_of_print_byte:	
  3196                           
  3197                           	psect	text6
  3198  0859                     __ptext6:	
  3199 ;; *************** function ___lwmod *****************
  3200 ;; Defined at:
  3201 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  divisor         2    8[BANK0 ] unsigned int 
  3204 ;;  dividend        2   10[BANK0 ] unsigned int 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  counter         1   13[BANK0 ] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2    8[BANK0 ] unsigned int 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       4       0       0       0
  3217 ;;      Locals:         0       1       0       0       0
  3218 ;;      Temps:          0       1       0       0       0
  3219 ;;      Totals:         0       6       0       0       0
  3220 ;;Total ram usage:        6 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_print_number_nospace
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function ___lwmod
  3232  0859                     ___lwmod:	
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3236  0859  1283               	bcf	3,5	;RP0=0, select bank0
  3237  085A  1303               	bcf	3,6	;RP1=0, select bank0
  3238  085B  0828               	movf	___lwmod@divisor,w
  3239  085C  0429               	iorwf	___lwmod@divisor+1,w
  3240  085D  1903               	btfsc	3,2
  3241  085E  2888               	goto	l1861
  3242  085F  01AD               	clrf	___lwmod@counter
  3243  0860  0AAD               	incf	___lwmod@counter,f
  3244  0861                     l1851:	
  3245  0861  1BA9               	btfsc	___lwmod@divisor+1,7
  3246  0862  286F               	goto	l1853
  3247  0863  3001               	movlw	1
  3248  0864                     u1755:	
  3249  0864  1003               	clrc
  3250  0865  0DA8               	rlf	___lwmod@divisor,f
  3251  0866  0DA9               	rlf	___lwmod@divisor+1,f
  3252  0867  3EFF               	addlw	-1
  3253  0868  1D03               	skipz
  3254  0869  2864               	goto	u1755
  3255  086A  3001               	movlw	1
  3256  086B  00AC               	movwf	??___lwmod
  3257  086C  082C               	movf	??___lwmod,w
  3258  086D  07AD               	addwf	___lwmod@counter,f
  3259  086E  2861               	goto	l1851
  3260  086F                     l1853:	
  3261  086F  0829               	movf	___lwmod@divisor+1,w
  3262  0870  022B               	subwf	___lwmod@dividend+1,w
  3263  0871  1D03               	skipz
  3264  0872  2875               	goto	u1775
  3265  0873  0828               	movf	___lwmod@divisor,w
  3266  0874  022A               	subwf	___lwmod@dividend,w
  3267  0875                     u1775:	
  3268  0875  1C03               	skipc
  3269  0876  287D               	goto	l1857
  3270  0877  0828               	movf	___lwmod@divisor,w
  3271  0878  02AA               	subwf	___lwmod@dividend,f
  3272  0879  0829               	movf	___lwmod@divisor+1,w
  3273  087A  1C03               	skipc
  3274  087B  03AB               	decf	___lwmod@dividend+1,f
  3275  087C  02AB               	subwf	___lwmod@dividend+1,f
  3276  087D                     l1857:	
  3277  087D  3001               	movlw	1
  3278  087E                     u1785:	
  3279  087E  1003               	clrc
  3280  087F  0CA9               	rrf	___lwmod@divisor+1,f
  3281  0880  0CA8               	rrf	___lwmod@divisor,f
  3282  0881  3EFF               	addlw	-1
  3283  0882  1D03               	skipz
  3284  0883  287E               	goto	u1785
  3285  0884  3001               	movlw	1
  3286  0885  02AD               	subwf	___lwmod@counter,f
  3287  0886  1D03               	btfss	3,2
  3288  0887  286F               	goto	l1853
  3289  0888                     l1861:	
  3290  0888  082B               	movf	___lwmod@dividend+1,w
  3291  0889  00A9               	movwf	?___lwmod+1
  3292  088A  082A               	movf	___lwmod@dividend,w
  3293  088B  00A8               	movwf	?___lwmod
  3294  088C  0008               	return
  3295  088D                     __end_of___lwmod:	
  3296                           
  3297                           	psect	text7
  3298  088D                     __ptext7:	
  3299 ;; *************** function ___lwdiv *****************
  3300 ;; Defined at:
  3301 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  divisor         2    0[BANK0 ] unsigned int 
  3304 ;;  dividend        2    2[BANK0 ] unsigned int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  quotient        2    5[BANK0 ] unsigned int 
  3307 ;;  counter         1    7[BANK0 ] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2    0[BANK0 ] unsigned int 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       4       0       0       0
  3318 ;;      Locals:         0       3       0       0       0
  3319 ;;      Temps:          0       1       0       0       0
  3320 ;;      Totals:         0       8       0       0       0
  3321 ;;Total ram usage:        8 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    1
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_print_number_nospace
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           
  3332                           ;psect for function ___lwdiv
  3333  088D                     ___lwdiv:	
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3337  088D  1283               	bcf	3,5	;RP0=0, select bank0
  3338  088E  1303               	bcf	3,6	;RP1=0, select bank0
  3339  088F  01A5               	clrf	___lwdiv@quotient
  3340  0890  01A6               	clrf	___lwdiv@quotient+1
  3341  0891  0820               	movf	___lwdiv@divisor,w
  3342  0892  0421               	iorwf	___lwdiv@divisor+1,w
  3343  0893  1903               	btfsc	3,2
  3344  0894  28C6               	goto	l1839
  3345  0895  01A7               	clrf	___lwdiv@counter
  3346  0896  0AA7               	incf	___lwdiv@counter,f
  3347  0897                     l1827:	
  3348  0897  1BA1               	btfsc	___lwdiv@divisor+1,7
  3349  0898  28A5               	goto	l1829
  3350  0899  3001               	movlw	1
  3351  089A                     u1685:	
  3352  089A  1003               	clrc
  3353  089B  0DA0               	rlf	___lwdiv@divisor,f
  3354  089C  0DA1               	rlf	___lwdiv@divisor+1,f
  3355  089D  3EFF               	addlw	-1
  3356  089E  1D03               	skipz
  3357  089F  289A               	goto	u1685
  3358  08A0  3001               	movlw	1
  3359  08A1  00A4               	movwf	??___lwdiv
  3360  08A2  0824               	movf	??___lwdiv,w
  3361  08A3  07A7               	addwf	___lwdiv@counter,f
  3362  08A4  2897               	goto	l1827
  3363  08A5                     l1829:	
  3364  08A5  3001               	movlw	1
  3365  08A6                     u1705:	
  3366  08A6  1003               	clrc
  3367  08A7  0DA5               	rlf	___lwdiv@quotient,f
  3368  08A8  0DA6               	rlf	___lwdiv@quotient+1,f
  3369  08A9  3EFF               	addlw	-1
  3370  08AA  1D03               	skipz
  3371  08AB  28A6               	goto	u1705
  3372  08AC  0821               	movf	___lwdiv@divisor+1,w
  3373  08AD  0223               	subwf	___lwdiv@dividend+1,w
  3374  08AE  1D03               	skipz
  3375  08AF  28B2               	goto	u1715
  3376  08B0  0820               	movf	___lwdiv@divisor,w
  3377  08B1  0222               	subwf	___lwdiv@dividend,w
  3378  08B2                     u1715:	
  3379  08B2  1C03               	skipc
  3380  08B3  28BB               	goto	l1835
  3381  08B4  0820               	movf	___lwdiv@divisor,w
  3382  08B5  02A2               	subwf	___lwdiv@dividend,f
  3383  08B6  0821               	movf	___lwdiv@divisor+1,w
  3384  08B7  1C03               	skipc
  3385  08B8  03A3               	decf	___lwdiv@dividend+1,f
  3386  08B9  02A3               	subwf	___lwdiv@dividend+1,f
  3387  08BA  1425               	bsf	___lwdiv@quotient,0
  3388  08BB                     l1835:	
  3389  08BB  3001               	movlw	1
  3390  08BC                     u1725:	
  3391  08BC  1003               	clrc
  3392  08BD  0CA1               	rrf	___lwdiv@divisor+1,f
  3393  08BE  0CA0               	rrf	___lwdiv@divisor,f
  3394  08BF  3EFF               	addlw	-1
  3395  08C0  1D03               	skipz
  3396  08C1  28BC               	goto	u1725
  3397  08C2  3001               	movlw	1
  3398  08C3  02A7               	subwf	___lwdiv@counter,f
  3399  08C4  1D03               	btfss	3,2
  3400  08C5  28A5               	goto	l1829
  3401  08C6                     l1839:	
  3402  08C6  0826               	movf	___lwdiv@quotient+1,w
  3403  08C7  00A1               	movwf	?___lwdiv+1
  3404  08C8  0825               	movf	___lwdiv@quotient,w
  3405  08C9  00A0               	movwf	?___lwdiv
  3406  08CA  0008               	return
  3407  08CB                     __end_of___lwdiv:	
  3408                           
  3409                           	psect	text8
  3410  0A4D                     __ptext8:	
  3411 ;; *************** function _motor_home2 *****************
  3412 ;; Defined at:
  3413 ;;		line 591 in file "nozzle.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  sensor_value    1   10[BANK0 ] unsigned char 
  3418 ;;  tracking        1    9[BANK0 ] PTR struct .
  3419 ;;		 -> tracking_state(36), 
  3420 ;;  current_boun    1    6[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         0       5       0       0       0
  3432 ;;      Temps:          0       2       0       0       0
  3433 ;;      Totals:         0       7       0       0       0
  3434 ;;Total ram usage:        7 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		___bmul
  3439 ;; This function is called by:
  3440 ;;		_motor_home1
  3441 ;;		_main
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _motor_home2
  3447  0A4D                     _motor_home2:	
  3448                           
  3449                           ;nozzle.c: 593: tracking_state_t *tracking = &tracking_state[current_motor];
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _motor_home2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3453  0A4D  300C               	movlw	12
  3454  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3455  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3456  0A50  00A4               	movwf	??_motor_home2
  3457  0A51  0824               	movf	??_motor_home2,w
  3458  0A52  00A0               	movwf	___bmul@multiplicand
  3459  0A53  085C               	movf	_current_motor,w
  3460  0A54  160A  118A  276C  120A  158A  	fcall	___bmul
  3461  0A59  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  3462  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0A5C  00A5               	movwf	??_motor_home2+1
  3465  0A5D  0825               	movf	??_motor_home2+1,w
  3466  0A5E  00A9               	movwf	motor_home2@tracking
  3467                           
  3468                           ;nozzle.c: 594: uint8_t current_boundary = tracking->boundary;
  3469  0A5F  0829               	movf	motor_home2@tracking,w
  3470  0A60  0084               	movwf	4
  3471  0A61  1383               	bcf	3,7	;select IRP bank0
  3472  0A62  0800               	movf	0,w
  3473  0A63  00A4               	movwf	??_motor_home2
  3474  0A64  0824               	movf	??_motor_home2,w
  3475  0A65  00A6               	movwf	motor_home2@current_boundary
  3476                           
  3477                           ;nozzle.c: 595: uint8_t sensor_value = sensors[current_boundary].analog;
  3478  0A66  0826               	movf	motor_home2@current_boundary,w
  3479  0A67  00A4               	movwf	??_motor_home2
  3480  0A68  3001               	movlw	1
  3481  0A69                     u3285:	
  3482  0A69  1003               	clrc
  3483  0A6A  0DA4               	rlf	??_motor_home2,f
  3484  0A6B  3EFF               	addlw	-1
  3485  0A6C  1D03               	skipz
  3486  0A6D  2A69               	goto	u3285
  3487  0A6E  1003               	clrc
  3488  0A6F  0D24               	rlf	??_motor_home2,w
  3489  0A70  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  3490  0A71  0084               	movwf	4
  3491  0A72  0800               	movf	0,w
  3492  0A73  00A5               	movwf	??_motor_home2+1
  3493  0A74  0825               	movf	??_motor_home2+1,w
  3494  0A75  00AA               	movwf	motor_home2@sensor_value
  3495                           
  3496                           ;nozzle.c: 596: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value
      +                           - 0x80)) >= 0x20)
  3497  0A76  082A               	movf	motor_home2@sensor_value,w
  3498  0A77  3E80               	addlw	128
  3499  0A78  00A4               	movwf	??_motor_home2
  3500  0A79  30FF               	movlw	255
  3501  0A7A  1803               	skipnc
  3502  0A7B  3000               	movlw	0
  3503  0A7C  00A5               	movwf	??_motor_home2+1
  3504  0A7D  1BA5               	btfsc	??_motor_home2+1,7
  3505  0A7E  2A86               	goto	l2791
  3506  0A7F  082A               	movf	motor_home2@sensor_value,w
  3507  0A80  3E80               	addlw	128
  3508  0A81  00A7               	movwf	_motor_home2$457
  3509  0A82  30FF               	movlw	255
  3510  0A83  1803               	skipnc
  3511  0A84  3000               	movlw	0
  3512  0A85  2A95               	goto	L2
  3513  0A86                     l2791:	
  3514  0A86  082A               	movf	motor_home2@sensor_value,w
  3515  0A87  3E80               	addlw	128
  3516  0A88  00A4               	movwf	??_motor_home2
  3517  0A89  30FF               	movlw	255
  3518  0A8A  1803               	skipnc
  3519  0A8B  3000               	movlw	0
  3520  0A8C  00A5               	movwf	??_motor_home2+1
  3521  0A8D  09A4               	comf	??_motor_home2,f
  3522  0A8E  09A5               	comf	??_motor_home2+1,f
  3523  0A8F  0AA4               	incf	??_motor_home2,f
  3524  0A90  1903               	skipnz
  3525  0A91  0AA5               	incf	??_motor_home2+1,f
  3526  0A92  0824               	movf	??_motor_home2,w
  3527  0A93  00A7               	movwf	_motor_home2$457
  3528  0A94  0825               	movf	??_motor_home2+1,w
  3529  0A95                     L2:	
  3530  0A95  00A8               	movwf	_motor_home2$457+1
  3531  0A96  0828               	movf	_motor_home2$457+1,w
  3532  0A97  3A80               	xorlw	128
  3533  0A98  00FF               	movwf	127
  3534  0A99  3080               	movlw	128
  3535  0A9A  027F               	subwf	127,w
  3536  0A9B  1D03               	skipz
  3537  0A9C  2A9F               	goto	u3305
  3538  0A9D  3020               	movlw	32
  3539  0A9E  0227               	subwf	_motor_home2$457,w
  3540  0A9F                     u3305:	
  3541  0A9F  1C03               	skipc
  3542  0AA0  0008               	return
  3543                           
  3544                           ;nozzle.c: 597: {
  3545                           ;nozzle.c: 599: motor_master &= tracking->total_unmask;
  3546  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0AA3  0829               	movf	motor_home2@tracking,w
  3549  0AA4  3E04               	addlw	4
  3550  0AA5  0084               	movwf	4
  3551  0AA6  1383               	bcf	3,7	;select IRP bank0
  3552  0AA7  0800               	movf	0,w
  3553  0AA8  00A4               	movwf	??_motor_home2
  3554  0AA9  0824               	movf	??_motor_home2,w
  3555  0AAA  05DB               	andwf	_motor_master,f
  3556                           
  3557                           ;nozzle.c: 600: motor_state = motor_home3;
  3558  0AAB  301C               	movlw	(low (fp__motor_home3-fpbase))& (0+255)
  3559  0AAC  00A4               	movwf	??_motor_home2
  3560  0AAD  0824               	movf	??_motor_home2,w
  3561  0AAE  00E3               	movwf	_motor_state
  3562                           
  3563                           ;nozzle.c: 601: tracking->timer = (100 / 2);
  3564  0AAF  3032               	movlw	50
  3565  0AB0  00A4               	movwf	??_motor_home2
  3566  0AB1  0829               	movf	motor_home2@tracking,w
  3567  0AB2  3E06               	addlw	6
  3568  0AB3  0084               	movwf	4
  3569  0AB4  0824               	movf	??_motor_home2,w
  3570  0AB5  0080               	movwf	0
  3571  0AB6  0008               	return
  3572  0AB7                     __end_of_motor_home2:	
  3573                           
  3574                           	psect	text9
  3575  17D4                     __ptext9:	
  3576 ;; *************** function _motor_home3 *****************
  3577 ;; Defined at:
  3578 ;;		line 579 in file "nozzle.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  tracking        1    6[BANK0 ] PTR struct .
  3583 ;;		 -> tracking_state(36), 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         0       1       0       0       0
  3595 ;;      Temps:          0       2       0       0       0
  3596 ;;      Totals:         0       3       0       0       0
  3597 ;;Total ram usage:        3 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    2
  3600 ;; This function calls:
  3601 ;;		___bmul
  3602 ;; This function is called by:
  3603 ;;		_motor_home2
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function _motor_home3
  3610  17D4                     _motor_home3:	
  3611                           
  3612                           ;nozzle.c: 581: tracking_state_t *tracking = &tracking_state[current_motor];
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _motor_home3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3616  17D4  300C               	movlw	12
  3617  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  3618  17D6  1303               	bcf	3,6	;RP1=0, select bank0
  3619  17D7  00A4               	movwf	??_motor_home3
  3620  17D8  0824               	movf	??_motor_home3,w
  3621  17D9  00A0               	movwf	___bmul@multiplicand
  3622  17DA  085C               	movf	_current_motor,w
  3623  17DB  160A  118A  276C  160A  118A  	fcall	___bmul
  3624  17E0  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  3625  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  3626  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  3627  17E3  00A5               	movwf	??_motor_home3+1
  3628  17E4  0825               	movf	??_motor_home3+1,w
  3629  17E5  00A6               	movwf	motor_home3@tracking
  3630                           
  3631                           ;nozzle.c: 582: if(tracking->timer == 0)
  3632  17E6  0826               	movf	motor_home3@tracking,w
  3633  17E7  3E06               	addlw	6
  3634  17E8  0084               	movwf	4
  3635  17E9  1383               	bcf	3,7	;select IRP bank0
  3636  17EA  0800               	movf	0,w
  3637  17EB  1D03               	btfss	3,2
  3638  17EC  0008               	return
  3639                           
  3640                           ;nozzle.c: 583: {
  3641                           ;nozzle.c: 584: motor_master &= tracking->total_unmask;
  3642  17ED  0826               	movf	motor_home3@tracking,w
  3643  17EE  3E04               	addlw	4
  3644  17EF  0084               	movwf	4
  3645  17F0  0800               	movf	0,w
  3646  17F1  00A4               	movwf	??_motor_home3
  3647  17F2  0824               	movf	??_motor_home3,w
  3648  17F3  05DB               	andwf	_motor_master,f
  3649                           
  3650                           ;nozzle.c: 585: motor_master |= tracking->inc_mask;
  3651  17F4  0826               	movf	motor_home3@tracking,w
  3652  17F5  3E03               	addlw	3
  3653  17F6  0084               	movwf	4
  3654  17F7  0800               	movf	0,w
  3655  17F8  00A4               	movwf	??_motor_home3
  3656  17F9  0824               	movf	??_motor_home3,w
  3657  17FA  04DB               	iorwf	_motor_master,f
  3658                           
  3659                           ;nozzle.c: 586: motor_state = motor_home4;
  3660  17FB  3019               	movlw	(low (fp__motor_home4-fpbase))& (0+255)
  3661  17FC  00A4               	movwf	??_motor_home3
  3662  17FD  0824               	movf	??_motor_home3,w
  3663  17FE  00E3               	movwf	_motor_state
  3664  17FF  0008               	return
  3665  1800                     __end_of_motor_home3:	
  3666                           
  3667                           	psect	text10
  3668  0075                     __ptext10:	
  3669 ;; *************** function _motor_home4 *****************
  3670 ;; Defined at:
  3671 ;;		line 564 in file "nozzle.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  current_enco    1   10[BANK0 ] unsigned char 
  3676 ;;  sensor_value    1   11[BANK0 ] unsigned char 
  3677 ;;  tracking        1    9[BANK0 ] PTR struct .
  3678 ;;		 -> tracking_state(36), 
  3679 ;;  current_boun    1    6[BANK0 ] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         0       6       0       0       0
  3691 ;;      Temps:          0       2       0       0       0
  3692 ;;      Totals:         0       8       0       0       0
  3693 ;;Total ram usage:        8 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    2
  3696 ;; This function calls:
  3697 ;;		___bmul
  3698 ;; This function is called by:
  3699 ;;		_motor_home3
  3700 ;;		_main
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           
  3705                           ;psect for function _motor_home4
  3706  0075                     _motor_home4:	
  3707                           
  3708                           ;nozzle.c: 566: tracking_state_t *tracking = &tracking_state[current_motor];
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _motor_home4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3712  0075  300C               	movlw	12
  3713  0076  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0077  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0078  00A4               	movwf	??_motor_home4
  3716  0079  0824               	movf	??_motor_home4,w
  3717  007A  00A0               	movwf	___bmul@multiplicand
  3718  007B  085C               	movf	_current_motor,w
  3719  007C  160A  118A  276C  120A  118A  	fcall	___bmul
  3720  0081  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  3721  0082  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0083  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0084  00A5               	movwf	??_motor_home4+1
  3724  0085  0825               	movf	??_motor_home4+1,w
  3725  0086  00A9               	movwf	motor_home4@tracking
  3726                           
  3727                           ;nozzle.c: 567: uint8_t current_boundary = tracking->boundary;
  3728  0087  0829               	movf	motor_home4@tracking,w
  3729  0088  0084               	movwf	4
  3730  0089  1383               	bcf	3,7	;select IRP bank0
  3731  008A  0800               	movf	0,w
  3732  008B  00A4               	movwf	??_motor_home4
  3733  008C  0824               	movf	??_motor_home4,w
  3734  008D  00A6               	movwf	motor_home4@current_boundary
  3735                           
  3736                           ;nozzle.c: 568: uint8_t sensor_value = sensors[current_boundary].analog;
  3737  008E  0826               	movf	motor_home4@current_boundary,w
  3738  008F  00A4               	movwf	??_motor_home4
  3739  0090  3001               	movlw	1
  3740  0091                     u3225:	
  3741  0091  1003               	clrc
  3742  0092  0DA4               	rlf	??_motor_home4,f
  3743  0093  3EFF               	addlw	-1
  3744  0094  1D03               	skipz
  3745  0095  2891               	goto	u3225
  3746  0096  1003               	clrc
  3747  0097  0D24               	rlf	??_motor_home4,w
  3748  0098  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  3749  0099  0084               	movwf	4
  3750  009A  0800               	movf	0,w
  3751  009B  00A5               	movwf	??_motor_home4+1
  3752  009C  0825               	movf	??_motor_home4+1,w
  3753  009D  00AB               	movwf	motor_home4@sensor_value
  3754                           
  3755                           ;nozzle.c: 569: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value
      +                           - 0x80)) >= 0x20)
  3756  009E  082B               	movf	motor_home4@sensor_value,w
  3757  009F  3E80               	addlw	128
  3758  00A0  00A4               	movwf	??_motor_home4
  3759  00A1  30FF               	movlw	255
  3760  00A2  1803               	skipnc
  3761  00A3  3000               	movlw	0
  3762  00A4  00A5               	movwf	??_motor_home4+1
  3763  00A5  1BA5               	btfsc	??_motor_home4+1,7
  3764  00A6  28AE               	goto	l2761
  3765  00A7  082B               	movf	motor_home4@sensor_value,w
  3766  00A8  3E80               	addlw	128
  3767  00A9  00A7               	movwf	_motor_home4$425
  3768  00AA  30FF               	movlw	255
  3769  00AB  1803               	skipnc
  3770  00AC  3000               	movlw	0
  3771  00AD  28BD               	goto	L3
  3772  00AE                     l2761:	
  3773  00AE  082B               	movf	motor_home4@sensor_value,w
  3774  00AF  3E80               	addlw	128
  3775  00B0  00A4               	movwf	??_motor_home4
  3776  00B1  30FF               	movlw	255
  3777  00B2  1803               	skipnc
  3778  00B3  3000               	movlw	0
  3779  00B4  00A5               	movwf	??_motor_home4+1
  3780  00B5  09A4               	comf	??_motor_home4,f
  3781  00B6  09A5               	comf	??_motor_home4+1,f
  3782  00B7  0AA4               	incf	??_motor_home4,f
  3783  00B8  1903               	skipnz
  3784  00B9  0AA5               	incf	??_motor_home4+1,f
  3785  00BA  0824               	movf	??_motor_home4,w
  3786  00BB  00A7               	movwf	_motor_home4$425
  3787  00BC  0825               	movf	??_motor_home4+1,w
  3788  00BD                     L3:	
  3789  00BD  00A8               	movwf	_motor_home4$425+1
  3790  00BE  0828               	movf	_motor_home4$425+1,w
  3791  00BF  3A80               	xorlw	128
  3792  00C0  00FF               	movwf	127
  3793  00C1  3080               	movlw	128
  3794  00C2  027F               	subwf	127,w
  3795  00C3  1D03               	skipz
  3796  00C4  28C7               	goto	u3245
  3797  00C5  3020               	movlw	32
  3798  00C6  0227               	subwf	_motor_home4$425,w
  3799  00C7                     u3245:	
  3800  00C7  1C03               	skipc
  3801  00C8  0008               	return
  3802                           
  3803                           ;nozzle.c: 570: {
  3804                           ;nozzle.c: 571: uint8_t current_encoder = tracking->encoder;
  3805  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  3806  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  3807  00CB  0A29               	incf	motor_home4@tracking,w
  3808  00CC  0084               	movwf	4
  3809  00CD  1383               	bcf	3,7	;select IRP bank0
  3810  00CE  0800               	movf	0,w
  3811  00CF  00A4               	movwf	??_motor_home4
  3812  00D0  0824               	movf	??_motor_home4,w
  3813  00D1  00AA               	movwf	motor_home4@current_encoder
  3814                           
  3815                           ;nozzle.c: 572: sensors[current_encoder].position = 0;
  3816  00D2  082A               	movf	motor_home4@current_encoder,w
  3817  00D3  00A4               	movwf	??_motor_home4
  3818  00D4  3001               	movlw	1
  3819  00D5                     u3255:	
  3820  00D5  1003               	clrc
  3821  00D6  0DA4               	rlf	??_motor_home4,f
  3822  00D7  3EFF               	addlw	-1
  3823  00D8  1D03               	skipz
  3824  00D9  28D5               	goto	u3255
  3825  00DA  1003               	clrc
  3826  00DB  0D24               	rlf	??_motor_home4,w
  3827  00DC  3E03               	addlw	3
  3828  00DD  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  3829  00DE  0084               	movwf	4
  3830  00DF  0180               	clrf	0
  3831                           
  3832                           ;nozzle.c: 573: sensors[current_encoder].step = 1;
  3833  00E0  082A               	movf	motor_home4@current_encoder,w
  3834  00E1  00A4               	movwf	??_motor_home4
  3835  00E2  3001               	movlw	1
  3836  00E3                     u3265:	
  3837  00E3  1003               	clrc
  3838  00E4  0DA4               	rlf	??_motor_home4,f
  3839  00E5  3EFF               	addlw	-1
  3840  00E6  1D03               	skipz
  3841  00E7  28E3               	goto	u3265
  3842  00E8  1003               	clrc
  3843  00E9  0D24               	rlf	??_motor_home4,w
  3844  00EA  3E02               	addlw	2
  3845  00EB  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  3846  00EC  0084               	movwf	4
  3847  00ED  0180               	clrf	0
  3848  00EE  0A80               	incf	0,f
  3849                           
  3850                           ;nozzle.c: 574: motor_state = motor_home5;
  3851  00EF  3016               	movlw	(low (fp__motor_home5-fpbase))& (0+255)
  3852  00F0  00A4               	movwf	??_motor_home4
  3853  00F1  0824               	movf	??_motor_home4,w
  3854  00F2  00E3               	movwf	_motor_state
  3855  00F3  0008               	return
  3856  00F4                     __end_of_motor_home4:	
  3857                           
  3858                           	psect	text11
  3859  099C                     __ptext11:	
  3860 ;; *************** function _motor_home5 *****************
  3861 ;; Defined at:
  3862 ;;		line 540 in file "nozzle.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  tracking        1    8[BANK0 ] PTR struct .
  3867 ;;		 -> tracking_state(36), 
  3868 ;;  current_enco    1    7[BANK0 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       0       0       0       0
  3879 ;;      Locals:         0       2       0       0       0
  3880 ;;      Temps:          0       3       0       0       0
  3881 ;;      Totals:         0       5       0       0       0
  3882 ;;Total ram usage:        5 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    2
  3885 ;; This function calls:
  3886 ;;		___bmul
  3887 ;; This function is called by:
  3888 ;;		_motor_home4
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _motor_home5
  3895  099C                     _motor_home5:	
  3896                           
  3897                           ;nozzle.c: 542: tracking_state_t *tracking = &tracking_state[current_motor];
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _motor_home5: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3901  099C  300C               	movlw	12
  3902  099D  1283               	bcf	3,5	;RP0=0, select bank0
  3903  099E  1303               	bcf	3,6	;RP1=0, select bank0
  3904  099F  00A4               	movwf	??_motor_home5
  3905  09A0  0824               	movf	??_motor_home5,w
  3906  09A1  00A0               	movwf	___bmul@multiplicand
  3907  09A2  085C               	movf	_current_motor,w
  3908  09A3  160A  118A  276C  120A  158A  	fcall	___bmul
  3909  09A8  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  3910  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  3911  09AA  1303               	bcf	3,6	;RP1=0, select bank0
  3912  09AB  00A5               	movwf	??_motor_home5+1
  3913  09AC  0825               	movf	??_motor_home5+1,w
  3914  09AD  00A8               	movwf	motor_home5@tracking
  3915                           
  3916                           ;nozzle.c: 543: uint8_t current_encoder = tracking->encoder;
  3917  09AE  0A28               	incf	motor_home5@tracking,w
  3918  09AF  0084               	movwf	4
  3919  09B0  1383               	bcf	3,7	;select IRP bank0
  3920  09B1  0800               	movf	0,w
  3921  09B2  00A4               	movwf	??_motor_home5
  3922  09B3  0824               	movf	??_motor_home5,w
  3923  09B4  00A7               	movwf	motor_home5@current_encoder
  3924                           
  3925                           ;nozzle.c: 544: if(sensors[current_encoder].position >=
  3926                           ;nozzle.c: 545: tracking_state[current_motor].target_position)
  3927  09B5  0827               	movf	motor_home5@current_encoder,w
  3928  09B6  00A4               	movwf	??_motor_home5
  3929  09B7  3001               	movlw	1
  3930  09B8                     u3205:	
  3931  09B8  1003               	clrc
  3932  09B9  0DA4               	rlf	??_motor_home5,f
  3933  09BA  3EFF               	addlw	-1
  3934  09BB  1D03               	skipz
  3935  09BC  29B8               	goto	u3205
  3936  09BD  1003               	clrc
  3937  09BE  0D24               	rlf	??_motor_home5,w
  3938  09BF  3E03               	addlw	3
  3939  09C0  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  3940  09C1  0084               	movwf	4
  3941  09C2  0800               	movf	0,w
  3942  09C3  3A80               	xorlw	128
  3943  09C4  00A5               	movwf	??_motor_home5+1
  3944  09C5  300C               	movlw	12
  3945  09C6  00A6               	movwf	??_motor_home5+2
  3946  09C7  0826               	movf	??_motor_home5+2,w
  3947  09C8  00A0               	movwf	___bmul@multiplicand
  3948  09C9  085C               	movf	_current_motor,w
  3949  09CA  160A  118A  276C  120A  158A  	fcall	___bmul
  3950  09CF  3E07               	addlw	7
  3951  09D0  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  3952  09D1  0084               	movwf	4
  3953  09D2  1383               	bcf	3,7	;select IRP bank1
  3954  09D3  0800               	movf	0,w
  3955  09D4  3A80               	xorlw	128
  3956  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  3957  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  3958  09D7  02A5               	subwf	??_motor_home5+1,f
  3959  09D8  1C03               	skipc
  3960  09D9  0008               	return
  3961                           
  3962                           ;nozzle.c: 546: {
  3963                           ;nozzle.c: 554: {
  3964                           ;nozzle.c: 555: motor_master |= tracking->total_mask;
  3965  09DA  0828               	movf	motor_home5@tracking,w
  3966  09DB  3E05               	addlw	5
  3967  09DC  0084               	movwf	4
  3968  09DD  0800               	movf	0,w
  3969  09DE  00A4               	movwf	??_motor_home5
  3970  09DF  0824               	movf	??_motor_home5,w
  3971  09E0  04DB               	iorwf	_motor_master,f
  3972                           
  3973                           ;nozzle.c: 556: }
  3974                           ;nozzle.c: 558: tracking->timer = (100 / 2);
  3975  09E1  3032               	movlw	50
  3976  09E2  00A4               	movwf	??_motor_home5
  3977  09E3  0828               	movf	motor_home5@tracking,w
  3978  09E4  3E06               	addlw	6
  3979  09E5  0084               	movwf	4
  3980  09E6  0824               	movf	??_motor_home5,w
  3981  09E7  0080               	movwf	0
  3982                           
  3983                           ;nozzle.c: 559: motor_state = motor_home6;
  3984  09E8  3013               	movlw	(low (fp__motor_home6-fpbase))& (0+255)
  3985  09E9  00A4               	movwf	??_motor_home5
  3986  09EA  0824               	movf	??_motor_home5,w
  3987  09EB  00E3               	movwf	_motor_state
  3988  09EC  0008               	return
  3989  09ED                     __end_of_motor_home5:	
  3990                           
  3991                           	psect	text12
  3992  08CB                     __ptext12:	
  3993 ;; *************** function _motor_home6 *****************
  3994 ;; Defined at:
  3995 ;;		line 507 in file "nozzle.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  current_enco    1    6[BANK0 ] unsigned char 
  4000 ;;  tracking        1    7[BANK0 ] PTR struct .
  4001 ;;		 -> tracking_state(36), 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4011 ;;      Params:         0       0       0       0       0
  4012 ;;      Locals:         0       2       0       0       0
  4013 ;;      Temps:          0       2       0       0       0
  4014 ;;      Totals:         0       4       0       0       0
  4015 ;;Total ram usage:        4 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    2
  4018 ;; This function calls:
  4019 ;;		___bmul
  4020 ;; This function is called by:
  4021 ;;		_motor_home5
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           
  4027                           ;psect for function _motor_home6
  4028  08CB                     _motor_home6:	
  4029                           
  4030                           ;nozzle.c: 509: tracking_state_t *tracking = &tracking_state[current_motor];
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _motor_home6: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4034  08CB  300C               	movlw	12
  4035  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  4036  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  4037  08CE  00A4               	movwf	??_motor_home6
  4038  08CF  0824               	movf	??_motor_home6,w
  4039  08D0  00A0               	movwf	___bmul@multiplicand
  4040  08D1  085C               	movf	_current_motor,w
  4041  08D2  160A  118A  276C  120A  158A  	fcall	___bmul
  4042  08D7  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  4043  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  4044  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  4045  08DA  00A5               	movwf	??_motor_home6+1
  4046  08DB  0825               	movf	??_motor_home6+1,w
  4047  08DC  00A7               	movwf	motor_home6@tracking
  4048                           
  4049                           ;nozzle.c: 510: if(tracking->timer == 0)
  4050  08DD  0827               	movf	motor_home6@tracking,w
  4051  08DE  3E06               	addlw	6
  4052  08DF  0084               	movwf	4
  4053  08E0  1383               	bcf	3,7	;select IRP bank0
  4054  08E1  0800               	movf	0,w
  4055  08E2  1D03               	btfss	3,2
  4056  08E3  0008               	return
  4057                           
  4058                           ;nozzle.c: 511: {
  4059                           ;nozzle.c: 512: uint8_t current_encoder = tracking->encoder;
  4060  08E4  0A27               	incf	motor_home6@tracking,w
  4061  08E5  0084               	movwf	4
  4062  08E6  0800               	movf	0,w
  4063  08E7  00A4               	movwf	??_motor_home6
  4064  08E8  0824               	movf	??_motor_home6,w
  4065  08E9  00A6               	movwf	motor_home6@current_encoder
  4066                           
  4067                           ;nozzle.c: 520: switch(current_motor)
  4068  08EA  28FE               	goto	l2739
  4069  08EB                     l228:	
  4070                           ;nozzle.c: 521: {
  4071                           ;nozzle.c: 522: case 2:
  4072                           
  4073                           
  4074                           ;nozzle.c: 523: current_motor = 1;
  4075  08EB  01DC               	clrf	_current_motor
  4076  08EC  0ADC               	incf	_current_motor,f
  4077                           
  4078                           ;nozzle.c: 524: motor_state = motor_home1;
  4079  08ED  3007               	movlw	(low (fp__motor_home1-fpbase))& (0+255)
  4080  08EE  00A4               	movwf	??_motor_home6
  4081  08EF  0824               	movf	??_motor_home6,w
  4082  08F0  00E3               	movwf	_motor_state
  4083                           
  4084                           ;nozzle.c: 525: break;
  4085  08F1  0008               	return
  4086  08F2                     l2729:	
  4087                           ;nozzle.c: 526: case 1:
  4088                           
  4089                           
  4090                           ;nozzle.c: 527: current_motor = 0;
  4091  08F2  01DC               	clrf	_current_motor
  4092                           
  4093                           ;nozzle.c: 528: motor_state = motor_home1;
  4094  08F3  3007               	movlw	(low (fp__motor_home1-fpbase))& (0+255)
  4095  08F4  00A4               	movwf	??_motor_home6
  4096  08F5  0824               	movf	??_motor_home6,w
  4097  08F6  00E3               	movwf	_motor_state
  4098                           
  4099                           ;nozzle.c: 529: break;
  4100  08F7  0008               	return
  4101  08F8                     l2733:	
  4102                           ;nozzle.c: 531: default:
  4103                           
  4104                           ;nozzle.c: 530: case 0:
  4105                           
  4106                           
  4107                           ;nozzle.c: 532: current_motor = 0;
  4108  08F8  01DC               	clrf	_current_motor
  4109                           
  4110                           ;nozzle.c: 533: motor_state = motor_tracking;
  4111  08F9  300D               	movlw	(low (fp__motor_tracking-fpbase))& (0+255)
  4112  08FA  00A4               	movwf	??_motor_home6
  4113  08FB  0824               	movf	??_motor_home6,w
  4114  08FC  00E3               	movwf	_motor_state
  4115                           
  4116                           ;nozzle.c: 535: }
  4117                           
  4118                           ;nozzle.c: 534: break;
  4119  08FD  0008               	return
  4120  08FE                     l2739:	
  4121  08FE  085C               	movf	_current_motor,w
  4122                           
  4123                           ; Switch size 1, requested type "space"
  4124                           ; Number of cases is 3, Range of values is 0 to 2
  4125                           ; switch strategies available:
  4126                           ; Name         Instructions Cycles
  4127                           ; simple_byte           10     6 (average)
  4128                           ; direct_byte           17     8 (fixed)
  4129                           ; jumptable            260     6 (fixed)
  4130                           ;	Chosen strategy is simple_byte
  4131  08FF  3A00               	xorlw	0	; case 0
  4132  0900  1903               	skipnz
  4133  0901  28F8               	goto	l2733
  4134  0902  3A01               	xorlw	1	; case 1
  4135  0903  1903               	skipnz
  4136  0904  28F2               	goto	l2729
  4137  0905  3A03               	xorlw	3	; case 2
  4138  0906  1903               	skipnz
  4139  0907  28EB               	goto	l228
  4140  0908  28F8               	goto	l2733
  4141  0909  0008               	return
  4142  090A                     __end_of_motor_home6:	
  4143                           
  4144                           	psect	text13
  4145  0B27                     __ptext13:	
  4146 ;; *************** function _motor_home1 *****************
  4147 ;; Defined at:
  4148 ;;		line 606 in file "nozzle.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  sensor_value    1   10[BANK0 ] unsigned char 
  4153 ;;  tracking        1    9[BANK0 ] PTR struct .
  4154 ;;		 -> tracking_state(36), 
  4155 ;;  current_boun    1    6[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       0       0       0       0
  4166 ;;      Locals:         0       5       0       0       0
  4167 ;;      Temps:          0       2       0       0       0
  4168 ;;      Totals:         0       7       0       0       0
  4169 ;;Total ram usage:        7 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    2
  4172 ;; This function calls:
  4173 ;;		___bmul
  4174 ;; This function is called by:
  4175 ;;		_motor_home6
  4176 ;;		_arm_motors
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function _motor_home1
  4183  0B27                     _motor_home1:	
  4184                           
  4185                           ;nozzle.c: 608: tracking_state_t *tracking = &tracking_state[current_motor];
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in _motor_home1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4189  0B27  300C               	movlw	12
  4190  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0B2A  00A4               	movwf	??_motor_home1
  4193  0B2B  0824               	movf	??_motor_home1,w
  4194  0B2C  00A0               	movwf	___bmul@multiplicand
  4195  0B2D  085C               	movf	_current_motor,w
  4196  0B2E  160A  118A  276C  120A  158A  	fcall	___bmul
  4197  0B33  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  4198  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0B36  00A5               	movwf	??_motor_home1+1
  4201  0B37  0825               	movf	??_motor_home1+1,w
  4202  0B38  00A9               	movwf	motor_home1@tracking
  4203                           
  4204                           ;nozzle.c: 609: uint8_t current_boundary = tracking->boundary;
  4205  0B39  0829               	movf	motor_home1@tracking,w
  4206  0B3A  0084               	movwf	4
  4207  0B3B  1383               	bcf	3,7	;select IRP bank0
  4208  0B3C  0800               	movf	0,w
  4209  0B3D  00A4               	movwf	??_motor_home1
  4210  0B3E  0824               	movf	??_motor_home1,w
  4211  0B3F  00A6               	movwf	motor_home1@current_boundary
  4212                           
  4213                           ;nozzle.c: 610: uint8_t sensor_value = sensors[current_boundary].analog;
  4214  0B40  0826               	movf	motor_home1@current_boundary,w
  4215  0B41  00A4               	movwf	??_motor_home1
  4216  0B42  3001               	movlw	1
  4217  0B43                     u3315:	
  4218  0B43  1003               	clrc
  4219  0B44  0DA4               	rlf	??_motor_home1,f
  4220  0B45  3EFF               	addlw	-1
  4221  0B46  1D03               	skipz
  4222  0B47  2B43               	goto	u3315
  4223  0B48  1003               	clrc
  4224  0B49  0D24               	rlf	??_motor_home1,w
  4225  0B4A  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  4226  0B4B  0084               	movwf	4
  4227  0B4C  0800               	movf	0,w
  4228  0B4D  00A5               	movwf	??_motor_home1+1
  4229  0B4E  0825               	movf	??_motor_home1+1,w
  4230  0B4F  00AA               	movwf	motor_home1@sensor_value
  4231                           
  4232                           ;nozzle.c: 612: if(((sensor_value - 0x80) < 0 ? (-(sensor_value - 0x80)) : (sensor_value
      +                           - 0x80)) >= 0x20)
  4233  0B50  082A               	movf	motor_home1@sensor_value,w
  4234  0B51  3E80               	addlw	128
  4235  0B52  00A4               	movwf	??_motor_home1
  4236  0B53  30FF               	movlw	255
  4237  0B54  1803               	skipnc
  4238  0B55  3000               	movlw	0
  4239  0B56  00A5               	movwf	??_motor_home1+1
  4240  0B57  1BA5               	btfsc	??_motor_home1+1,7
  4241  0B58  2B60               	goto	l2811
  4242  0B59  082A               	movf	motor_home1@sensor_value,w
  4243  0B5A  3E80               	addlw	128
  4244  0B5B  00A7               	movwf	_motor_home1$474
  4245  0B5C  30FF               	movlw	255
  4246  0B5D  1803               	skipnc
  4247  0B5E  3000               	movlw	0
  4248  0B5F  2B6F               	goto	L4
  4249  0B60                     l2811:	
  4250  0B60  082A               	movf	motor_home1@sensor_value,w
  4251  0B61  3E80               	addlw	128
  4252  0B62  00A4               	movwf	??_motor_home1
  4253  0B63  30FF               	movlw	255
  4254  0B64  1803               	skipnc
  4255  0B65  3000               	movlw	0
  4256  0B66  00A5               	movwf	??_motor_home1+1
  4257  0B67  09A4               	comf	??_motor_home1,f
  4258  0B68  09A5               	comf	??_motor_home1+1,f
  4259  0B69  0AA4               	incf	??_motor_home1,f
  4260  0B6A  1903               	skipnz
  4261  0B6B  0AA5               	incf	??_motor_home1+1,f
  4262  0B6C  0824               	movf	??_motor_home1,w
  4263  0B6D  00A7               	movwf	_motor_home1$474
  4264  0B6E  0825               	movf	??_motor_home1+1,w
  4265  0B6F                     L4:	
  4266  0B6F  00A8               	movwf	_motor_home1$474+1
  4267  0B70  0828               	movf	_motor_home1$474+1,w
  4268  0B71  3A80               	xorlw	128
  4269  0B72  00FF               	movwf	127
  4270  0B73  3080               	movlw	128
  4271  0B74  027F               	subwf	127,w
  4272  0B75  1D03               	skipz
  4273  0B76  2B79               	goto	u3335
  4274  0B77  3020               	movlw	32
  4275  0B78  0227               	subwf	_motor_home1$474,w
  4276  0B79                     u3335:	
  4277  0B79  1C03               	skipc
  4278  0B7A  2B82               	goto	l2817
  4279                           
  4280                           ;nozzle.c: 613: {
  4281                           ;nozzle.c: 614: motor_state = motor_idle;
  4282  0B7B  300A               	movlw	(low (fp__motor_idle-fpbase))& (0+255)
  4283  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0B7E  00A4               	movwf	??_motor_home1
  4286  0B7F  0824               	movf	??_motor_home1,w
  4287  0B80  00E3               	movwf	_motor_state
  4288                           
  4289                           ;nozzle.c: 615: }
  4290  0B81  0008               	return
  4291  0B82                     l2817:	
  4292                           
  4293                           ;nozzle.c: 616: else
  4294                           ;nozzle.c: 618: {
  4295                           ;nozzle.c: 619: motor_master &= tracking->total_unmask;
  4296  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0B84  0829               	movf	motor_home1@tracking,w
  4299  0B85  3E04               	addlw	4
  4300  0B86  0084               	movwf	4
  4301  0B87  1383               	bcf	3,7	;select IRP bank0
  4302  0B88  0800               	movf	0,w
  4303  0B89  00A4               	movwf	??_motor_home1
  4304  0B8A  0824               	movf	??_motor_home1,w
  4305  0B8B  05DB               	andwf	_motor_master,f
  4306                           
  4307                           ;nozzle.c: 620: motor_master |= tracking->dec_mask;
  4308  0B8C  0829               	movf	motor_home1@tracking,w
  4309  0B8D  3E02               	addlw	2
  4310  0B8E  0084               	movwf	4
  4311  0B8F  0800               	movf	0,w
  4312  0B90  00A4               	movwf	??_motor_home1
  4313  0B91  0824               	movf	??_motor_home1,w
  4314  0B92  04DB               	iorwf	_motor_master,f
  4315                           
  4316                           ;nozzle.c: 621: motor_state = motor_home2;
  4317  0B93  3010               	movlw	(low (fp__motor_home2-fpbase))& (0+255)
  4318  0B94  00A4               	movwf	??_motor_home1
  4319  0B95  0824               	movf	??_motor_home1,w
  4320  0B96  00E3               	movwf	_motor_state
  4321  0B97  0008               	return
  4322  0B98                     __end_of_motor_home1:	
  4323                           
  4324                           	psect	text14
  4325  07FF                     __ptext14:	
  4326 ;; *************** function _motor_idle *****************
  4327 ;; Defined at:
  4328 ;;		line 625 in file "nozzle.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		None
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         0       0       0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_motor_home1
  4353 ;;		_disarm_motors
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _motor_idle
  4360  07FF                     _motor_idle:	
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _motor_idle: []
  4364  07FF  0008               	return
  4365  0800                     __end_of_motor_idle:	
  4366                           
  4367                           	psect	text15
  4368  0E20                     __ptext15:	
  4369 ;; *************** function _motor_tracking *****************
  4370 ;; Defined at:
  4371 ;;		line 426 in file "nozzle.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  tracking        1    7[BANK0 ] PTR struct .
  4376 ;;		 -> tracking_state(36), 
  4377 ;;  encoder         1    6[BANK0 ] PTR struct .
  4378 ;;		 -> sensors(24), 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       2       0       0       0
  4390 ;;      Temps:          0       2       0       0       0
  4391 ;;      Totals:         0       4       0       0       0
  4392 ;;Total ram usage:        4 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    2
  4395 ;; This function calls:
  4396 ;;		___bmul
  4397 ;; This function is called by:
  4398 ;;		_motor_home6
  4399 ;;		_main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _motor_tracking
  4405  0E20                     _motor_tracking:	
  4406                           
  4407                           ;nozzle.c: 429: tracking_state_t *tracking = &tracking_state[current_motor];
  4408                           
  4409                           ;incstack = 0
  4410                           ; Regs used in _motor_tracking: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4411  0E20  300C               	movlw	12
  4412  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0E23  00A4               	movwf	??_motor_tracking
  4415  0E24  0824               	movf	??_motor_tracking,w
  4416  0E25  00A0               	movwf	___bmul@multiplicand
  4417  0E26  085C               	movf	_current_motor,w
  4418  0E27  160A  118A  276C  120A  158A  	fcall	___bmul
  4419  0E2C  3EA0               	addlw	(low (_tracking_state| 0))& (0+255)
  4420  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0E2F  00A5               	movwf	??_motor_tracking+1
  4423  0E30  0825               	movf	??_motor_tracking+1,w
  4424  0E31  00A7               	movwf	motor_tracking@tracking
  4425                           
  4426                           ;nozzle.c: 430: sensor_state_t *encoder = &sensors[tracking->encoder];
  4427  0E32  0A27               	incf	motor_tracking@tracking,w
  4428  0E33  0084               	movwf	4
  4429  0E34  1383               	bcf	3,7	;select IRP bank0
  4430  0E35  0800               	movf	0,w
  4431  0E36  00A4               	movwf	??_motor_tracking
  4432  0E37  3001               	movlw	1
  4433  0E38                     u2025:	
  4434  0E38  1003               	clrc
  4435  0E39  0DA4               	rlf	??_motor_tracking,f
  4436  0E3A  3EFF               	addlw	-1
  4437  0E3B  1D03               	skipz
  4438  0E3C  2E38               	goto	u2025
  4439  0E3D  1003               	clrc
  4440  0E3E  0D24               	rlf	??_motor_tracking,w
  4441  0E3F  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  4442  0E40  00A5               	movwf	??_motor_tracking+1
  4443  0E41  0825               	movf	??_motor_tracking+1,w
  4444  0E42  00A6               	movwf	motor_tracking@encoder
  4445                           
  4446                           ;nozzle.c: 432: current_motor++;
  4447  0E43  3001               	movlw	1
  4448  0E44  00A4               	movwf	??_motor_tracking
  4449  0E45  0824               	movf	??_motor_tracking,w
  4450  0E46  07DC               	addwf	_current_motor,f
  4451                           
  4452                           ;nozzle.c: 433: if(current_motor >= 3)
  4453  0E47  3003               	movlw	3
  4454  0E48  025C               	subwf	_current_motor,w
  4455  0E49  1803               	btfsc	3,0
  4456                           
  4457                           ;nozzle.c: 434: {
  4458                           ;nozzle.c: 435: current_motor = 0;
  4459  0E4A  01DC               	clrf	_current_motor
  4460                           
  4461                           ;nozzle.c: 436: }
  4462                           ;nozzle.c: 439: if((motor_master & tracking->total_mask) == tracking->inc_mask)
  4463  0E4B  0827               	movf	motor_tracking@tracking,w
  4464  0E4C  3E03               	addlw	3
  4465  0E4D  0084               	movwf	4
  4466  0E4E  0800               	movf	0,w
  4467  0E4F  00A4               	movwf	??_motor_tracking
  4468  0E50  0827               	movf	motor_tracking@tracking,w
  4469  0E51  3E05               	addlw	5
  4470  0E52  0084               	movwf	4
  4471  0E53  0800               	movf	0,w
  4472  0E54  055B               	andwf	_motor_master,w
  4473  0E55  0624               	xorwf	??_motor_tracking,w
  4474  0E56  1D03               	skipz
  4475  0E57  2E75               	goto	l1995
  4476                           
  4477                           ;nozzle.c: 440: {
  4478                           ;nozzle.c: 441: if(encoder->position >= tracking->target_position)
  4479  0E58  0826               	movf	motor_tracking@encoder,w
  4480  0E59  3E03               	addlw	3
  4481  0E5A  0084               	movwf	4
  4482  0E5B  0800               	movf	0,w
  4483  0E5C  3A80               	xorlw	128
  4484  0E5D  00A4               	movwf	??_motor_tracking
  4485  0E5E  0827               	movf	motor_tracking@tracking,w
  4486  0E5F  3E07               	addlw	7
  4487  0E60  0084               	movwf	4
  4488  0E61  0800               	movf	0,w
  4489  0E62  3A80               	xorlw	128
  4490  0E63  02A4               	subwf	??_motor_tracking,f
  4491  0E64  1C03               	skipc
  4492  0E65  0008               	return
  4493                           
  4494                           ;nozzle.c: 442: {
  4495                           ;nozzle.c: 450: {
  4496                           ;nozzle.c: 451: motor_master |= tracking->total_mask;
  4497  0E66  0827               	movf	motor_tracking@tracking,w
  4498  0E67  3E05               	addlw	5
  4499  0E68  0084               	movwf	4
  4500  0E69  0800               	movf	0,w
  4501  0E6A  00A4               	movwf	??_motor_tracking
  4502  0E6B  0824               	movf	??_motor_tracking,w
  4503  0E6C  04DB               	iorwf	_motor_master,f
  4504                           
  4505                           ;nozzle.c: 452: }
  4506                           ;nozzle.c: 454: tracking->timer = (100 / 2);
  4507  0E6D  3032               	movlw	50
  4508  0E6E  00A4               	movwf	??_motor_tracking
  4509  0E6F  0827               	movf	motor_tracking@tracking,w
  4510  0E70  3E06               	addlw	6
  4511  0E71  0084               	movwf	4
  4512  0E72  0824               	movf	??_motor_tracking,w
  4513  0E73  0080               	movwf	0
  4514                           
  4515                           ;nozzle.c: 455: }
  4516                           ;nozzle.c: 456: }
  4517  0E74  0008               	return
  4518  0E75                     l1995:	
  4519                           
  4520                           ;nozzle.c: 457: else
  4521                           ;nozzle.c: 458: if((motor_master & tracking->total_mask) == tracking->dec_mask)
  4522  0E75  0827               	movf	motor_tracking@tracking,w
  4523  0E76  3E02               	addlw	2
  4524  0E77  0084               	movwf	4
  4525  0E78  0800               	movf	0,w
  4526  0E79  00A4               	movwf	??_motor_tracking
  4527  0E7A  0827               	movf	motor_tracking@tracking,w
  4528  0E7B  3E05               	addlw	5
  4529  0E7C  0084               	movwf	4
  4530  0E7D  0800               	movf	0,w
  4531  0E7E  055B               	andwf	_motor_master,w
  4532  0E7F  0624               	xorwf	??_motor_tracking,w
  4533  0E80  1D03               	skipz
  4534  0E81  2E9F               	goto	l2001
  4535                           
  4536                           ;nozzle.c: 459: {
  4537                           ;nozzle.c: 460: if(encoder->position <= tracking->target_position)
  4538  0E82  0827               	movf	motor_tracking@tracking,w
  4539  0E83  3E07               	addlw	7
  4540  0E84  0084               	movwf	4
  4541  0E85  0800               	movf	0,w
  4542  0E86  3A80               	xorlw	128
  4543  0E87  00A4               	movwf	??_motor_tracking
  4544  0E88  0826               	movf	motor_tracking@encoder,w
  4545  0E89  3E03               	addlw	3
  4546  0E8A  0084               	movwf	4
  4547  0E8B  0800               	movf	0,w
  4548  0E8C  3A80               	xorlw	128
  4549  0E8D  02A4               	subwf	??_motor_tracking,f
  4550  0E8E  1C03               	skipc
  4551  0E8F  0008               	return
  4552                           
  4553                           ;nozzle.c: 461: {
  4554                           ;nozzle.c: 469: {
  4555                           ;nozzle.c: 470: motor_master |= tracking->total_mask;
  4556  0E90  0827               	movf	motor_tracking@tracking,w
  4557  0E91  3E05               	addlw	5
  4558  0E92  0084               	movwf	4
  4559  0E93  0800               	movf	0,w
  4560  0E94  00A4               	movwf	??_motor_tracking
  4561  0E95  0824               	movf	??_motor_tracking,w
  4562  0E96  04DB               	iorwf	_motor_master,f
  4563                           
  4564                           ;nozzle.c: 471: }
  4565                           ;nozzle.c: 473: tracking->timer = (100 / 2);
  4566  0E97  3032               	movlw	50
  4567  0E98  00A4               	movwf	??_motor_tracking
  4568  0E99  0827               	movf	motor_tracking@tracking,w
  4569  0E9A  3E06               	addlw	6
  4570  0E9B  0084               	movwf	4
  4571  0E9C  0824               	movf	??_motor_tracking,w
  4572  0E9D  0080               	movwf	0
  4573                           
  4574                           ;nozzle.c: 474: }
  4575                           ;nozzle.c: 475: }
  4576  0E9E  0008               	return
  4577  0E9F                     l2001:	
  4578                           
  4579                           ;nozzle.c: 476: else
  4580                           ;nozzle.c: 478: if( tracking->changed > 0)
  4581  0E9F  0827               	movf	motor_tracking@tracking,w
  4582  0EA0  3E0A               	addlw	10
  4583  0EA1  0084               	movwf	4
  4584  0EA2  0800               	movf	0,w
  4585  0EA3  1903               	btfsc	3,2
  4586  0EA4  0008               	return
  4587                           
  4588                           ;nozzle.c: 479: {
  4589                           ;nozzle.c: 483: if(encoder->position > tracking->target_position)
  4590  0EA5  0827               	movf	motor_tracking@tracking,w
  4591  0EA6  3E07               	addlw	7
  4592  0EA7  0084               	movwf	4
  4593  0EA8  0800               	movf	0,w
  4594  0EA9  3A80               	xorlw	128
  4595  0EAA  00A4               	movwf	??_motor_tracking
  4596  0EAB  0826               	movf	motor_tracking@encoder,w
  4597  0EAC  3E03               	addlw	3
  4598  0EAD  0084               	movwf	4
  4599  0EAE  0800               	movf	0,w
  4600  0EAF  3A80               	xorlw	128
  4601  0EB0  02A4               	subwf	??_motor_tracking,f
  4602  0EB1  1803               	skipnc
  4603  0EB2  2ECC               	goto	l2007
  4604                           
  4605                           ;nozzle.c: 484: {
  4606                           ;nozzle.c: 485: encoder->step = -1;
  4607  0EB3  0826               	movf	motor_tracking@encoder,w
  4608  0EB4  3E02               	addlw	2
  4609  0EB5  0084               	movwf	4
  4610  0EB6  0180               	clrf	0
  4611  0EB7  0380               	decf	0,f
  4612                           
  4613                           ;nozzle.c: 486: motor_master &= tracking->total_unmask;
  4614  0EB8  0827               	movf	motor_tracking@tracking,w
  4615  0EB9  3E04               	addlw	4
  4616  0EBA  0084               	movwf	4
  4617  0EBB  0800               	movf	0,w
  4618  0EBC  00A4               	movwf	??_motor_tracking
  4619  0EBD  0824               	movf	??_motor_tracking,w
  4620  0EBE  05DB               	andwf	_motor_master,f
  4621                           
  4622                           ;nozzle.c: 487: motor_master |= tracking->dec_mask;
  4623  0EBF  0827               	movf	motor_tracking@tracking,w
  4624  0EC0  3E02               	addlw	2
  4625  0EC1  0084               	movwf	4
  4626  0EC2  0800               	movf	0,w
  4627  0EC3  00A4               	movwf	??_motor_tracking
  4628  0EC4  0824               	movf	??_motor_tracking,w
  4629  0EC5  04DB               	iorwf	_motor_master,f
  4630                           
  4631                           ;nozzle.c: 488: tracking->changed--;
  4632  0EC6  0827               	movf	motor_tracking@tracking,w
  4633  0EC7  3E0A               	addlw	10
  4634  0EC8  0084               	movwf	4
  4635  0EC9  3001               	movlw	1
  4636  0ECA  0280               	subwf	0,f
  4637                           
  4638                           ;nozzle.c: 489: }
  4639  0ECB  0008               	return
  4640  0ECC                     l2007:	
  4641                           
  4642                           ;nozzle.c: 490: else
  4643                           ;nozzle.c: 491: if(encoder->position < tracking->target_position)
  4644  0ECC  0826               	movf	motor_tracking@encoder,w
  4645  0ECD  3E03               	addlw	3
  4646  0ECE  0084               	movwf	4
  4647  0ECF  0800               	movf	0,w
  4648  0ED0  3A80               	xorlw	128
  4649  0ED1  00A4               	movwf	??_motor_tracking
  4650  0ED2  0827               	movf	motor_tracking@tracking,w
  4651  0ED3  3E07               	addlw	7
  4652  0ED4  0084               	movwf	4
  4653  0ED5  0800               	movf	0,w
  4654  0ED6  3A80               	xorlw	128
  4655  0ED7  02A4               	subwf	??_motor_tracking,f
  4656  0ED8  1803               	skipnc
  4657  0ED9  2EF3               	goto	l2011
  4658                           
  4659                           ;nozzle.c: 492: {
  4660                           ;nozzle.c: 493: encoder->step = 1;
  4661  0EDA  0826               	movf	motor_tracking@encoder,w
  4662  0EDB  3E02               	addlw	2
  4663  0EDC  0084               	movwf	4
  4664  0EDD  0180               	clrf	0
  4665  0EDE  0A80               	incf	0,f
  4666                           
  4667                           ;nozzle.c: 494: motor_master &= tracking->total_unmask;
  4668  0EDF  0827               	movf	motor_tracking@tracking,w
  4669  0EE0  3E04               	addlw	4
  4670  0EE1  0084               	movwf	4
  4671  0EE2  0800               	movf	0,w
  4672  0EE3  00A4               	movwf	??_motor_tracking
  4673  0EE4  0824               	movf	??_motor_tracking,w
  4674  0EE5  05DB               	andwf	_motor_master,f
  4675                           
  4676                           ;nozzle.c: 495: motor_master |= tracking->inc_mask;
  4677  0EE6  0827               	movf	motor_tracking@tracking,w
  4678  0EE7  3E03               	addlw	3
  4679  0EE8  0084               	movwf	4
  4680  0EE9  0800               	movf	0,w
  4681  0EEA  00A4               	movwf	??_motor_tracking
  4682  0EEB  0824               	movf	??_motor_tracking,w
  4683  0EEC  04DB               	iorwf	_motor_master,f
  4684                           
  4685                           ;nozzle.c: 496: tracking->changed--;
  4686  0EED  0827               	movf	motor_tracking@tracking,w
  4687  0EEE  3E0A               	addlw	10
  4688  0EEF  0084               	movwf	4
  4689  0EF0  3001               	movlw	1
  4690  0EF1  0280               	subwf	0,f
  4691                           
  4692                           ;nozzle.c: 497: }
  4693  0EF2  0008               	return
  4694  0EF3                     l2011:	
  4695                           
  4696                           ;nozzle.c: 498: else
  4697                           ;nozzle.c: 499: {
  4698                           ;nozzle.c: 501: tracking->changed--;
  4699  0EF3  0827               	movf	motor_tracking@tracking,w
  4700  0EF4  3E0A               	addlw	10
  4701  0EF5  0084               	movwf	4
  4702  0EF6  3001               	movlw	1
  4703  0EF7  0280               	subwf	0,f
  4704  0EF8  0008               	return
  4705  0EF9                     __end_of_motor_tracking:	
  4706                           
  4707                           	psect	text16
  4708  17B6                     __ptext16:	
  4709 ;; *************** function _memset *****************
  4710 ;; Defined at:
  4711 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  p1              1    wreg     PTR void 
  4714 ;;		 -> sensors(24), 
  4715 ;;  c               2    0[BANK0 ] int 
  4716 ;;  n               2    2[BANK0 ] unsigned int 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  p1              1    5[BANK0 ] PTR void 
  4719 ;;		 -> sensors(24), 
  4720 ;;  p               1    6[BANK0 ] PTR unsigned char 
  4721 ;;		 -> sensors(24), 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      PTR void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4731 ;;      Params:         0       4       0       0       0
  4732 ;;      Locals:         0       2       0       0       0
  4733 ;;      Temps:          0       1       0       0       0
  4734 ;;      Totals:         0       7       0       0       0
  4735 ;;Total ram usage:        7 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    1
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           
  4746                           ;psect for function _memset
  4747  17B6                     _memset:	
  4748                           
  4749                           ;incstack = 0
  4750                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  4751                           ;memset@p1 stored from wreg
  4752  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  4753  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  4754  17B8  00A5               	movwf	memset@p1
  4755  17B9  0825               	movf	memset@p1,w
  4756  17BA  00A4               	movwf	??_memset
  4757  17BB  0824               	movf	??_memset,w
  4758  17BC  00A6               	movwf	memset@p
  4759  17BD                     l2227:	
  4760  17BD  3001               	movlw	1
  4761  17BE  02A2               	subwf	memset@n,f
  4762  17BF  3000               	movlw	0
  4763  17C0  1C03               	skipc
  4764  17C1  03A3               	decf	memset@n+1,f
  4765  17C2  02A3               	subwf	memset@n+1,f
  4766  17C3  0A22               	incf	memset@n,w
  4767  17C4  1903               	btfsc	3,2
  4768  17C5  0A23               	incf	memset@n+1,w
  4769  17C6  1903               	btfsc	3,2
  4770  17C7  0008               	return
  4771  17C8  0820               	movf	memset@c,w
  4772  17C9  00A4               	movwf	??_memset
  4773  17CA  0826               	movf	memset@p,w
  4774  17CB  0084               	movwf	4
  4775  17CC  0824               	movf	??_memset,w
  4776  17CD  1383               	bcf	3,7	;select IRP bank0
  4777  17CE  0080               	movwf	0
  4778  17CF  3001               	movlw	1
  4779  17D0  00A4               	movwf	??_memset
  4780  17D1  0824               	movf	??_memset,w
  4781  17D2  07A6               	addwf	memset@p,f
  4782  17D3  2FBD               	goto	l2227
  4783  17D4                     __end_of_memset:	
  4784                           ;	Return value of _memset is never used
  4785                           
  4786                           
  4787                           	psect	text17
  4788  0AB7                     __ptext17:	
  4789 ;; *************** function _handle_ir *****************
  4790 ;; Defined at:
  4791 ;;		line 856 in file "nozzle.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  test_time       2   26[BANK0 ] unsigned int 
  4796 ;;  i               1   28[BANK0 ] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       3       0       0       0
  4808 ;;      Temps:          0       2       0       0       0
  4809 ;;      Totals:         0       5       0       0       0
  4810 ;;Total ram usage:        5 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    5
  4813 ;; This function calls:
  4814 ;;		_handle_ir2
  4815 ;;		_handle_ir_code
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _handle_ir
  4823  0AB7                     _handle_ir:	
  4824                           
  4825                           ;nozzle.c: 858: uint8_t i;
  4826                           ;nozzle.c: 860: uint16_t test_time = ((uint16_t)tmr2_high) << 8;
  4827                           
  4828                           ;incstack = 0
  4829                           ; Regs used in _handle_ir: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4830  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0AB9  0853               	movf	_tmr2_high,w
  4833  0ABA  00B8               	movwf	??_handle_ir
  4834  0ABB  01B9               	clrf	??_handle_ir+1
  4835  0ABC  0838               	movf	??_handle_ir,w
  4836  0ABD  00B9               	movwf	??_handle_ir+1
  4837  0ABE  01B8               	clrf	??_handle_ir
  4838  0ABF  0838               	movf	??_handle_ir,w
  4839  0AC0  00BA               	movwf	handle_ir@test_time
  4840  0AC1  0839               	movf	??_handle_ir+1,w
  4841  0AC2  00BB               	movwf	handle_ir@test_time+1
  4842                           
  4843                           ;nozzle.c: 861: if(test_time > 30000 &&
  4844                           ;nozzle.c: 862: !first_edge)
  4845  0AC3  3075               	movlw	117
  4846  0AC4  023B               	subwf	handle_ir@test_time+1,w
  4847  0AC5  3031               	movlw	49
  4848  0AC6  1903               	skipnz
  4849  0AC7  023A               	subwf	handle_ir@test_time,w
  4850  0AC8  1C03               	skipc
  4851  0AC9  2AEE               	goto	l2849
  4852  0ACA  0864               	movf	_first_edge,w
  4853  0ACB  1D03               	btfss	3,2
  4854  0ACC  2AEE               	goto	l2849
  4855                           
  4856                           ;nozzle.c: 863: {
  4857                           ;nozzle.c: 869: INTCONbits.GIE = 0;
  4858  0ACD  138B               	bcf	11,7	;volatile
  4859                           
  4860                           ;nozzle.c: 871: OPTION_REGbits.INTEDG = 0;
  4861  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0AD0  1301               	bcf	1,6	;volatile
  4864                           
  4865                           ;nozzle.c: 872: TMR2 = 0;
  4866  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0AD3  0191               	clrf	17	;volatile
  4869                           
  4870                           ;nozzle.c: 873: PIR1bits.TMR2IF = 0;
  4871  0AD4  108C               	bcf	12,1	;volatile
  4872                           
  4873                           ;nozzle.c: 874: INTCONbits.GIE = 1;
  4874  0AD5  178B               	bsf	11,7	;volatile
  4875                           
  4876                           ;nozzle.c: 876: ir_offset = 0;
  4877  0AD6  01D8               	clrf	_ir_offset
  4878                           
  4879                           ;nozzle.c: 877: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)); i++)
  4880  0AD7  01BC               	clrf	handle_ir@i
  4881  0AD8  3006               	movlw	6
  4882  0AD9  023C               	subwf	handle_ir@i,w
  4883  0ADA  1803               	btfsc	3,0
  4884  0ADB  2AE9               	goto	l327
  4885  0ADC                     l2839:	
  4886                           
  4887                           ;nozzle.c: 878: {
  4888                           ;nozzle.c: 879: ir_code_failed[i] = 0;
  4889  0ADC  083C               	movf	handle_ir@i,w
  4890  0ADD  3E49               	addlw	(low (_ir_code_failed| 0))& (0+255)
  4891  0ADE  0084               	movwf	4
  4892  0ADF  1383               	bcf	3,7	;select IRP bank0
  4893  0AE0  0180               	clrf	0
  4894  0AE1  3001               	movlw	1
  4895  0AE2  00B8               	movwf	??_handle_ir
  4896  0AE3  0838               	movf	??_handle_ir,w
  4897  0AE4  07BC               	addwf	handle_ir@i,f
  4898  0AE5  3006               	movlw	6
  4899  0AE6  023C               	subwf	handle_ir@i,w
  4900  0AE7  1C03               	skipc
  4901  0AE8  2ADC               	goto	l2839
  4902  0AE9                     l327:	
  4903                           
  4904                           ;nozzle.c: 880: }
  4905                           ;nozzle.c: 881: first_edge = 1;
  4906  0AE9  01E4               	clrf	_first_edge
  4907  0AEA  0AE4               	incf	_first_edge,f
  4908                           
  4909                           ;nozzle.c: 882: have_ir = 0;
  4910  0AEB  01D7               	clrf	_have_ir
  4911                           
  4912                           ;nozzle.c: 883: got_ir_int = 0;
  4913  0AEC  01D4               	clrf	_got_ir_int	;volatile
  4914                           
  4915                           ;nozzle.c: 884: PORTDbits.RD7 = 1;
  4916  0AED  1788               	bsf	8,7	;volatile
  4917  0AEE                     l2849:	
  4918                           
  4919                           ;nozzle.c: 885: }
  4920                           ;nozzle.c: 888: if(have_ir &&
  4921                           ;nozzle.c: 889: repeat_delay == 0 &&
  4922                           ;nozzle.c: 890: ir_code != 4 &&
  4923                           ;nozzle.c: 891: (motor_master & (uint8_t)0b00111111) == (uint8_t)0b00111111)
  4924  0AEE  0857               	movf	_have_ir,w
  4925  0AEF  1903               	btfsc	3,2
  4926  0AF0  2B04               	goto	l2859
  4927  0AF1  0855               	movf	_repeat_delay,w
  4928  0AF2  1D03               	btfss	3,2
  4929  0AF3  2B04               	goto	l2859
  4930  0AF4  3004               	movlw	4
  4931  0AF5  0656               	xorwf	_ir_code,w
  4932  0AF6  1903               	btfsc	3,2
  4933  0AF7  2B04               	goto	l2859
  4934  0AF8  303F               	movlw	63
  4935  0AF9  055B               	andwf	_motor_master,w
  4936  0AFA  00B8               	movwf	??_handle_ir
  4937  0AFB  303F               	movlw	63
  4938  0AFC  0638               	xorwf	??_handle_ir,w
  4939  0AFD  1D03               	btfss	3,2
  4940  0AFE  2B04               	goto	l2859
  4941                           
  4942                           ;nozzle.c: 892: {
  4943                           ;nozzle.c: 895: handle_ir_code();
  4944  0AFF  120A  158A  240B  120A  158A  	fcall	_handle_ir_code
  4945  0B04                     l2859:	
  4946                           
  4947                           ;nozzle.c: 896: }
  4948                           ;nozzle.c: 898: if(got_ir_int)
  4949  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0B06  0854               	movf	_got_ir_int,w	;volatile
  4952  0B07  1903               	btfsc	3,2
  4953  0B08  0008               	return
  4954                           
  4955                           ;nozzle.c: 899: {
  4956                           ;nozzle.c: 900: got_ir_int = 0;
  4957  0B09  01D4               	clrf	_got_ir_int	;volatile
  4958                           
  4959                           ;nozzle.c: 902: OPTION_REGbits.INTEDG = !OPTION_REGbits.INTEDG;
  4960  0B0A  1003               	clrc
  4961  0B0B  1683               	bsf	3,5	;RP0=1, select bank1
  4962  0B0C  1303               	bcf	3,6	;RP1=0, select bank1
  4963  0B0D  1F01               	btfss	1,6	;volatile
  4964  0B0E  1403               	setc
  4965  0B0F  1C03               	btfss	3,0
  4966  0B10  2B15               	goto	u3430
  4967  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  4968  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  4969  0B13  1701               	bsf	1,6	;volatile
  4970  0B14  2B18               	goto	l2865
  4971  0B15                     u3430:	
  4972  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  4973  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  4974  0B17  1301               	bcf	1,6	;volatile
  4975  0B18                     l2865:	
  4976                           
  4977                           ;nozzle.c: 903: ir_time = ir_time2;
  4978  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  4979  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  4980  0B1A  0850               	movf	_ir_time2+1,w	;volatile
  4981  0B1B  00D2               	movwf	_ir_time+1
  4982  0B1C  084F               	movf	_ir_time2,w	;volatile
  4983  0B1D  00D1               	movwf	_ir_time
  4984                           
  4985                           ;nozzle.c: 904: if(first_edge)
  4986  0B1E  0864               	movf	_first_edge,w
  4987  0B1F  1903               	btfsc	3,2
  4988  0B20  2B23               	goto	l2869
  4989                           
  4990                           ;nozzle.c: 905: {
  4991                           ;nozzle.c: 906: first_edge = 0;
  4992  0B21  01E4               	clrf	_first_edge
  4993                           
  4994                           ;nozzle.c: 907: }
  4995  0B22  0008               	return
  4996  0B23                     l2869:	
  4997                           
  4998                           ;nozzle.c: 908: else
  4999                           ;nozzle.c: 909: {
  5000                           ;nozzle.c: 910: handle_ir2();
  5001  0B23  120A  158A  26F9   	fcall	_handle_ir2
  5002  0B26  0008               	return
  5003  0B27                     __end_of_handle_ir:	
  5004                           
  5005                           	psect	text18
  5006  0EF9                     __ptext18:	
  5007 ;; *************** function _handle_ir2 *****************
  5008 ;; Defined at:
  5009 ;;		line 770 in file "nozzle.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  data_value      2   19[BANK0 ] int 
  5014 ;;  error           2   15[BANK0 ] int 
  5015 ;;  code            2   21[BANK0 ] PTR const struct .
  5016 ;;		 -> ir_codes(24), 
  5017 ;;  data            2   13[BANK0 ] PTR const int 
  5018 ;;		 -> fastrev_data(142), fastfwd_data(142), right_data(142), left_data(142), 
  5019 ;;		 -> down_data(142), up_data(142), 
  5020 ;;  i               1   23[BANK0 ] unsigned char 
  5021 ;;  got_it          1   18[BANK0 ] unsigned char 
  5022 ;;  got_one         1   17[BANK0 ] unsigned char 
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5032 ;;      Params:         0       0       0       0       0
  5033 ;;      Locals:         0      11       0       0       0
  5034 ;;      Temps:          0       4       0       0       0
  5035 ;;      Totals:         0      15       0       0       0
  5036 ;;Total ram usage:       15 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    4
  5039 ;; This function calls:
  5040 ;;		_handle_ir_code
  5041 ;; This function is called by:
  5042 ;;		_handle_ir
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           
  5047                           ;psect for function _handle_ir2
  5048  0EF9                     _handle_ir2:	
  5049                           
  5050                           ;nozzle.c: 782: uint8_t i;
  5051                           ;nozzle.c: 784: uint8_t got_it = 0;
  5052                           
  5053                           ;incstack = 0
  5054                           ; Regs used in _handle_ir2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5055  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0EFB  01B2               	clrf	handle_ir2@got_it
  5058                           
  5059                           ;nozzle.c: 786: uint8_t got_one = 0;
  5060  0EFC  01B1               	clrf	handle_ir2@got_one
  5061                           
  5062                           ;nozzle.c: 787: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)) && !got_it; i++)
  5063  0EFD  01B7               	clrf	handle_ir2@i
  5064  0EFE  2FD8               	goto	l2675
  5065  0EFF                     l2641:	
  5066                           
  5067                           ;nozzle.c: 789: {
  5068                           ;nozzle.c: 791: if(!ir_code_failed[i])
  5069  0EFF  0837               	movf	handle_ir2@i,w
  5070  0F00  3E49               	addlw	(low (_ir_code_failed| 0))& (0+255)
  5071  0F01  0084               	movwf	4
  5072  0F02  1383               	bcf	3,7	;select IRP bank0
  5073  0F03  0800               	movf	0,w
  5074  0F04  1D03               	btfss	3,2
  5075  0F05  2FD4               	goto	l2673
  5076                           
  5077                           ;nozzle.c: 792: {
  5078                           ;nozzle.c: 793: const ir_code_t *code = &ir_codes[i];
  5079  0F06  0837               	movf	handle_ir2@i,w
  5080  0F07  00A9               	movwf	??_handle_ir2
  5081  0F08  3001               	movlw	1
  5082  0F09                     u3055:	
  5083  0F09  1003               	clrc
  5084  0F0A  0DA9               	rlf	??_handle_ir2,f
  5085  0F0B  3EFF               	addlw	-1
  5086  0F0C  1D03               	skipz
  5087  0F0D  2F09               	goto	u3055
  5088  0F0E  1003               	clrc
  5089  0F0F  0D29               	rlf	??_handle_ir2,w
  5090  0F10  3E90               	addlw	low (_ir_codes| (0+32768))
  5091  0F11  00B5               	movwf	handle_ir2@code
  5092  0F12  3084               	movlw	high (_ir_codes| (0+32768))
  5093  0F13  1803               	skipnc
  5094  0F14  3E01               	addlw	1
  5095  0F15  00B6               	movwf	handle_ir2@code+1
  5096                           
  5097                           ;nozzle.c: 794: const int16_t *data = code->data;
  5098  0F16  0836               	movf	handle_ir2@code+1,w
  5099  0F17  00FF               	movwf	127
  5100  0F18  0835               	movf	handle_ir2@code,w
  5101  0F19  0084               	movwf	4
  5102  0F1A  120A  118A  2100  120A  158A  	fcall	stringtab
  5103  0F1F  00A9               	movwf	??_handle_ir2
  5104  0F20  120A  118A  2100  120A  158A  	fcall	stringtab
  5105  0F25  00AA               	movwf	??_handle_ir2+1
  5106  0F26  0829               	movf	??_handle_ir2,w
  5107  0F27  00AD               	movwf	handle_ir2@data
  5108  0F28  082A               	movf	??_handle_ir2+1,w
  5109  0F29  00AE               	movwf	handle_ir2@data+1
  5110                           
  5111                           ;nozzle.c: 796: if(ir_offset < code->size)
  5112  0F2A  3002               	movlw	2
  5113  0F2B  0735               	addwf	handle_ir2@code,w
  5114  0F2C  0084               	movwf	4
  5115  0F2D  0836               	movf	handle_ir2@code+1,w
  5116  0F2E  1803               	skipnc
  5117  0F2F  0A36               	incf	handle_ir2@code+1,w
  5118  0F30  00FF               	movwf	127
  5119  0F31  120A  118A  2100  120A  158A  	fcall	stringtab
  5120  0F36  0258               	subwf	_ir_offset,w
  5121  0F37  1803               	skipnc
  5122  0F38  2FD4               	goto	l2673
  5123                           
  5124                           ;nozzle.c: 797: {
  5125                           ;nozzle.c: 799: int16_t data_value = data[ir_offset];
  5126  0F39  0858               	movf	_ir_offset,w
  5127  0F3A  00A9               	movwf	??_handle_ir2
  5128  0F3B  0729               	addwf	??_handle_ir2,w
  5129  0F3C  072D               	addwf	handle_ir2@data,w
  5130  0F3D  0084               	movwf	4
  5131  0F3E  082E               	movf	handle_ir2@data+1,w
  5132  0F3F  1803               	skipnc
  5133  0F40  0A2E               	incf	handle_ir2@data+1,w
  5134  0F41  00FF               	movwf	127
  5135  0F42  120A  118A  2100  120A  158A  	fcall	stringtab
  5136  0F47  00B3               	movwf	handle_ir2@data_value
  5137  0F48  120A  118A  2100  120A  158A  	fcall	stringtab
  5138  0F4D  00B4               	movwf	handle_ir2@data_value+1
  5139                           
  5140                           ;nozzle.c: 800: int16_t error = ((data_value - ir_time) < 0 ? (-(data_value - ir_time)) 
      +                          : (data_value - ir_time));
  5141  0F4E  0951               	comf	_ir_time,w
  5142  0F4F  00A9               	movwf	??_handle_ir2
  5143  0F50  0952               	comf	_ir_time+1,w
  5144  0F51  00AA               	movwf	??_handle_ir2+1
  5145  0F52  0AA9               	incf	??_handle_ir2,f
  5146  0F53  1903               	skipnz
  5147  0F54  0AAA               	incf	??_handle_ir2+1,f
  5148  0F55  0833               	movf	handle_ir2@data_value,w
  5149  0F56  0729               	addwf	??_handle_ir2,w
  5150  0F57  00AB               	movwf	??_handle_ir2+2
  5151  0F58  0834               	movf	handle_ir2@data_value+1,w
  5152  0F59  1803               	skipnc
  5153  0F5A  0A34               	incf	handle_ir2@data_value+1,w
  5154  0F5B  072A               	addwf	??_handle_ir2+1,w
  5155  0F5C  00AC               	movwf	??_handle_ir2+3
  5156  0F5D  1BAC               	btfsc	??_handle_ir2+3,7
  5157  0F5E  2F6E               	goto	l2655
  5158  0F5F  0951               	comf	_ir_time,w
  5159  0F60  00A9               	movwf	??_handle_ir2
  5160  0F61  0952               	comf	_ir_time+1,w
  5161  0F62  00AA               	movwf	??_handle_ir2+1
  5162  0F63  0AA9               	incf	??_handle_ir2,f
  5163  0F64  1903               	skipnz
  5164  0F65  0AAA               	incf	??_handle_ir2+1,f
  5165  0F66  0833               	movf	handle_ir2@data_value,w
  5166  0F67  0729               	addwf	??_handle_ir2,w
  5167  0F68  00AF               	movwf	handle_ir2@error
  5168  0F69  0834               	movf	handle_ir2@data_value+1,w
  5169  0F6A  1803               	skipnc
  5170  0F6B  0A34               	incf	handle_ir2@data_value+1,w
  5171  0F6C  072A               	addwf	??_handle_ir2+1,w
  5172  0F6D  2F85               	goto	L5
  5173  0F6E                     l2655:	
  5174  0F6E  0951               	comf	_ir_time,w
  5175  0F6F  00A9               	movwf	??_handle_ir2
  5176  0F70  0952               	comf	_ir_time+1,w
  5177  0F71  00AA               	movwf	??_handle_ir2+1
  5178  0F72  0AA9               	incf	??_handle_ir2,f
  5179  0F73  1903               	skipnz
  5180  0F74  0AAA               	incf	??_handle_ir2+1,f
  5181  0F75  0833               	movf	handle_ir2@data_value,w
  5182  0F76  0729               	addwf	??_handle_ir2,w
  5183  0F77  00AB               	movwf	??_handle_ir2+2
  5184  0F78  0834               	movf	handle_ir2@data_value+1,w
  5185  0F79  1803               	skipnc
  5186  0F7A  0A34               	incf	handle_ir2@data_value+1,w
  5187  0F7B  072A               	addwf	??_handle_ir2+1,w
  5188  0F7C  00AC               	movwf	??_handle_ir2+3
  5189  0F7D  09AB               	comf	??_handle_ir2+2,f
  5190  0F7E  09AC               	comf	??_handle_ir2+3,f
  5191  0F7F  0AAB               	incf	??_handle_ir2+2,f
  5192  0F80  1903               	skipnz
  5193  0F81  0AAC               	incf	??_handle_ir2+3,f
  5194  0F82  082B               	movf	??_handle_ir2+2,w
  5195  0F83  00AF               	movwf	handle_ir2@error
  5196  0F84  082C               	movf	??_handle_ir2+3,w
  5197  0F85                     L5:	
  5198  0F85  00B0               	movwf	handle_ir2@error+1
  5199                           
  5200                           ;nozzle.c: 803: if(error > 16)
  5201  0F86  0830               	movf	handle_ir2@error+1,w
  5202  0F87  3A80               	xorlw	128
  5203  0F88  00FF               	movwf	127
  5204  0F89  3080               	movlw	128
  5205  0F8A  027F               	subwf	127,w
  5206  0F8B  1D03               	skipz
  5207  0F8C  2F8F               	goto	u3085
  5208  0F8D  3011               	movlw	17
  5209  0F8E  022F               	subwf	handle_ir2@error,w
  5210  0F8F                     u3085:	
  5211  0F8F  1C03               	skipc
  5212  0F90  2F9A               	goto	l2661
  5213                           
  5214                           ;nozzle.c: 804: {
  5215                           ;nozzle.c: 806: ir_code_failed[i] = 1;
  5216  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  5218  0F93  0837               	movf	handle_ir2@i,w
  5219  0F94  3E49               	addlw	(low (_ir_code_failed| 0))& (0+255)
  5220  0F95  0084               	movwf	4
  5221  0F96  1383               	bcf	3,7	;select IRP bank0
  5222  0F97  0180               	clrf	0
  5223  0F98  0A80               	incf	0,f
  5224                           
  5225                           ;nozzle.c: 807: }
  5226  0F99  2FD4               	goto	l2673
  5227  0F9A                     l2661:	
  5228                           
  5229                           ;nozzle.c: 808: else
  5230                           ;nozzle.c: 810: {
  5231                           ;nozzle.c: 812: if(ir_offset >= code->size - 1)
  5232  0F9A  3002               	movlw	2
  5233  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0F9D  0735               	addwf	handle_ir2@code,w
  5236  0F9E  0084               	movwf	4
  5237  0F9F  0836               	movf	handle_ir2@code+1,w
  5238  0FA0  1803               	skipnc
  5239  0FA1  0A36               	incf	handle_ir2@code+1,w
  5240  0FA2  00FF               	movwf	127
  5241  0FA3  120A  118A  2100  120A  158A  	fcall	stringtab
  5242  0FA8  3EFF               	addlw	255
  5243  0FA9  00A9               	movwf	??_handle_ir2
  5244  0FAA  30FF               	movlw	255
  5245  0FAB  1803               	skipnc
  5246  0FAC  3000               	movlw	0
  5247  0FAD  00AA               	movwf	??_handle_ir2+1
  5248  0FAE  082A               	movf	??_handle_ir2+1,w
  5249  0FAF  3A80               	xorlw	128
  5250  0FB0  3C80               	sublw	128
  5251  0FB1  1D03               	skipz
  5252  0FB2  2FB5               	goto	u3095
  5253  0FB3  0829               	movf	??_handle_ir2,w
  5254  0FB4  0258               	subwf	_ir_offset,w
  5255  0FB5                     u3095:	
  5256  0FB5  1C03               	skipc
  5257  0FB6  2FD0               	goto	l2671
  5258                           
  5259                           ;nozzle.c: 813: {
  5260                           ;nozzle.c: 814: have_ir = 1;
  5261  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0FB9  01D7               	clrf	_have_ir
  5264  0FBA  0AD7               	incf	_have_ir,f
  5265                           
  5266                           ;nozzle.c: 815: repeat_delay = (100 / 2);
  5267  0FBB  3032               	movlw	50
  5268  0FBC  00A9               	movwf	??_handle_ir2
  5269  0FBD  0829               	movf	??_handle_ir2,w
  5270  0FBE  00D5               	movwf	_repeat_delay
  5271                           
  5272                           ;nozzle.c: 816: ir_code = code->value;
  5273  0FBF  3003               	movlw	3
  5274  0FC0  0735               	addwf	handle_ir2@code,w
  5275  0FC1  0084               	movwf	4
  5276  0FC2  0836               	movf	handle_ir2@code+1,w
  5277  0FC3  1803               	skipnc
  5278  0FC4  0A36               	incf	handle_ir2@code+1,w
  5279  0FC5  00FF               	movwf	127
  5280  0FC6  120A  118A  2100  120A  158A  	fcall	stringtab
  5281  0FCB  00A9               	movwf	??_handle_ir2
  5282  0FCC  0829               	movf	??_handle_ir2,w
  5283  0FCD  00D6               	movwf	_ir_code
  5284                           
  5285                           ;nozzle.c: 818: got_it = 1;
  5286  0FCE  01B2               	clrf	handle_ir2@got_it
  5287  0FCF  0AB2               	incf	handle_ir2@got_it,f
  5288  0FD0                     l2671:	
  5289                           
  5290                           ;nozzle.c: 819: }
  5291                           ;nozzle.c: 821: got_one = 1;
  5292  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  5293  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  5294  0FD2  01B1               	clrf	handle_ir2@got_one
  5295  0FD3  0AB1               	incf	handle_ir2@got_one,f
  5296  0FD4                     l2673:	
  5297  0FD4  3001               	movlw	1
  5298  0FD5  00A9               	movwf	??_handle_ir2
  5299  0FD6  0829               	movf	??_handle_ir2,w
  5300  0FD7  07B7               	addwf	handle_ir2@i,f
  5301  0FD8                     l2675:	
  5302  0FD8  3006               	movlw	6
  5303  0FD9  0237               	subwf	handle_ir2@i,w
  5304  0FDA  1803               	skipnc
  5305  0FDB  2FDF               	goto	l2679
  5306  0FDC  0832               	movf	handle_ir2@got_it,w
  5307  0FDD  1903               	btfsc	3,2
  5308  0FDE  2EFF               	goto	l2641
  5309  0FDF                     l2679:	
  5310                           
  5311                           ;nozzle.c: 822: }
  5312                           ;nozzle.c: 823: }
  5313                           ;nozzle.c: 824: }
  5314                           ;nozzle.c: 825: }
  5315                           ;nozzle.c: 828: if(got_it)
  5316  0FDF  0832               	movf	handle_ir2@got_it,w
  5317  0FE0  1903               	btfsc	3,2
  5318  0FE1  2FE6               	goto	l2683
  5319                           
  5320                           ;nozzle.c: 829: {
  5321                           ;nozzle.c: 837: handle_ir_code();
  5322  0FE2  120A  158A  240B   	fcall	_handle_ir_code
  5323                           
  5324                           ;nozzle.c: 838: }
  5325  0FE5  0008               	return
  5326  0FE6                     l2683:	
  5327                           
  5328                           ;nozzle.c: 839: else
  5329                           ;nozzle.c: 840: if(got_one)
  5330  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  5332  0FE8  0831               	movf	handle_ir2@got_one,w
  5333  0FE9  1903               	btfsc	3,2
  5334  0FEA  2FF0               	goto	l2687
  5335                           
  5336                           ;nozzle.c: 841: {
  5337                           ;nozzle.c: 843: ir_offset++;
  5338  0FEB  3001               	movlw	1
  5339  0FEC  00A9               	movwf	??_handle_ir2
  5340  0FED  0829               	movf	??_handle_ir2,w
  5341  0FEE  07D8               	addwf	_ir_offset,f
  5342                           
  5343                           ;nozzle.c: 844: }
  5344  0FEF  0008               	return
  5345  0FF0                     l2687:	
  5346                           
  5347                           ;nozzle.c: 845: else
  5348                           ;nozzle.c: 846: {
  5349                           ;nozzle.c: 848: ir_offset = 0;
  5350  0FF0  01D8               	clrf	_ir_offset
  5351                           
  5352                           ;nozzle.c: 849: for(i = 0; i < (sizeof(ir_codes) / sizeof(ir_code_t)); i++)
  5353  0FF1  01B7               	clrf	handle_ir2@i
  5354  0FF2                     L6:	
  5355  0FF2  3006               	movlw	6
  5356  0FF3  0237               	subwf	handle_ir2@i,w
  5357  0FF4  1803               	btfsc	3,0
  5358  0FF5  0008               	return
  5359                           
  5360                           ;nozzle.c: 850: {
  5361                           ;nozzle.c: 851: ir_code_failed[i] = 0;
  5362  0FF6  0837               	movf	handle_ir2@i,w
  5363  0FF7  3E49               	addlw	(low (_ir_code_failed| 0))& (0+255)
  5364  0FF8  0084               	movwf	4
  5365  0FF9  1383               	bcf	3,7	;select IRP bank0
  5366  0FFA  0180               	clrf	0
  5367  0FFB  3001               	movlw	1
  5368  0FFC  00A9               	movwf	??_handle_ir2
  5369  0FFD  0829               	movf	??_handle_ir2,w
  5370  0FFE  07B7               	addwf	handle_ir2@i,f
  5371  0FFF  2FF2               	goto	L6
  5372  1000                     __end_of_handle_ir2:	
  5373                           
  5374                           	psect	text19
  5375  0C0B                     __ptext19:	
  5376 ;; *************** function _handle_ir_code *****************
  5377 ;; Defined at:
  5378 ;;		line 716 in file "nozzle.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5392 ;;      Params:         0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0
  5394 ;;      Temps:          0       1       0       0       0
  5395 ;;      Totals:         0       1       0       0       0
  5396 ;;Total ram usage:        1 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    3
  5399 ;; This function calls:
  5400 ;;		_arm_motors
  5401 ;;		_disarm_motors
  5402 ;;		_handle_nozzle_step
  5403 ;; This function is called by:
  5404 ;;		_handle_ir2
  5405 ;;		_handle_ir
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _handle_ir_code
  5411  0C0B                     _handle_ir_code:	
  5412                           
  5413                           ;nozzle.c: 718: switch(ir_code)
  5414                           
  5415                           ;incstack = 0
  5416                           ; Regs used in _handle_ir_code: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5417  0C0B  2C9A               	goto	l2621
  5418  0C0C                     l2579:	
  5419                           ;nozzle.c: 719: {
  5420                           ;nozzle.c: 720: case 0:
  5421                           
  5422                           
  5423                           ;nozzle.c: 721: PORTDbits.RD7 = !PORTDbits.RD7;
  5424  0C0C  1003               	clrc
  5425  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0C0F  1F88               	btfss	8,7	;volatile
  5428  0C10  1403               	setc
  5429  0C11  1C03               	btfss	3,0
  5430  0C12  2C17               	goto	u2850
  5431  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  5432  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  5433  0C15  1788               	bsf	8,7	;volatile
  5434  0C16  2C1A               	goto	l2581
  5435  0C17                     u2850:	
  5436  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0C19  1388               	bcf	8,7	;volatile
  5439  0C1A                     l2581:	
  5440                           
  5441                           ;nozzle.c: 722: if(nozzle_step > 0)
  5442  0C1A  0861               	movf	_nozzle_step,w
  5443  0C1B  1903               	btfsc	3,2
  5444  0C1C  0008               	return
  5445                           
  5446                           ;nozzle.c: 723: {
  5447                           ;nozzle.c: 724: nozzle_step--;
  5448  0C1D  3001               	movlw	1
  5449  0C1E  02E1               	subwf	_nozzle_step,f
  5450                           
  5451                           ;nozzle.c: 725: handle_nozzle_step();
  5452  0C1F  120A  158A  24AE   	fcall	_handle_nozzle_step
  5453                           
  5454                           ;nozzle.c: 726: }
  5455                           ;nozzle.c: 727: break;
  5456  0C22  0008               	return
  5457  0C23                     l2587:	
  5458                           ;nozzle.c: 729: case 1:
  5459                           
  5460                           
  5461                           ;nozzle.c: 730: PORTDbits.RD7 = !PORTDbits.RD7;
  5462  0C23  1003               	clrc
  5463  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  5465  0C26  1F88               	btfss	8,7	;volatile
  5466  0C27  1403               	setc
  5467  0C28  1C03               	btfss	3,0
  5468  0C29  2C2E               	goto	u2880
  5469  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  5470  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  5471  0C2C  1788               	bsf	8,7	;volatile
  5472  0C2D  2C31               	goto	l2589
  5473  0C2E                     u2880:	
  5474  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5475  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5476  0C30  1388               	bcf	8,7	;volatile
  5477  0C31                     l2589:	
  5478                           
  5479                           ;nozzle.c: 731: if(nozzle_step < 24)
  5480  0C31  3018               	movlw	24
  5481  0C32  0261               	subwf	_nozzle_step,w
  5482  0C33  1803               	skipnc
  5483  0C34  0008               	return
  5484                           
  5485                           ;nozzle.c: 732: {
  5486                           ;nozzle.c: 733: nozzle_step++;
  5487  0C35  3001               	movlw	1
  5488  0C36  00A8               	movwf	??_handle_ir_code
  5489  0C37  0828               	movf	??_handle_ir_code,w
  5490  0C38  07E1               	addwf	_nozzle_step,f
  5491                           
  5492                           ;nozzle.c: 734: handle_nozzle_step();
  5493  0C39  120A  158A  24AE   	fcall	_handle_nozzle_step
  5494                           
  5495                           ;nozzle.c: 735: }
  5496                           ;nozzle.c: 736: break;
  5497  0C3C  0008               	return
  5498  0C3D                     l2595:	
  5499                           ;nozzle.c: 738: case 2:
  5500                           
  5501                           
  5502                           ;nozzle.c: 739: PORTDbits.RD7 = !PORTDbits.RD7;
  5503  0C3D  1003               	clrc
  5504  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  5506  0C40  1F88               	btfss	8,7	;volatile
  5507  0C41  1403               	setc
  5508  0C42  1C03               	btfss	3,0
  5509  0C43  2C48               	goto	u2910
  5510  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  5511  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  5512  0C46  1788               	bsf	8,7	;volatile
  5513  0C47  2C4B               	goto	l2597
  5514  0C48                     u2910:	
  5515  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0C4A  1388               	bcf	8,7	;volatile
  5518  0C4B                     l2597:	
  5519                           
  5520                           ;nozzle.c: 740: if(radial_position < tracking_state[0].max)
  5521  0C4B  0859               	movf	_radial_position,w
  5522  0C4C  3A80               	xorlw	128
  5523  0C4D  00A8               	movwf	??_handle_ir_code
  5524  0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  5525  0C4F  1303               	bcf	3,6	;RP1=0, select bank1
  5526  0C50  0829               	movf	(_tracking_state^(0+128)+9),w
  5527  0C51  3A80               	xorlw	128
  5528  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  5529  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  5530  0C54  02A8               	subwf	??_handle_ir_code,f
  5531  0C55  1803               	skipnc
  5532  0C56  0008               	return
  5533                           
  5534                           ;nozzle.c: 741: {
  5535                           ;nozzle.c: 742: radial_position++;
  5536  0C57  3001               	movlw	1
  5537  0C58  00A8               	movwf	??_handle_ir_code
  5538  0C59  0828               	movf	??_handle_ir_code,w
  5539  0C5A  07D9               	addwf	_radial_position,f
  5540                           
  5541                           ;nozzle.c: 743: handle_nozzle_step();
  5542  0C5B  120A  158A  24AE   	fcall	_handle_nozzle_step
  5543                           
  5544                           ;nozzle.c: 744: }
  5545                           ;nozzle.c: 745: break;
  5546  0C5E  0008               	return
  5547  0C5F                     l2603:	
  5548                           ;nozzle.c: 747: case 3:
  5549                           
  5550                           
  5551                           ;nozzle.c: 748: PORTDbits.RD7 = !PORTDbits.RD7;
  5552  0C5F  1003               	clrc
  5553  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  5554  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  5555  0C62  1F88               	btfss	8,7	;volatile
  5556  0C63  1403               	setc
  5557  0C64  1C03               	btfss	3,0
  5558  0C65  2C6A               	goto	u2940
  5559  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5560  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5561  0C68  1788               	bsf	8,7	;volatile
  5562  0C69  2C6D               	goto	l2605
  5563  0C6A                     u2940:	
  5564  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  5565  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  5566  0C6C  1388               	bcf	8,7	;volatile
  5567  0C6D                     l2605:	
  5568                           
  5569                           ;nozzle.c: 749: if(radial_position > tracking_state[0].min)
  5570  0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  5571  0C6E  1303               	bcf	3,6	;RP1=0, select bank1
  5572  0C6F  0828               	movf	(_tracking_state^(0+128)+8),w
  5573  0C70  3A80               	xorlw	128
  5574  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  5575  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  5576  0C73  00A8               	movwf	??_handle_ir_code
  5577  0C74  0859               	movf	_radial_position,w
  5578  0C75  3A80               	xorlw	128
  5579  0C76  02A8               	subwf	??_handle_ir_code,f
  5580  0C77  1803               	skipnc
  5581  0C78  0008               	return
  5582                           
  5583                           ;nozzle.c: 750: {
  5584                           ;nozzle.c: 751: radial_position--;
  5585  0C79  30FF               	movlw	255
  5586  0C7A  00A8               	movwf	??_handle_ir_code
  5587  0C7B  0828               	movf	??_handle_ir_code,w
  5588  0C7C  07D9               	addwf	_radial_position,f
  5589                           
  5590                           ;nozzle.c: 752: handle_nozzle_step();
  5591  0C7D  120A  158A  24AE   	fcall	_handle_nozzle_step
  5592                           
  5593                           ;nozzle.c: 753: }
  5594                           ;nozzle.c: 754: break;
  5595  0C80  0008               	return
  5596  0C81                     l2611:	
  5597                           ;nozzle.c: 756: case 4:
  5598                           
  5599                           
  5600                           ;nozzle.c: 757: PORTDbits.RD7 = !PORTDbits.RD7;
  5601  0C81  1003               	clrc
  5602  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  5603  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  5604  0C84  1F88               	btfss	8,7	;volatile
  5605  0C85  1403               	setc
  5606  0C86  1C03               	btfss	3,0
  5607  0C87  2C8C               	goto	u2970
  5608  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0C8A  1788               	bsf	8,7	;volatile
  5611  0C8B  2C8F               	goto	l2613
  5612  0C8C                     u2970:	
  5613  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  5614  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  5615  0C8E  1388               	bcf	8,7	;volatile
  5616  0C8F                     l2613:	
  5617                           
  5618                           ;nozzle.c: 758: if(!armed)
  5619  0C8F  0860               	movf	_armed,w
  5620  0C90  1D03               	btfss	3,2
  5621  0C91  2C96               	goto	l2617
  5622                           
  5623                           ;nozzle.c: 759: {
  5624                           ;nozzle.c: 760: arm_motors();
  5625  0C92  120A  158A  2028   	fcall	_arm_motors
  5626                           
  5627                           ;nozzle.c: 761: }
  5628  0C95  0008               	return
  5629  0C96                     l2617:	
  5630                           
  5631                           ;nozzle.c: 762: else
  5632                           ;nozzle.c: 763: {
  5633                           ;nozzle.c: 764: disarm_motors();
  5634  0C96  120A  118A  20F4   	fcall	_disarm_motors
  5635                           
  5636                           ;nozzle.c: 767: }
  5637                           
  5638                           ;nozzle.c: 765: }
  5639                           ;nozzle.c: 766: break;
  5640  0C99  0008               	return
  5641  0C9A                     l2621:	
  5642  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5643  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5644  0C9C  0856               	movf	_ir_code,w
  5645                           
  5646                           ; Switch size 1, requested type "space"
  5647                           ; Number of cases is 5, Range of values is 0 to 4
  5648                           ; switch strategies available:
  5649                           ; Name         Instructions Cycles
  5650                           ; simple_byte           16     9 (average)
  5651                           ; direct_byte           23     8 (fixed)
  5652                           ; jumptable            260     6 (fixed)
  5653                           ;	Chosen strategy is simple_byte
  5654  0C9D  3A00               	xorlw	0	; case 0
  5655  0C9E  1903               	skipnz
  5656  0C9F  2C0C               	goto	l2579
  5657  0CA0  3A01               	xorlw	1	; case 1
  5658  0CA1  1903               	skipnz
  5659  0CA2  2C23               	goto	l2587
  5660  0CA3  3A03               	xorlw	3	; case 2
  5661  0CA4  1903               	skipnz
  5662  0CA5  2C3D               	goto	l2595
  5663  0CA6  3A01               	xorlw	1	; case 3
  5664  0CA7  1903               	skipnz
  5665  0CA8  2C5F               	goto	l2603
  5666  0CA9  3A07               	xorlw	7	; case 4
  5667  0CAA  1903               	skipnz
  5668  0CAB  2C81               	goto	l2611
  5669  0CAC  2CAD               	goto	l299
  5670  0CAD                     l299:	
  5671  0CAD  0008               	return
  5672  0CAE                     __end_of_handle_ir_code:	
  5673                           
  5674                           	psect	text20
  5675  0CAE                     __ptext20:	
  5676 ;; *************** function _handle_nozzle_step *****************
  5677 ;; Defined at:
  5678 ;;		line 657 in file "nozzle.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  diff            1    7[BANK0 ] char 
  5683 ;;  diff            1    6[BANK0 ] char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5693 ;;      Params:         0       0       0       0       0
  5694 ;;      Locals:         0       2       0       0       0
  5695 ;;      Temps:          0       2       0       0       0
  5696 ;;      Totals:         0       4       0       0       0
  5697 ;;Total ram usage:        4 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    2
  5700 ;; This function calls:
  5701 ;;		___bmul
  5702 ;; This function is called by:
  5703 ;;		_handle_ir_code
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           
  5708                           ;psect for function _handle_nozzle_step
  5709  0CAE                     _handle_nozzle_step:	
  5710                           
  5711                           ;nozzle.c: 668: tracking_state[0].target_position = radial_position +
  5712                           ;nozzle.c: 669: step_to_encoders[nozzle_step * 3 + 0];
  5713                           
  5714                           ;incstack = 0
  5715                           ; Regs used in _handle_nozzle_step: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5716  0CAE  3003               	movlw	3
  5717  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  5718  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  5719  0CB1  00A4               	movwf	??_handle_nozzle_step
  5720  0CB2  0824               	movf	??_handle_nozzle_step,w
  5721  0CB3  00A0               	movwf	___bmul@multiplicand
  5722  0CB4  0861               	movf	_nozzle_step,w
  5723  0CB5  160A  118A  276C  120A  158A  	fcall	___bmul
  5724  0CBA  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  5725  0CBB  0084               	movwf	4
  5726  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0CBE  0859               	movf	_radial_position,w
  5729  0CBF  1783               	bsf	3,7	;select IRP bank3
  5730  0CC0  0700               	addwf	0,w
  5731  0CC1  00A5               	movwf	??_handle_nozzle_step+1
  5732  0CC2  0825               	movf	??_handle_nozzle_step+1,w
  5733  0CC3  1683               	bsf	3,5	;RP0=1, select bank1
  5734  0CC4  1303               	bcf	3,6	;RP1=0, select bank1
  5735  0CC5  00A7               	movwf	(_tracking_state^(0+128)+7)
  5736                           
  5737                           ;nozzle.c: 670: tracking_state[1].target_position =
  5738                           ;nozzle.c: 671: step_to_encoders[nozzle_step * 3 + 1];
  5739  0CC6  3003               	movlw	3
  5740  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0CC9  00A4               	movwf	??_handle_nozzle_step
  5743  0CCA  0824               	movf	??_handle_nozzle_step,w
  5744  0CCB  00A0               	movwf	___bmul@multiplicand
  5745  0CCC  0861               	movf	_nozzle_step,w
  5746  0CCD  160A  118A  276C  120A  158A  	fcall	___bmul
  5747  0CD2  3E01               	addlw	1
  5748  0CD3  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  5749  0CD4  0084               	movwf	4
  5750  0CD5  1783               	bsf	3,7	;select IRP bank3
  5751  0CD6  0800               	movf	0,w
  5752  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5753  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  5754  0CD9  00A5               	movwf	??_handle_nozzle_step+1
  5755  0CDA  0825               	movf	??_handle_nozzle_step+1,w
  5756  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  5757  0CDC  1303               	bcf	3,6	;RP1=0, select bank1
  5758  0CDD  00B3               	movwf	(_tracking_state^(0+128)+19)
  5759                           
  5760                           ;nozzle.c: 672: tracking_state[2].target_position =
  5761                           ;nozzle.c: 673: step_to_encoders[nozzle_step * 3 + 2];
  5762  0CDE  3003               	movlw	3
  5763  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  5764  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  5765  0CE1  00A4               	movwf	??_handle_nozzle_step
  5766  0CE2  0824               	movf	??_handle_nozzle_step,w
  5767  0CE3  00A0               	movwf	___bmul@multiplicand
  5768  0CE4  0861               	movf	_nozzle_step,w
  5769  0CE5  160A  118A  276C  120A  158A  	fcall	___bmul
  5770  0CEA  3E02               	addlw	2
  5771  0CEB  3E90               	addlw	(low (_step_to_encoders| (0+256)))& (0+255)
  5772  0CEC  0084               	movwf	4
  5773  0CED  1783               	bsf	3,7	;select IRP bank3
  5774  0CEE  0800               	movf	0,w
  5775  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0CF1  00A5               	movwf	??_handle_nozzle_step+1
  5778  0CF2  0825               	movf	??_handle_nozzle_step+1,w
  5779  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  5780  0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  5781  0CF5  00BF               	movwf	(_tracking_state^(0+128)+31)
  5782                           
  5783                           ;nozzle.c: 675: if(tracking_state[0].target_position < tracking_state[0].min)
  5784  0CF6  0827               	movf	(_tracking_state^(0+128)+7),w
  5785  0CF7  3A80               	xorlw	128
  5786  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  5787  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  5788  0CFA  00A4               	movwf	??_handle_nozzle_step
  5789  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  5790  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  5791  0CFD  0828               	movf	(_tracking_state^(0+128)+8),w
  5792  0CFE  3A80               	xorlw	128
  5793  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0D01  02A4               	subwf	??_handle_nozzle_step,f
  5796  0D02  1803               	skipnc
  5797  0D03  2D1A               	goto	l1749
  5798                           
  5799                           ;nozzle.c: 676: {
  5800                           ;nozzle.c: 677: int8_t diff = tracking_state[0].min - tracking_state[0].target_position;
  5801  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  5802  0D05  1303               	bcf	3,6	;RP1=0, select bank1
  5803  0D06  0327               	decf	(_tracking_state^(0+128)+7),w
  5804  0D07  3AFF               	xorlw	255
  5805  0D08  0728               	addwf	(_tracking_state^(0+128)+8),w
  5806  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0D0B  00A4               	movwf	??_handle_nozzle_step
  5809  0D0C  0824               	movf	??_handle_nozzle_step,w
  5810  0D0D  00A6               	movwf	handle_nozzle_step@diff
  5811                           
  5812                           ;nozzle.c: 678: tracking_state[0].target_position += diff;
  5813  0D0E  0826               	movf	handle_nozzle_step@diff,w
  5814  0D0F  00A4               	movwf	??_handle_nozzle_step
  5815  0D10  0824               	movf	??_handle_nozzle_step,w
  5816  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  5817  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  5818  0D13  07A7               	addwf	(_tracking_state^(0+128)+7),f
  5819                           
  5820                           ;nozzle.c: 680: radial_position += diff;
  5821  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  5823  0D16  0826               	movf	handle_nozzle_step@diff,w
  5824  0D17  00A4               	movwf	??_handle_nozzle_step
  5825  0D18  0824               	movf	??_handle_nozzle_step,w
  5826  0D19  07D9               	addwf	_radial_position,f
  5827  0D1A                     l1749:	
  5828                           
  5829                           ;nozzle.c: 681: }
  5830                           ;nozzle.c: 682: if(tracking_state[0].target_position > tracking_state[0].max)
  5831  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  5832  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  5833  0D1C  0829               	movf	(_tracking_state^(0+128)+9),w
  5834  0D1D  3A80               	xorlw	128
  5835  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  5836  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  5837  0D20  00A4               	movwf	??_handle_nozzle_step
  5838  0D21  1683               	bsf	3,5	;RP0=1, select bank1
  5839  0D22  1303               	bcf	3,6	;RP1=0, select bank1
  5840  0D23  0827               	movf	(_tracking_state^(0+128)+7),w
  5841  0D24  3A80               	xorlw	128
  5842  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0D27  02A4               	subwf	??_handle_nozzle_step,f
  5845  0D28  1803               	skipnc
  5846  0D29  2D3C               	goto	l279
  5847                           
  5848                           ;nozzle.c: 683: {
  5849                           ;nozzle.c: 684: int8_t diff = tracking_state[0].target_position - tracking_state[0].max;
  5850  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  5851  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  5852  0D2C  0329               	decf	(_tracking_state^(0+128)+9),w
  5853  0D2D  3AFF               	xorlw	255
  5854  0D2E  0727               	addwf	(_tracking_state^(0+128)+7),w
  5855  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0D31  00A4               	movwf	??_handle_nozzle_step
  5858  0D32  0824               	movf	??_handle_nozzle_step,w
  5859  0D33  00A7               	movwf	handle_nozzle_step@diff_488
  5860                           
  5861                           ;nozzle.c: 685: tracking_state[0].target_position -= diff;
  5862  0D34  0827               	movf	handle_nozzle_step@diff_488,w
  5863  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  5864  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  5865  0D37  02A7               	subwf	(_tracking_state^(0+128)+7),f
  5866                           
  5867                           ;nozzle.c: 687: radial_position -= diff;
  5868  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  5869  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  5870  0D3A  0827               	movf	handle_nozzle_step@diff_488,w
  5871  0D3B  02D9               	subwf	_radial_position,f
  5872  0D3C                     l279:	
  5873                           
  5874                           ;nozzle.c: 688: }
  5875                           ;nozzle.c: 691: if(tracking_state[0].changed < 0xff)
  5876  0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  5877  0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  5878  0D3E  0A2A               	incf	(_tracking_state^(0+128)+10),w
  5879  0D3F  1903               	btfsc	3,2
  5880  0D40  2D49               	goto	l280
  5881                           
  5882                           ;nozzle.c: 692: {
  5883                           ;nozzle.c: 693: tracking_state[0].changed++;
  5884  0D41  3001               	movlw	1
  5885  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  5886  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  5887  0D44  00A4               	movwf	??_handle_nozzle_step
  5888  0D45  0824               	movf	??_handle_nozzle_step,w
  5889  0D46  1683               	bsf	3,5	;RP0=1, select bank1
  5890  0D47  1303               	bcf	3,6	;RP1=0, select bank1
  5891  0D48  07AA               	addwf	(_tracking_state^(0+128)+10),f
  5892  0D49                     l280:	
  5893                           
  5894                           ;nozzle.c: 694: }
  5895                           ;nozzle.c: 695: if(tracking_state[1].changed < 0xff)
  5896  0D49  0A36               	incf	(_tracking_state^(0+128)+22),w
  5897  0D4A  1903               	btfsc	3,2
  5898  0D4B  2D54               	goto	l281
  5899                           
  5900                           ;nozzle.c: 696: {
  5901                           ;nozzle.c: 697: tracking_state[1].changed++;
  5902  0D4C  3001               	movlw	1
  5903  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  5904  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  5905  0D4F  00A4               	movwf	??_handle_nozzle_step
  5906  0D50  0824               	movf	??_handle_nozzle_step,w
  5907  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  5908  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  5909  0D53  07B6               	addwf	(_tracking_state^(0+128)+22),f
  5910  0D54                     l281:	
  5911                           
  5912                           ;nozzle.c: 698: }
  5913                           ;nozzle.c: 699: if(tracking_state[2].changed < 0xff)
  5914  0D54  0A42               	incf	(_tracking_state^(0+128)+34),w
  5915  0D55  1903               	btfsc	3,2
  5916  0D56  0008               	return
  5917                           
  5918                           ;nozzle.c: 700: {
  5919                           ;nozzle.c: 701: tracking_state[2].changed++;
  5920  0D57  3001               	movlw	1
  5921  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  5922  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  5923  0D5A  00A4               	movwf	??_handle_nozzle_step
  5924  0D5B  0824               	movf	??_handle_nozzle_step,w
  5925  0D5C  1683               	bsf	3,5	;RP0=1, select bank1
  5926  0D5D  1303               	bcf	3,6	;RP1=0, select bank1
  5927  0D5E  07C2               	addwf	(_tracking_state^(0+128)+34),f
  5928  0D5F  0008               	return
  5929  0D60                     __end_of_handle_nozzle_step:	
  5930                           
  5931                           	psect	text21
  5932  176C                     __ptext21:	
  5933 ;; *************** function ___bmul *****************
  5934 ;; Defined at:
  5935 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/Umul8.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  multiplier      1    wreg     unsigned char 
  5938 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5941 ;;  product         1    2[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      unsigned char 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       1       0       0       0
  5952 ;;      Locals:         0       2       0       0       0
  5953 ;;      Temps:          0       1       0       0       0
  5954 ;;      Totals:         0       4       0       0       0
  5955 ;;Total ram usage:        4 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_motor_tracking
  5962 ;;		_motor_home6
  5963 ;;		_motor_home5
  5964 ;;		_motor_home4
  5965 ;;		_motor_home3
  5966 ;;		_motor_home2
  5967 ;;		_motor_home1
  5968 ;;		_handle_nozzle_step
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function ___bmul
  5975  176C                     ___bmul:	
  5976                           
  5977                           ;incstack = 0
  5978                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5979                           ;___bmul@multiplier stored from wreg
  5980  176C  1283               	bcf	3,5	;RP0=0, select bank0
  5981  176D  1303               	bcf	3,6	;RP1=0, select bank0
  5982  176E  00A3               	movwf	___bmul@multiplier
  5983  176F  01A2               	clrf	___bmul@product
  5984  1770                     l1707:	
  5985  1770  1C23               	btfss	___bmul@multiplier,0
  5986  1771  2F76               	goto	l1711
  5987  1772  0820               	movf	___bmul@multiplicand,w
  5988  1773  00A1               	movwf	??___bmul
  5989  1774  0821               	movf	??___bmul,w
  5990  1775  07A2               	addwf	___bmul@product,f
  5991  1776                     l1711:	
  5992  1776  1003               	clrc
  5993  1777  0DA0               	rlf	___bmul@multiplicand,f
  5994  1778  1003               	clrc
  5995  1779  0CA3               	rrf	___bmul@multiplier,f
  5996  177A  0823               	movf	___bmul@multiplier,w
  5997  177B  1D03               	btfss	3,2
  5998  177C  2F70               	goto	l1707
  5999  177D  0822               	movf	___bmul@product,w
  6000  177E  0008               	return
  6001  177F                     __end_of___bmul:	
  6002                           
  6003                           	psect	text22
  6004  00F4                     __ptext22:	
  6005 ;; *************** function _disarm_motors *****************
  6006 ;; Defined at:
  6007 ;;		line 649 in file "nozzle.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;		None
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6021 ;;      Params:         0       0       0       0       0
  6022 ;;      Locals:         0       0       0       0       0
  6023 ;;      Temps:          0       1       0       0       0
  6024 ;;      Totals:         0       1       0       0       0
  6025 ;;Total ram usage:        1 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    1
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_handle_ir_code
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function _disarm_motors
  6037  00F4                     _disarm_motors:	
  6038                           
  6039                           ;nozzle.c: 651: armed = 0;
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in _disarm_motors: [wreg+status,2+status,0]
  6043  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  6044  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  6045  00F6  01E0               	clrf	_armed
  6046                           
  6047                           ;nozzle.c: 652: PORTD &= ~(uint8_t)0b00111111;
  6048  00F7  30C0               	movlw	192
  6049  00F8  00A0               	movwf	??_disarm_motors
  6050  00F9  0820               	movf	??_disarm_motors,w
  6051  00FA  0588               	andwf	8,f	;volatile
  6052                           
  6053                           ;nozzle.c: 653: motor_state = motor_idle;
  6054  00FB  300A               	movlw	(low (fp__motor_idle-fpbase))& (0+255)
  6055  00FC  00A0               	movwf	??_disarm_motors
  6056  00FD  0820               	movf	??_disarm_motors,w
  6057  00FE  00E3               	movwf	_motor_state
  6058  00FF  0008               	return
  6059  0100                     __end_of_disarm_motors:	
  6060                           
  6061                           	psect	text23
  6062  0828                     __ptext23:	
  6063 ;; *************** function _arm_motors *****************
  6064 ;; Defined at:
  6065 ;;		line 629 in file "nozzle.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6079 ;;      Params:         0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0
  6081 ;;      Temps:          0       1       0       0       0
  6082 ;;      Totals:         0       1       0       0       0
  6083 ;;Total ram usage:        1 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_handle_ir_code
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function _arm_motors
  6095  0828                     _arm_motors:	
  6096                           
  6097                           ;nozzle.c: 631: armed = 1;
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _arm_motors: [wreg+status,2+status,0]
  6101  0828  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0829  1303               	bcf	3,6	;RP1=0, select bank0
  6103  082A  01E0               	clrf	_armed
  6104  082B  0AE0               	incf	_armed,f
  6105                           
  6106                           ;nozzle.c: 632: PORTDbits.RD7 = 1;
  6107  082C  1788               	bsf	8,7	;volatile
  6108                           
  6109                           ;nozzle.c: 633: current_motor = 2;
  6110  082D  3002               	movlw	2
  6111  082E  00A0               	movwf	??_arm_motors
  6112  082F  0820               	movf	??_arm_motors,w
  6113  0830  00DC               	movwf	_current_motor
  6114                           
  6115                           ;nozzle.c: 635: tracking_state[2].target_position = 8;
  6116  0831  3008               	movlw	8
  6117  0832  00A0               	movwf	??_arm_motors
  6118  0833  0820               	movf	??_arm_motors,w
  6119  0834  1683               	bsf	3,5	;RP0=1, select bank1
  6120  0835  1303               	bcf	3,6	;RP1=0, select bank1
  6121  0836  00BF               	movwf	(_tracking_state^(0+128)+31)
  6122                           
  6123                           ;nozzle.c: 636: tracking_state[2].changed = 0;
  6124  0837  01C2               	clrf	(_tracking_state^(0+128)+34)
  6125                           
  6126                           ;nozzle.c: 638: tracking_state[1].target_position = 17;
  6127  0838  3011               	movlw	17
  6128  0839  1283               	bcf	3,5	;RP0=0, select bank0
  6129  083A  1303               	bcf	3,6	;RP1=0, select bank0
  6130  083B  00A0               	movwf	??_arm_motors
  6131  083C  0820               	movf	??_arm_motors,w
  6132  083D  1683               	bsf	3,5	;RP0=1, select bank1
  6133  083E  1303               	bcf	3,6	;RP1=0, select bank1
  6134  083F  00B3               	movwf	(_tracking_state^(0+128)+19)
  6135                           
  6136                           ;nozzle.c: 639: tracking_state[1].changed = 0;
  6137  0840  01B6               	clrf	(_tracking_state^(0+128)+22)
  6138                           
  6139                           ;nozzle.c: 641: tracking_state[0].target_position = 22 + step_to_encoders[0 * 3 + 0];
  6140  0841  1683               	bsf	3,5	;RP0=1, select bank3
  6141  0842  1703               	bsf	3,6	;RP1=1, select bank3
  6142  0843  0810               	movf	_step_to_encoders^(0+384),w
  6143  0844  3E16               	addlw	22
  6144  0845  1283               	bcf	3,5	;RP0=0, select bank0
  6145  0846  1303               	bcf	3,6	;RP1=0, select bank0
  6146  0847  00A0               	movwf	??_arm_motors
  6147  0848  0820               	movf	??_arm_motors,w
  6148  0849  1683               	bsf	3,5	;RP0=1, select bank1
  6149  084A  1303               	bcf	3,6	;RP1=0, select bank1
  6150  084B  00A7               	movwf	(_tracking_state^(0+128)+7)
  6151                           
  6152                           ;nozzle.c: 642: tracking_state[0].changed = 0;
  6153  084C  01AA               	clrf	(_tracking_state^(0+128)+10)
  6154                           
  6155                           ;nozzle.c: 644: nozzle_step = 0;
  6156  084D  1283               	bcf	3,5	;RP0=0, select bank0
  6157  084E  1303               	bcf	3,6	;RP1=0, select bank0
  6158  084F  01E1               	clrf	_nozzle_step
  6159                           
  6160                           ;nozzle.c: 645: radial_position = 22;
  6161  0850  3016               	movlw	22
  6162  0851  00A0               	movwf	??_arm_motors
  6163  0852  0820               	movf	??_arm_motors,w
  6164  0853  00D9               	movwf	_radial_position
  6165                           
  6166                           ;nozzle.c: 646: motor_state = motor_home1;
  6167  0854  3007               	movlw	(low (fp__motor_home1-fpbase))& (0+255)
  6168  0855  00A0               	movwf	??_arm_motors
  6169  0856  0820               	movf	??_arm_motors,w
  6170  0857  00E3               	movwf	_motor_state
  6171  0858  0008               	return
  6172  0859                     __end_of_arm_motors:	
  6173                           
  6174                           	psect	text24
  6175  1746                     __ptext24:	
  6176 ;; *************** function _flush_uart *****************
  6177 ;; Defined at:
  6178 ;;		line 410 in file "nozzle.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6192 ;;      Params:         0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    2
  6199 ;; This function calls:
  6200 ;;		_handle_uart
  6201 ;; This function is called by:
  6202 ;;		_main
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           
  6207                           ;psect for function _flush_uart
  6208  1746                     _flush_uart:	
  6209  1746                     l2719:	
  6210                           ;nozzle.c: 412: while(uart_size > 0)
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in _flush_uart: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6214                           
  6215  1746  0879               	movf	_uart_size,w
  6216  1747  1903               	btfsc	3,2
  6217  1748  0008               	return
  6218  1749  0064               	clrwdt	;# 
  6219                           
  6220                           ;nozzle.c: 415: handle_uart();
  6221  174A  160A  118A  277F  160A  118A  	fcall	_handle_uart
  6222  174F  2F46               	goto	l2719
  6223  1750                     __end_of_flush_uart:	
  6224                           
  6225                           	psect	text25
  6226  177F                     __ptext25:	
  6227 ;; *************** function _handle_uart *****************
  6228 ;; Defined at:
  6229 ;;		line 396 in file "nozzle.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6243 ;;      Params:         0       0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0
  6245 ;;      Temps:          0       1       0       0       0
  6246 ;;      Totals:         0       1       0       0       0
  6247 ;;Total ram usage:        1 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_flush_uart
  6254 ;;		_main
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           
  6259                           ;psect for function _handle_uart
  6260  177F                     _handle_uart:	
  6261                           
  6262                           ;nozzle.c: 398: if(uart_size > 0 && PIR1bits.TXIF)
  6263                           
  6264                           ;incstack = 0
  6265                           ; Regs used in _handle_uart: [wreg-fsr0h+status,2+status,0]
  6266  177F  0879               	movf	_uart_size,w
  6267  1780  1903               	btfsc	3,2
  6268  1781  0008               	return
  6269  1782  1283               	bcf	3,5	;RP0=0, select bank0
  6270  1783  1303               	bcf	3,6	;RP1=0, select bank0
  6271  1784  1E0C               	btfss	12,4	;volatile
  6272  1785  0008               	return
  6273                           
  6274                           ;nozzle.c: 399: {
  6275                           ;nozzle.c: 400: PIR1bits.TXIF = 0;
  6276  1786  120C               	bcf	12,4	;volatile
  6277                           
  6278                           ;nozzle.c: 401: TXREG = uart_buffer[uart_position2++];
  6279  1787  0877               	movf	_uart_position2,w
  6280  1788  3E10               	addlw	(low (_uart_buffer| (0+256)))& (0+255)
  6281  1789  0084               	movwf	4
  6282  178A  1783               	bsf	3,7	;select IRP bank2
  6283  178B  0800               	movf	0,w
  6284  178C  0099               	movwf	25	;volatile
  6285  178D  3001               	movlw	1
  6286  178E  00A0               	movwf	??_handle_uart
  6287  178F  0820               	movf	??_handle_uart,w
  6288  1790  07F7               	addwf	_uart_position2,f
  6289                           
  6290                           ;nozzle.c: 402: uart_size--;
  6291  1791  3001               	movlw	1
  6292  1792  02F9               	subwf	_uart_size,f
  6293                           
  6294                           ;nozzle.c: 403: if(uart_position2 >= 64)
  6295  1793  3040               	movlw	64
  6296  1794  0277               	subwf	_uart_position2,w
  6297  1795  1C03               	skipc
  6298  1796  0008               	return
  6299                           
  6300                           ;nozzle.c: 404: {
  6301                           ;nozzle.c: 405: uart_position2 = 0;
  6302  1797  01F7               	clrf	_uart_position2
  6303  1798  0008               	return
  6304  1799                     __end_of_handle_uart:	
  6305                           
  6306                           	psect	text26
  6307  0B98                     __ptext26:	
  6308 ;; *************** function _capture_adc *****************
  6309 ;; Defined at:
  6310 ;;		line 919 in file "nozzle.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;		None
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  sensor          1    2[BANK0 ] PTR struct .
  6315 ;;		 -> sensors(24), 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6325 ;;      Params:         0       0       0       0       0
  6326 ;;      Locals:         0       1       0       0       0
  6327 ;;      Temps:          0       2       0       0       0
  6328 ;;      Totals:         0       3       0       0       0
  6329 ;;Total ram usage:        3 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_charge_adc
  6336 ;;		_main
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           
  6341                           ;psect for function _capture_adc
  6342  0B98                     _capture_adc:	
  6343                           
  6344                           ;nozzle.c: 921: if(PIR1bits.ADIF)
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _capture_adc: [wreg-fsr0h+status,2+status,0]
  6348  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  6350  0B9A  1F0C               	btfss	12,6	;volatile
  6351  0B9B  0008               	return
  6352                           
  6353                           ;nozzle.c: 922: {
  6354                           ;nozzle.c: 923: sensor_state_t *sensor = &sensors[current_adc];
  6355  0B9C  085A               	movf	_current_adc,w
  6356  0B9D  00A0               	movwf	??_capture_adc
  6357  0B9E  3001               	movlw	1
  6358  0B9F                     u2395:	
  6359  0B9F  1003               	clrc
  6360  0BA0  0DA0               	rlf	??_capture_adc,f
  6361  0BA1  3EFF               	addlw	-1
  6362  0BA2  1D03               	skipz
  6363  0BA3  2B9F               	goto	u2395
  6364  0BA4  1003               	clrc
  6365  0BA5  0D20               	rlf	??_capture_adc,w
  6366  0BA6  3EC4               	addlw	(low (_sensors| 0))& (0+255)
  6367  0BA7  00A1               	movwf	??_capture_adc+1
  6368  0BA8  0821               	movf	??_capture_adc+1,w
  6369  0BA9  00A2               	movwf	capture_adc@sensor
  6370                           
  6371                           ;nozzle.c: 924: sensor->analog = ADRESH;
  6372  0BAA  081E               	movf	30,w	;volatile
  6373  0BAB  00A0               	movwf	??_capture_adc
  6374  0BAC  0822               	movf	capture_adc@sensor,w
  6375  0BAD  0084               	movwf	4
  6376  0BAE  0820               	movf	??_capture_adc,w
  6377  0BAF  1383               	bcf	3,7	;select IRP bank0
  6378  0BB0  0080               	movwf	0
  6379                           
  6380                           ;nozzle.c: 925: if(sensor->ns == 0 &&
  6381                           ;nozzle.c: 926: sensor->analog >= 0x80 + 0x20)
  6382  0BB1  0A22               	incf	capture_adc@sensor,w
  6383  0BB2  0084               	movwf	4
  6384  0BB3  0800               	movf	0,w
  6385  0BB4  1D03               	btfss	3,2
  6386  0BB5  2BC1               	goto	l2177
  6387  0BB6  0822               	movf	capture_adc@sensor,w
  6388  0BB7  0084               	movwf	4
  6389  0BB8  30A0               	movlw	160
  6390  0BB9  0200               	subwf	0,w
  6391  0BBA  1C03               	skipc
  6392  0BBB  2BC1               	goto	l2177
  6393                           
  6394                           ;nozzle.c: 927: {
  6395                           ;nozzle.c: 928: sensor->ns = 1;
  6396  0BBC  0A22               	incf	capture_adc@sensor,w
  6397  0BBD  0084               	movwf	4
  6398  0BBE  0180               	clrf	0
  6399  0BBF  0A80               	incf	0,f
  6400  0BC0  2BCF               	goto	l2183
  6401  0BC1                     l2177:	
  6402                           ;nozzle.c: 930: }
  6403                           
  6404                           ;nozzle.c: 929: sensor->position += sensor->step;
  6405                           
  6406                           
  6407                           ;nozzle.c: 931: else
  6408                           ;nozzle.c: 932: if(sensor->ns == 1 &&
  6409                           ;nozzle.c: 933: sensor->analog < 0x80 - 0x20)
  6410  0BC1  0A22               	incf	capture_adc@sensor,w
  6411  0BC2  0084               	movwf	4
  6412  0BC3  0300               	decf	0,w
  6413  0BC4  1D03               	btfss	3,2
  6414  0BC5  2BD9               	goto	l2185
  6415  0BC6  0822               	movf	capture_adc@sensor,w
  6416  0BC7  0084               	movwf	4
  6417  0BC8  3060               	movlw	96
  6418  0BC9  0200               	subwf	0,w
  6419  0BCA  1803               	skipnc
  6420  0BCB  2BD9               	goto	l2185
  6421                           
  6422                           ;nozzle.c: 934: {
  6423                           ;nozzle.c: 935: sensor->ns = 0;
  6424  0BCC  0A22               	incf	capture_adc@sensor,w
  6425  0BCD  0084               	movwf	4
  6426  0BCE  0180               	clrf	0
  6427  0BCF                     l2183:	
  6428                           
  6429                           ;nozzle.c: 936: sensor->position += sensor->step;
  6430  0BCF  0822               	movf	capture_adc@sensor,w
  6431  0BD0  3E02               	addlw	2
  6432  0BD1  0084               	movwf	4
  6433  0BD2  0800               	movf	0,w
  6434  0BD3  00A0               	movwf	??_capture_adc
  6435  0BD4  0822               	movf	capture_adc@sensor,w
  6436  0BD5  3E03               	addlw	3
  6437  0BD6  0084               	movwf	4
  6438  0BD7  0820               	movf	??_capture_adc,w
  6439  0BD8  0780               	addwf	0,f
  6440  0BD9                     l2185:	
  6441                           
  6442                           ;nozzle.c: 937: }
  6443                           ;nozzle.c: 939: current_adc++;
  6444  0BD9  3001               	movlw	1
  6445  0BDA  00A0               	movwf	??_capture_adc
  6446  0BDB  0820               	movf	??_capture_adc,w
  6447  0BDC  07DA               	addwf	_current_adc,f
  6448                           
  6449                           ;nozzle.c: 940: if(current_adc >= 6)
  6450  0BDD  3006               	movlw	6
  6451  0BDE  025A               	subwf	_current_adc,w
  6452  0BDF  1C03               	skipc
  6453  0BE0  2BF0               	goto	l2205
  6454                           
  6455                           ;nozzle.c: 941: {
  6456                           ;nozzle.c: 942: current_adc = 0;
  6457  0BE1  01DA               	clrf	_current_adc
  6458                           
  6459                           ;nozzle.c: 959: }
  6460                           ;nozzle.c: 961: switch(current_adc)
  6461  0BE2  2BF0               	goto	l2205
  6462  0BE3                     l2191:	
  6463                           ;nozzle.c: 962: {
  6464                           ;nozzle.c: 963: case 0:
  6465                           
  6466                           
  6467                           ;nozzle.c: 964: ADCON0 = 0b10000001 | 0b00000000;
  6468  0BE3  3081               	movlw	129
  6469  0BE4  2BEE               	goto	L11
  6470  0BE5                     l2193:	
  6471                           ;nozzle.c: 966: case 1:
  6472                           
  6473                           ;nozzle.c: 965: break;
  6474                           
  6475                           
  6476                           ;nozzle.c: 967: ADCON0 = 0b10000001 | 0b00001000;
  6477  0BE5  3089               	movlw	137
  6478  0BE6  2BEE               	goto	L11
  6479  0BE7                     l2195:	
  6480                           ;nozzle.c: 969: case 2:
  6481                           
  6482                           ;nozzle.c: 968: break;
  6483                           
  6484                           
  6485                           ;nozzle.c: 970: ADCON0 = 0b10000001 | 0b00010000;
  6486  0BE7  3091               	movlw	145
  6487  0BE8  2BEE               	goto	L11
  6488  0BE9                     l2197:	
  6489                           ;nozzle.c: 972: case 3:
  6490                           
  6491                           ;nozzle.c: 971: break;
  6492                           
  6493                           
  6494                           ;nozzle.c: 973: ADCON0 = 0b10000001 | 0b00011000;
  6495  0BE9  3099               	movlw	153
  6496  0BEA  2BEE               	goto	L11
  6497  0BEB                     l2199:	
  6498                           ;nozzle.c: 975: case 4:
  6499                           
  6500                           ;nozzle.c: 974: break;
  6501                           
  6502                           
  6503                           ;nozzle.c: 976: ADCON0 = 0b10000001 | 0b00100000;
  6504  0BEB  30A1               	movlw	161
  6505  0BEC  2BEE               	goto	L11
  6506  0BED                     l2201:	
  6507                           ;nozzle.c: 978: case 5:
  6508                           
  6509                           ;nozzle.c: 977: break;
  6510                           
  6511                           
  6512                           ;nozzle.c: 979: ADCON0 = 0b10000001 | 0b00101000;
  6513  0BED  30A9               	movlw	169
  6514  0BEE                     L11:	
  6515  0BEE  009F               	movwf	31	;volatile
  6516                           
  6517                           ;nozzle.c: 981: }
  6518                           
  6519                           ;nozzle.c: 980: break;
  6520  0BEF  2C04               	goto	l2207
  6521  0BF0                     l2205:	
  6522  0BF0  085A               	movf	_current_adc,w
  6523                           
  6524                           ; Switch size 1, requested type "space"
  6525                           ; Number of cases is 6, Range of values is 0 to 5
  6526                           ; switch strategies available:
  6527                           ; Name         Instructions Cycles
  6528                           ; simple_byte           19    10 (average)
  6529                           ; direct_byte           26     8 (fixed)
  6530                           ; jumptable            260     6 (fixed)
  6531                           ;	Chosen strategy is simple_byte
  6532  0BF1  3A00               	xorlw	0	; case 0
  6533  0BF2  1903               	skipnz
  6534  0BF3  2BE3               	goto	l2191
  6535  0BF4  3A01               	xorlw	1	; case 1
  6536  0BF5  1903               	skipnz
  6537  0BF6  2BE5               	goto	l2193
  6538  0BF7  3A03               	xorlw	3	; case 2
  6539  0BF8  1903               	skipnz
  6540  0BF9  2BE7               	goto	l2195
  6541  0BFA  3A01               	xorlw	1	; case 3
  6542  0BFB  1903               	skipnz
  6543  0BFC  2BE9               	goto	l2197
  6544  0BFD  3A07               	xorlw	7	; case 4
  6545  0BFE  1903               	skipnz
  6546  0BFF  2BEB               	goto	l2199
  6547  0C00  3A01               	xorlw	1	; case 5
  6548  0C01  1903               	skipnz
  6549  0C02  2BED               	goto	l2201
  6550  0C03  2C04               	goto	l2207
  6551  0C04                     l2207:	
  6552                           
  6553                           ;nozzle.c: 983: TMR0 = 0;
  6554  0C04  0181               	clrf	1	;volatile
  6555                           
  6556                           ;nozzle.c: 984: INTCONbits.TMR0IF = 0;
  6557  0C05  110B               	bcf	11,2	;volatile
  6558                           
  6559                           ;nozzle.c: 985: adc_state = charge_adc;
  6560  0C06  3004               	movlw	(low (fp__charge_adc-fpbase))& (0+255)
  6561  0C07  00A0               	movwf	??_capture_adc
  6562  0C08  0820               	movf	??_capture_adc,w
  6563  0C09  00E2               	movwf	_adc_state
  6564  0C0A  0008               	return
  6565  0C0B                     __end_of_capture_adc:	
  6566                           
  6567                           	psect	text27
  6568  1750                     __ptext27:	
  6569 ;; *************** function _charge_adc *****************
  6570 ;; Defined at:
  6571 ;;		line 989 in file "nozzle.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6585 ;;      Params:         0       0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0
  6587 ;;      Temps:          0       1       0       0       0
  6588 ;;      Totals:         0       1       0       0       0
  6589 ;;Total ram usage:        1 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    1
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_capture_adc
  6596 ;;		_main
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _charge_adc
  6602  1750                     _charge_adc:	
  6603                           
  6604                           ;nozzle.c: 991: if(INTCONbits.TMR0IF)
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _charge_adc: [wreg]
  6608  1750  1D0B               	btfss	11,2	;volatile
  6609  1751  0008               	return
  6610                           
  6611                           ;nozzle.c: 992: {
  6612                           ;nozzle.c: 993: INTCONbits.TMR0IF;
  6613  1752  080B               	movf	11,w	;volatile
  6614                           
  6615                           ;nozzle.c: 994: PIR1bits.ADIF = 0;
  6616  1753  1283               	bcf	3,5	;RP0=0, select bank0
  6617  1754  1303               	bcf	3,6	;RP1=0, select bank0
  6618  1755  130C               	bcf	12,6	;volatile
  6619                           
  6620                           ;nozzle.c: 995: ADCON0bits.GO = 1;
  6621  1756  151F               	bsf	31,2	;volatile
  6622                           
  6623                           ;nozzle.c: 996: adc_state = capture_adc;
  6624  1757  3001               	movlw	(low (fp__capture_adc-fpbase))& (0+255)
  6625  1758  00A0               	movwf	??_charge_adc
  6626  1759  0820               	movf	??_charge_adc,w
  6627  175A  00E2               	movwf	_adc_state
  6628  175B  0008               	return
  6629  175C                     __end_of_charge_adc:	
  6630                           
  6631                           	psect	text28
  6632  090A                     __ptext28:	
  6633 ;; *************** function ___lmul *****************
  6634 ;; Defined at:
  6635 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6638 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  product         4    9[BANK0 ] unsigned long 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  4    0[BANK0 ] unsigned long 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6650 ;;      Params:         0       8       0       0       0
  6651 ;;      Locals:         0       4       0       0       0
  6652 ;;      Temps:          0       1       0       0       0
  6653 ;;      Totals:         0      13       0       0       0
  6654 ;;Total ram usage:       13 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    1
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_main
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function ___lmul
  6666  090A                     ___lmul:	
  6667                           
  6668                           ;incstack = 0
  6669                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6670  090A  3000               	movlw	0
  6671  090B  1283               	bcf	3,5	;RP0=0, select bank0
  6672  090C  1303               	bcf	3,6	;RP1=0, select bank0
  6673  090D  00AC               	movwf	___lmul@product+3
  6674  090E  3000               	movlw	0
  6675  090F  00AB               	movwf	___lmul@product+2
  6676  0910  3000               	movlw	0
  6677  0911  00AA               	movwf	___lmul@product+1
  6678  0912  3000               	movlw	0
  6679  0913  00A9               	movwf	___lmul@product
  6680  0914                     l2231:	
  6681  0914  1C20               	btfss	___lmul@multiplier,0
  6682  0915  292A               	goto	l2235
  6683  0916  0824               	movf	___lmul@multiplicand,w
  6684  0917  07A9               	addwf	___lmul@product,f
  6685  0918  0825               	movf	___lmul@multiplicand+1,w
  6686  0919  1103               	clrz
  6687  091A  1803               	skipnc
  6688  091B  3E01               	addlw	1
  6689  091C  1D03               	btfss	3,2
  6690  091D  07AA               	addwf	___lmul@product+1,f
  6691  091E  0826               	movf	___lmul@multiplicand+2,w
  6692  091F  1103               	clrz
  6693  0920  1803               	skipnc
  6694  0921  3E01               	addlw	1
  6695  0922  1D03               	btfss	3,2
  6696  0923  07AB               	addwf	___lmul@product+2,f
  6697  0924  0827               	movf	___lmul@multiplicand+3,w
  6698  0925  1103               	clrz
  6699  0926  1803               	skipnc
  6700  0927  3E01               	addlw	1
  6701  0928  1D03               	btfss	3,2
  6702  0929  07AC               	addwf	___lmul@product+3,f
  6703  092A                     l2235:	
  6704  092A  3001               	movlw	1
  6705  092B  00A8               	movwf	??___lmul
  6706  092C                     u2495:	
  6707  092C  1003               	clrc
  6708  092D  0DA4               	rlf	___lmul@multiplicand,f
  6709  092E  0DA5               	rlf	___lmul@multiplicand+1,f
  6710  092F  0DA6               	rlf	___lmul@multiplicand+2,f
  6711  0930  0DA7               	rlf	___lmul@multiplicand+3,f
  6712  0931  0BA8               	decfsz	??___lmul,f
  6713  0932  292C               	goto	u2495
  6714  0933  3001               	movlw	1
  6715  0934                     u2505:	
  6716  0934  1003               	clrc
  6717  0935  0CA3               	rrf	___lmul@multiplier+3,f
  6718  0936  0CA2               	rrf	___lmul@multiplier+2,f
  6719  0937  0CA1               	rrf	___lmul@multiplier+1,f
  6720  0938  0CA0               	rrf	___lmul@multiplier,f
  6721  0939  3EFF               	addlw	-1
  6722  093A  1D03               	skipz
  6723  093B  2934               	goto	u2505
  6724  093C  0823               	movf	___lmul@multiplier+3,w
  6725  093D  0422               	iorwf	___lmul@multiplier+2,w
  6726  093E  0421               	iorwf	___lmul@multiplier+1,w
  6727  093F  0420               	iorwf	___lmul@multiplier,w
  6728  0940  1D03               	skipz
  6729  0941  2914               	goto	l2231
  6730  0942  082C               	movf	___lmul@product+3,w
  6731  0943  00A3               	movwf	?___lmul+3
  6732  0944  082B               	movf	___lmul@product+2,w
  6733  0945  00A2               	movwf	?___lmul+2
  6734  0946  082A               	movf	___lmul@product+1,w
  6735  0947  00A1               	movwf	?___lmul+1
  6736  0948  0829               	movf	___lmul@product,w
  6737  0949  00A0               	movwf	?___lmul
  6738  094A  0008               	return
  6739  094B                     __end_of___lmul:	
  6740                           
  6741                           	psect	text29
  6742  09ED                     __ptext29:	
  6743 ;; *************** function ___lldiv *****************
  6744 ;; Defined at:
  6745 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  divisor         4   13[BANK0 ] unsigned long 
  6748 ;;  dividend        4   17[BANK0 ] unsigned long 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  quotient        4   22[BANK0 ] unsigned long 
  6751 ;;  counter         1   26[BANK0 ] unsigned char 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  4   13[BANK0 ] unsigned long 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6761 ;;      Params:         0       8       0       0       0
  6762 ;;      Locals:         0       5       0       0       0
  6763 ;;      Temps:          0       1       0       0       0
  6764 ;;      Totals:         0      14       0       0       0
  6765 ;;Total ram usage:       14 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    1
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_main
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           
  6776                           ;psect for function ___lldiv
  6777  09ED                     ___lldiv:	
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6781  09ED  3000               	movlw	0
  6782  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  6783  09EF  1303               	bcf	3,6	;RP1=0, select bank0
  6784  09F0  00B9               	movwf	___lldiv@quotient+3
  6785  09F1  3000               	movlw	0
  6786  09F2  00B8               	movwf	___lldiv@quotient+2
  6787  09F3  3000               	movlw	0
  6788  09F4  00B7               	movwf	___lldiv@quotient+1
  6789  09F5  3000               	movlw	0
  6790  09F6  00B6               	movwf	___lldiv@quotient
  6791  09F7  0830               	movf	___lldiv@divisor+3,w
  6792  09F8  042F               	iorwf	___lldiv@divisor+2,w
  6793  09F9  042E               	iorwf	___lldiv@divisor+1,w
  6794  09FA  042D               	iorwf	___lldiv@divisor,w
  6795  09FB  1903               	skipnz
  6796  09FC  2A44               	goto	l2263
  6797  09FD  01BA               	clrf	___lldiv@counter
  6798  09FE  0ABA               	incf	___lldiv@counter,f
  6799  09FF                     l2249:	
  6800  09FF  1BB0               	btfsc	___lldiv@divisor+3,7
  6801  0A00  2A0F               	goto	l2251
  6802  0A01  3001               	movlw	1
  6803  0A02  00B5               	movwf	??___lldiv
  6804  0A03                     u2535:	
  6805  0A03  1003               	clrc
  6806  0A04  0DAD               	rlf	___lldiv@divisor,f
  6807  0A05  0DAE               	rlf	___lldiv@divisor+1,f
  6808  0A06  0DAF               	rlf	___lldiv@divisor+2,f
  6809  0A07  0DB0               	rlf	___lldiv@divisor+3,f
  6810  0A08  0BB5               	decfsz	??___lldiv,f
  6811  0A09  2A03               	goto	u2535
  6812  0A0A  3001               	movlw	1
  6813  0A0B  00B5               	movwf	??___lldiv
  6814  0A0C  0835               	movf	??___lldiv,w
  6815  0A0D  07BA               	addwf	___lldiv@counter,f
  6816  0A0E  29FF               	goto	l2249
  6817  0A0F                     l2251:	
  6818  0A0F  3001               	movlw	1
  6819  0A10  00B5               	movwf	??___lldiv
  6820  0A11                     u2555:	
  6821  0A11  1003               	clrc
  6822  0A12  0DB6               	rlf	___lldiv@quotient,f
  6823  0A13  0DB7               	rlf	___lldiv@quotient+1,f
  6824  0A14  0DB8               	rlf	___lldiv@quotient+2,f
  6825  0A15  0DB9               	rlf	___lldiv@quotient+3,f
  6826  0A16  0BB5               	decfsz	??___lldiv,f
  6827  0A17  2A11               	goto	u2555
  6828  0A18  0830               	movf	___lldiv@divisor+3,w
  6829  0A19  0234               	subwf	___lldiv@dividend+3,w
  6830  0A1A  1D03               	skipz
  6831  0A1B  2A26               	goto	u2565
  6832  0A1C  082F               	movf	___lldiv@divisor+2,w
  6833  0A1D  0233               	subwf	___lldiv@dividend+2,w
  6834  0A1E  1D03               	skipz
  6835  0A1F  2A26               	goto	u2565
  6836  0A20  082E               	movf	___lldiv@divisor+1,w
  6837  0A21  0232               	subwf	___lldiv@dividend+1,w
  6838  0A22  1D03               	skipz
  6839  0A23  2A26               	goto	u2565
  6840  0A24  082D               	movf	___lldiv@divisor,w
  6841  0A25  0231               	subwf	___lldiv@dividend,w
  6842  0A26                     u2565:	
  6843  0A26  1C03               	skipc
  6844  0A27  2A37               	goto	l2259
  6845  0A28  082D               	movf	___lldiv@divisor,w
  6846  0A29  02B1               	subwf	___lldiv@dividend,f
  6847  0A2A  082E               	movf	___lldiv@divisor+1,w
  6848  0A2B  1C03               	skipc
  6849  0A2C  0F2E               	incfsz	___lldiv@divisor+1,w
  6850  0A2D  02B2               	subwf	___lldiv@dividend+1,f
  6851  0A2E  082F               	movf	___lldiv@divisor+2,w
  6852  0A2F  1C03               	skipc
  6853  0A30  0F2F               	incfsz	___lldiv@divisor+2,w
  6854  0A31  02B3               	subwf	___lldiv@dividend+2,f
  6855  0A32  0830               	movf	___lldiv@divisor+3,w
  6856  0A33  1C03               	skipc
  6857  0A34  0F30               	incfsz	___lldiv@divisor+3,w
  6858  0A35  02B4               	subwf	___lldiv@dividend+3,f
  6859  0A36  1436               	bsf	___lldiv@quotient,0
  6860  0A37                     l2259:	
  6861  0A37  3001               	movlw	1
  6862  0A38                     u2575:	
  6863  0A38  1003               	clrc
  6864  0A39  0CB0               	rrf	___lldiv@divisor+3,f
  6865  0A3A  0CAF               	rrf	___lldiv@divisor+2,f
  6866  0A3B  0CAE               	rrf	___lldiv@divisor+1,f
  6867  0A3C  0CAD               	rrf	___lldiv@divisor,f
  6868  0A3D  3EFF               	addlw	-1
  6869  0A3E  1D03               	skipz
  6870  0A3F  2A38               	goto	u2575
  6871  0A40  3001               	movlw	1
  6872  0A41  02BA               	subwf	___lldiv@counter,f
  6873  0A42  1D03               	btfss	3,2
  6874  0A43  2A0F               	goto	l2251
  6875  0A44                     l2263:	
  6876  0A44  0839               	movf	___lldiv@quotient+3,w
  6877  0A45  00B0               	movwf	?___lldiv+3
  6878  0A46  0838               	movf	___lldiv@quotient+2,w
  6879  0A47  00AF               	movwf	?___lldiv+2
  6880  0A48  0837               	movf	___lldiv@quotient+1,w
  6881  0A49  00AE               	movwf	?___lldiv+1
  6882  0A4A  0836               	movf	___lldiv@quotient,w
  6883  0A4B  00AD               	movwf	?___lldiv
  6884  0A4C  0008               	return
  6885  0A4D                     __end_of___lldiv:	
  6886                           
  6887                           	psect	text30
  6888  094B                     __ptext30:	
  6889 ;; *************** function _isr *****************
  6890 ;; Defined at:
  6891 ;;		line 1200 in file "nozzle.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  prev_port       1    6[COMMON] unsigned char 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0, btemp+1
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6905 ;;      Params:         0       0       0       0       0
  6906 ;;      Locals:         1       0       0       0       0
  6907 ;;      Temps:          6       0       0       0       0
  6908 ;;      Totals:         7       0       0       0       0
  6909 ;;Total ram usage:        7 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		Interrupt level 1
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function _isr
  6920  094B                     _isr:	
  6921  094B                     i1l2379:	
  6922                           
  6923                           ;nozzle.c: 1249: interrupt_done = 0;
  6924  094B  01FA               	clrf	_interrupt_done
  6925  094C                     i1l2381:	
  6926  094C  087A               	movf	_interrupt_done,w
  6927  094D  1D03               	btfss	3,2
  6928  094E  2991               	goto	i1l366
  6929                           
  6930                           ;nozzle.c: 1204: {
  6931                           ;nozzle.c: 1205: interrupt_done = 1;
  6932                           
  6933                           ;nozzle.c: 1203: while(!interrupt_done)
  6934                           
  6935                           ;nozzle.c: 1202: interrupt_done = 0;
  6936  094F  01FA               	clrf	_interrupt_done
  6937  0950  0AFA               	incf	_interrupt_done,f
  6938                           
  6939                           ;nozzle.c: 1208: if(PIR1bits.TMR1IF)
  6940  0951  1C0C               	btfss	12,0	;volatile
  6941  0952  2963               	goto	i1l2345
  6942                           
  6943                           ;nozzle.c: 1209: {
  6944                           ;nozzle.c: 1210: PIR1bits.TMR1IF = 0;
  6945  0953  100C               	bcf	12,0	;volatile
  6946                           
  6947                           ;nozzle.c: 1211: TMR1 = (-13300000 / 4 / 8 / 100);
  6948  0954  30EF               	movlw	239
  6949  0955  008F               	movwf	15	;volatile
  6950  0956  30C4               	movlw	196
  6951  0957  008E               	movwf	14	;volatile
  6952                           
  6953                           ;nozzle.c: 1212: got_tick = 1;
  6954  0958  01DE               	clrf	_got_tick
  6955  0959  0ADE               	incf	_got_tick,f
  6956                           
  6957                           ;nozzle.c: 1213: uint8_t prev_port = PORTD & ~(uint8_t)0b00111111;
  6958  095A  0808               	movf	8,w	;volatile
  6959  095B  39C0               	andlw	192
  6960  095C  00F0               	movwf	??_isr
  6961  095D  0870               	movf	??_isr,w
  6962  095E  00F6               	movwf	isr@prev_port
  6963                           
  6964                           ;nozzle.c: 1214: PORTD = prev_port | motor_master;
  6965  095F  0876               	movf	isr@prev_port,w
  6966  0960  045B               	iorwf	_motor_master,w
  6967  0961  0088               	movwf	8	;volatile
  6968                           
  6969                           ;nozzle.c: 1215: interrupt_done = 0;
  6970  0962  01FA               	clrf	_interrupt_done
  6971  0963                     i1l2345:	
  6972                           
  6973                           ;nozzle.c: 1216: }
  6974                           ;nozzle.c: 1219: if(PIR1bits.RCIF)
  6975  0963  1E8C               	btfss	12,5	;volatile
  6976  0964  296D               	goto	i1l2355
  6977                           
  6978                           ;nozzle.c: 1220: {
  6979                           ;nozzle.c: 1221: PIR1bits.RCIF = 0;
  6980  0965  128C               	bcf	12,5	;volatile
  6981                           
  6982                           ;nozzle.c: 1222: serial_in = RCREG;
  6983  0966  081A               	movf	26,w	;volatile
  6984  0967  00F0               	movwf	??_isr
  6985  0968  0870               	movf	??_isr,w
  6986  0969  00FB               	movwf	_serial_in
  6987                           
  6988                           ;nozzle.c: 1223: have_serial = 1;
  6989  096A  01FC               	clrf	_have_serial
  6990  096B  0AFC               	incf	_have_serial,f
  6991                           
  6992                           ;nozzle.c: 1224: interrupt_done = 0;
  6993  096C  01FA               	clrf	_interrupt_done
  6994  096D                     i1l2355:	
  6995                           
  6996                           ;nozzle.c: 1225: }
  6997                           ;nozzle.c: 1228: if(PIR1bits.TMR2IF)
  6998  096D  1C8C               	btfss	12,1	;volatile
  6999  096E  2975               	goto	i1l2363
  7000                           
  7001                           ;nozzle.c: 1229: {
  7002                           ;nozzle.c: 1230: PIR1bits.TMR2IF = 0;
  7003  096F  108C               	bcf	12,1	;volatile
  7004                           
  7005                           ;nozzle.c: 1231: tmr2_high++;
  7006  0970  3001               	movlw	1
  7007  0971  00F0               	movwf	??_isr
  7008  0972  0870               	movf	??_isr,w
  7009  0973  07D3               	addwf	_tmr2_high,f
  7010                           
  7011                           ;nozzle.c: 1232: interrupt_done = 0;
  7012  0974  01FA               	clrf	_interrupt_done
  7013  0975                     i1l2363:	
  7014                           
  7015                           ;nozzle.c: 1233: }
  7016                           ;nozzle.c: 1236: if(INTCONbits.INTF)
  7017  0975  1C8B               	btfss	11,1	;volatile
  7018  0976  294C               	goto	i1l2381
  7019                           
  7020                           ;nozzle.c: 1237: {
  7021                           ;nozzle.c: 1238: INTCONbits.INTF = 0;
  7022  0977  108B               	bcf	11,1	;volatile
  7023                           
  7024                           ;nozzle.c: 1240: ir_time2 = TMR2;
  7025  0978  0811               	movf	17,w	;volatile
  7026  0979  00F0               	movwf	??_isr
  7027  097A  01F1               	clrf	??_isr+1
  7028  097B  0870               	movf	??_isr,w
  7029  097C  00CF               	movwf	_ir_time2	;volatile
  7030  097D  0871               	movf	??_isr+1,w
  7031  097E  00D0               	movwf	_ir_time2+1	;volatile
  7032                           
  7033                           ;nozzle.c: 1242: TMR2 = 0;
  7034  097F  0191               	clrf	17	;volatile
  7035                           
  7036                           ;nozzle.c: 1243: PIR1bits.TMR2IF = 0;
  7037  0980  108C               	bcf	12,1	;volatile
  7038                           
  7039                           ;nozzle.c: 1246: ir_time2 |= ((uint16_t)tmr2_high) << 8;
  7040  0981  0853               	movf	_tmr2_high,w
  7041  0982  00F0               	movwf	??_isr
  7042  0983  01F1               	clrf	??_isr+1
  7043  0984  0870               	movf	??_isr,w
  7044  0985  00F1               	movwf	??_isr+1
  7045  0986  01F0               	clrf	??_isr
  7046  0987  0870               	movf	??_isr,w
  7047  0988  04CF               	iorwf	_ir_time2,f	;volatile
  7048  0989  0871               	movf	??_isr+1,w
  7049  098A  04D0               	iorwf	_ir_time2+1,f	;volatile
  7050                           
  7051                           ;nozzle.c: 1247: tmr2_high = 0;
  7052  098B  01D3               	clrf	_tmr2_high
  7053                           
  7054                           ;nozzle.c: 1248: got_ir_int = 1;
  7055  098C  3001               	movlw	1
  7056  098D  00F0               	movwf	??_isr
  7057  098E  0870               	movf	??_isr,w
  7058  098F  00D4               	movwf	_got_ir_int	;volatile
  7059  0990  294B               	goto	i1l2379
  7060  0991                     i1l366:	
  7061  0991  0875               	movf	??_isr+5,w
  7062  0992  00FF               	movwf	127
  7063  0993  0874               	movf	??_isr+4,w
  7064  0994  008A               	movwf	10
  7065  0995  0873               	movf	??_isr+3,w
  7066  0996  0084               	movwf	4
  7067  0997  0E72               	swapf	(??_isr+2)^(0+-128),w
  7068  0998  0083               	movwf	3
  7069  0999  0EFE               	swapf	126,f
  7070  099A  0E7E               	swapf	126,w
  7071  099B  0009               	retfie
  7072  099C                     __end_of_isr:	
  7073  0019                     
  7074                           	psect	intentry
  7075  0004                     __pintentry:	
  7076                           ;incstack = 0
  7077                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  7078                           
  7079  0004                     interrupt_function:	
  7080  007E                     saved_w	set	btemp
  7081  0004  00FE               	movwf	btemp
  7082  0005  0E03               	swapf	3,w
  7083  0006  00F2               	movwf	??_isr+2
  7084  0007  0804               	movf	4,w
  7085  0008  00F3               	movwf	??_isr+3
  7086  0009  080A               	movf	10,w
  7087  000A  00F4               	movwf	??_isr+4
  7088  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7089  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7090  000D  087F               	movf	btemp+1,w
  7091  000E  00F5               	movwf	??_isr+5
  7092  000F  120A  158A  294B   	ljmp	_isr
  7093                           
  7094                           	psect	functab
  7095  0051                     __pfunctab:	
  7096  0051                     __fptable:	
  7097  0051                     fptable:	
  7098  0051  00FF               	movwf	(btemp+1)& (0+127)
  7099  0052  3000               	movlw	high fptable
  7100  0053  008A               	movwf	10
  7101  0054  087F               	movf	(btemp+1)& (0+127),w
  7102  0055  0782               	addwf	2,f
  7103  0056                     fpbase:	
  7104  0056  2856               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  7105  0057                     fp__capture_adc:	
  7106  0057  120A  158A  2B98   	ljmp	_capture_adc
  7107  005A                     fp__charge_adc:	
  7108  005A  160A  118A  2F50   	ljmp	_charge_adc
  7109  005D                     fp__motor_home1:	
  7110  005D  120A  158A  2B27   	ljmp	_motor_home1
  7111  0060                     fp__motor_idle:	
  7112  0060  120A  118A  2FFF   	ljmp	_motor_idle
  7113  0063                     fp__motor_tracking:	
  7114  0063  120A  158A  2E20   	ljmp	_motor_tracking
  7115  0066                     fp__motor_home2:	
  7116  0066  120A  158A  2A4D   	ljmp	_motor_home2
  7117  0069                     fp__motor_home6:	
  7118  0069  120A  158A  28CB   	ljmp	_motor_home6
  7119  006C                     fp__motor_home5:	
  7120  006C  120A  158A  299C   	ljmp	_motor_home5
  7121  006F                     fp__motor_home4:	
  7122  006F  120A  118A  2875   	ljmp	_motor_home4
  7123  0072                     fp__motor_home3:	
  7124  0072  160A  118A  2FD4   	ljmp	_motor_home3
  7125  0075                     __end_of__fptable:	
  7126  007E                     btemp	set	126	;btemp
  7127  007E                     wtemp0	set	126


Data Sizes:
    Strings     44
    Constant    918
    Data        3
    BSS         230
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     41      69
    BANK1            80      0      60
    BANK3            96      0      75
    BANK2            96      0      64

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    memset@p	PTR unsigned char  size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    main@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    sp__memset	PTR void  size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    capture_adc@sensor	PTR struct . size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    adc_state	PTR FTN()void  size(1) Largest target is 1
		 -> capture_adc(), charge_adc(), 

    handle_ir2@code.data	PTR const int  size(2) Largest target is 142
		 -> fastrev_data(CODE[142]), fastfwd_data(CODE[142]), right_data(CODE[142]), left_data(CODE[142]), 
		 -> down_data(CODE[142]), up_data(CODE[142]), 

    handle_ir2@data	PTR const int  size(2) Largest target is 142
		 -> fastrev_data(CODE[142]), fastfwd_data(CODE[142]), right_data(CODE[142]), left_data(CODE[142]), 
		 -> down_data(CODE[142]), up_data(CODE[142]), 

    handle_ir2@code	PTR const struct . size(2) Largest target is 24
		 -> ir_codes(CODE[24]), 

    motor_home1@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home2@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home3@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home4@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home5@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_home6@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_tracking@encoder	PTR struct . size(1) Largest target is 24
		 -> sensors(BANK1[24]), 

    motor_tracking@tracking	PTR struct . size(1) Largest target is 36
		 -> tracking_state(BANK1[36]), 

    motor_state	PTR FTN()void  size(1) Largest target is 1
		 -> motor_home2(), motor_home3(), motor_home4(), motor_home5(), 
		 -> motor_home1(), motor_home6(), motor_tracking(), motor_idle(), 

    print_text@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_4(CODE[2]), STR_3(CODE[10]), STR_2(CODE[6]), STR_1(CODE[28]), 

    S37$data	PTR const int  size(2) Largest target is 142
		 -> fastrev_data(CODE[142]), fastfwd_data(CODE[142]), right_data(CODE[142]), left_data(CODE[142]), 
		 -> down_data(CODE[142]), up_data(CODE[142]), 

    ir_codes.data	PTR const int  size(2) Largest target is 142
		 -> fastrev_data(CODE[142]), fastfwd_data(CODE[142]), right_data(CODE[142]), left_data(CODE[142]), 
		 -> down_data(CODE[142]), up_data(CODE[142]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_handle_ir
    _print_text->_print_byte
    _print_number_signed->_print_number_nospace
    _print_number->_print_number_nospace
    _print_number_nospace->___lwmod
    ___lwmod->___lwdiv
    _motor_tracking->___bmul
    _motor_home6->___bmul
    _motor_home5->___bmul
    _motor_home4->___bmul
    _motor_home3->___bmul
    _motor_home2->___bmul
    _motor_home1->___bmul
    _handle_ir->_handle_ir2
    _handle_ir2->_handle_ir_code
    _handle_ir_code->_handle_nozzle_step
    _handle_nozzle_step->___bmul
    _flush_uart->_handle_uart
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   14684
                                             29 BANK0     12    12      0
                             ___bmul
                            ___lldiv
                             ___lmul
                        _capture_adc *
                         _charge_adc *
                         _flush_uart
                          _handle_ir
                        _handle_uart
                             _memset
                        _motor_home1 *
                        _motor_home2 *
                        _motor_home3 *
                        _motor_home4 *
                        _motor_home5 *
                        _motor_home6 *
                         _motor_idle *
                     _motor_tracking *
                       _print_number
                _print_number_signed
                         _print_text
 ---------------------------------------------------------------------------------
 (1) _print_text                                           2     0      2     395
                                              2 BANK0      2     0      2
                         _print_byte
 ---------------------------------------------------------------------------------
 (1) _print_number_signed                                  4     2      2    2223
                                             16 BANK0      4     2      2
                             ___bmul (ARG)
                         _print_byte
               _print_number_nospace
 ---------------------------------------------------------------------------------
 (1) _print_number                                         2     0      2    2007
                                             16 BANK0      2     0      2
                         _print_byte
               _print_number_nospace
 ---------------------------------------------------------------------------------
 (2) _print_number_nospace                                 2     0      2    1877
                                             14 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
                         _print_byte
 ---------------------------------------------------------------------------------
 (2) _print_byte                                           2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     671
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     674
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _motor_tracking                                       4     4      0    1156
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_idle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_home6                                          4     4      0     628
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home5                                          5     5      0     690
                                              4 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home4                                          8     8      0     857
                                              4 BANK0      8     8      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home3                                          3     3      0     656
                                              4 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home2                                          7     7      0     823
                                              4 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _motor_home1                                          7     7      0     823
                                              4 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     254
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _handle_ir                                            5     5      0    2061
                                             24 BANK0      5     5      0
                         _handle_ir2
                     _handle_ir_code
 ---------------------------------------------------------------------------------
 (2) _handle_ir2                                          15    15      0    1278
                                              9 BANK0     15    15      0
                     _handle_ir_code
 ---------------------------------------------------------------------------------
 (2) _handle_ir_code                                       1     1      0     650
                                              8 BANK0      1     1      0
                         _arm_motors
                      _disarm_motors
                 _handle_nozzle_step
 ---------------------------------------------------------------------------------
 (3) _handle_nozzle_step                                   4     4      0     650
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     560
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _disarm_motors                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _arm_motors                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _flush_uart                                           0     0      0       0
                        _handle_uart
 ---------------------------------------------------------------------------------
 (1) _handle_uart                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _charge_adc                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _capture_adc                                          3     3      0     243
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     348
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     418
                                             13 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  7     7      0      23
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _capture_adc *
   _charge_adc *
   _flush_uart *
     _handle_uart
   _handle_ir *
     _handle_ir2
       _handle_ir_code
         _arm_motors
         _disarm_motors
         _handle_nozzle_step
           ___bmul
     _handle_ir_code
       _arm_motors
       _disarm_motors
       _handle_nozzle_step
         ___bmul
   _handle_uart *
   _memset *
   _motor_home1 *
     ___bmul
   _motor_home2 *
     ___bmul
   _motor_home3 *
     ___bmul
   _motor_home4 *
     ___bmul
   _motor_home5 *
     ___bmul
   _motor_home6 *
     ___bmul
   _motor_idle *
   _motor_tracking *
     ___bmul
   _print_number *
     _print_byte
     _print_number_nospace
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _print_byte
   _print_number_signed *
     ___bmul (ARG)
     _print_byte (ARG)
     _print_number_nospace (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _print_byte
   _print_text *
     _print_byte

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4B       9       78.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      11       66.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     119      12        0.0%
ABS                  0      0     119       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Sep 19 05:25:04 2020

                            pc 0002                 ___bmul@product 0022                    __CFG_CP$OFF 0000  
                           fsr 0004                    _nozzle_step 0061                            l143 0E09  
                          l228 08EB                            l327 0AE9                            l280 0D49  
                          l281 0D54                            l382 07A9                            l279 0D3C  
                          l375 0762                            l299 0CAD                            _PR2 0092  
                 __CFG_CPD$OFF 0000                            _isr 094B                            fsr0 0004  
                          indf 0000               ??_motor_tracking 0024                   __CFG_FOSC$HS 0000  
                 __CFG_LVP$OFF 0000                           l2001 0E9F                           l2011 0EF3  
                         l2007 0ECC                           l2201 0BED                           l3003 076C  
                         l2205 0BF0                           l3013 077C                           l2231 0914  
                         l2207 0C04                           l3023 07A0                           l2251 0A0F  
                         l2235 092A                           l2227 17BD                           l3019 0798  
                         l3035 07C1                           l2263 0A44                           l2191 0BE3  
                         l2183 0BCF                           l1711 1776                           l2249 09FF  
                         l2193 0BE5                           l2185 0BD9                           l2177 0BC1  
                         l2259 0A37                           l2195 0BE7                           l1707 1770  
                         l2611 0C81                           l2603 0C5F                           l2197 0BE9  
                         l2613 0C8F                           l2605 0C6D                           l2621 0C9A  
                         l2199 0BEB                           l2631 0DAD                           l2617 0C96  
                         l2641 0EFF                           l2713 07EF                           l2705 0803  
                         l2811 0B60                           l1835 08BB                           l1827 0897  
                         l1851 0861                           l2635 0DDB                           l2627 0D7F  
                         l1749 0D1A                           l2581 0C1A                           l2661 0F9A  
                         l2733 08F8                           l1829 08A5                           l1853 086F  
                         l1861 0888                           l2719 1746                           l2671 0FD0  
                         l2655 0F6E                           l1839 08C6                           l2673 0FD4  
                         l2817 0B82                           l2729 08F2                           l2761 00AE  
                         l1857 087D                           l2595 0C3D                           l2587 0C23  
                         l2579 0C0C                           l2683 0FE6                           l2675 0FD8  
                         l2739 08FE                           l2597 0C4B                           l2589 0C31  
                         l2687 0FF0                           l2679 0FDF                           l2839 0ADC  
                         l2791 0A86                           l2865 0B18                           l2849 0AEE  
                         l2859 0B04                           l1995 0E75                           l2869 0B23  
                         l2981 05E9                           ?_isr 0070                           STR_1 04A8  
                 __CFG_WDTE$ON 0000                           STR_2 04CE                           STR_3 04C4  
                         STR_4 04C2                           u2025 0E38                           u3205 09B8  
                         u3055 0F09                           u2505 0934                           u3225 0091  
                         u3305 0A9F                           u1705 08A6                           u3315 0B43  
                         u1715 08B2                           u3085 0F8F                           u3245 00C7  
                         u1725 08BC                           u3430 0B15                           u2535 0A03  
                         u3095 0FB5                           u3335 0B79                           u3255 00D5  
                         u3265 00E3                           u2555 0A11                           u2395 0B9F  
                         u1755 0864                           u2565 0A26                           u3285 0A69  
                         u1685 089A                           u2910 0C48                           u2575 0A38  
                         u2495 092C                           u1775 0875                           u3560 07BE  
                         u1785 087E                           u2850 0C17                           u2940 0C6A  
                         u2880 0C2E                           u2970 0C8C                           _TMR0 0001  
                         _TMR1 000E                           _TMR2 0011                   __CFG_WRT$OFF 0000  
   motor_home6@current_encoder 0026                           _main 04D4                           _tick 005D  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 0012  
            ___bmul@multiplier 0023   __size_of_print_number_signed 0028                          ??_isr 0070  
              ??_disarm_motors 0020                          ?_main 0070                __end_of___lldiv 0A4D  
                fp__motor_idle 0060                          _T1CON 0010                          _T2CON 0012  
              __end_of___lwdiv 08CB                __end_of___lwmod 088D              handle_ir2@got_one 0031  
                        i1l366 0991                          _RCREG 001A                          _RCSTA 0018  
                        _SPBRG 0099                          _PORTD 0008                          _TRISD 0088  
                        _TXREG 0019                          _TXSTA 0098            ___lmul@multiplicand 0024  
                        _armed 0060                          main@i 0048                          fpbase 0056  
                        pclath 000A                   main@tracking 0047                __end_of_up_data 0490  
                        status 0003                          wtemp0 007E        motor_home2@sensor_value 002A  
              __initialization 0015                   __end_of_main 07D7  __size_of_print_number_nospace 00C0  
         __size_of_capture_adc 0073                         ??_main 003D                         _ADCON0 001F  
                       _ADCON1 009F           __size_of_handle_uart 001A                         _ADRESH 001E  
               fp__motor_home1 005D                 fp__motor_home2 0066                 fp__motor_home3 0072  
               fp__motor_home4 006F                 fp__motor_home5 006C                 fp__motor_home6 0069  
                       i1l2345 0963                         i1l2363 0975                         i1l2355 096D  
                       i1l2381 094C                         i1l2379 094B               __end_of__fptable 0075  
               __CFG_PWRTE$OFF 0000           __end_of_fastfwd_data 0258                         ___bmul 176C  
                       ___lmul 090A                      ??___lldiv 0035                      ??___lwdiv 0024  
             __end_of_ir_codes 04A8                      ??___lwmod 002C                         _memset 17B6  
                 ?_motor_home1 0070                   ?_motor_home2 0070                   ?_motor_home3 0070  
                 ?_motor_home4 0070                   ?_motor_home5 0070                   ?_motor_home6 0070  
         __end_of_fastrev_data 01CA                         fptable 0051                         fptotal 0019  
              _radial_position 0059                _motor_home1$474 0027                _motor_home2$457 0027  
              _motor_home4$425 0027                         saved_w 007E        __end_of__initialization 004D  
           _handle_nozzle_step 0CAE            ___bmul@multiplicand 0020                 __pcstackCOMMON 0070  
          ?_handle_nozzle_step 0070                   __pidataBANK0 0800                handle_ir2@error 002F  
  motor_home1@current_boundary 0026             __size_of_handle_ir 0070                 _OPTION_REGbits 0081  
         ??_handle_nozzle_step 0024            _print_number_signed 07D7                     __pbssBANK0 0049  
                   __pbssBANK1 00A0                     __pbssBANK2 0110                     __pbssBANK3 0190  
                _current_motor 005C                     _charge_adc 1750                     __pmaintext 04D4  
         ?_print_number_signed 0030                        ?___bmul 0020                        ?___lmul 0020  
                   __pintentry 0004                 _ir_code_failed 0049                     _handle_ir2 0EF9  
                      ?_memset 0020                 ___lmul@product 0029                     _arm_motors 0828  
      __size_of_handle_ir_code 00A3         handle_nozzle_step@diff 0026                     __stringtab 0100  
                   _first_edge 0064              __end_of_handle_ir 0B27          ??_print_number_signed 0032  
      motor_home4@sensor_value 002B                __size_of___bmul 0013                __size_of___lmul 0041  
                   _flush_uart 1746                     _got_ir_int 0054                        ___lldiv 09ED  
                      ___lwdiv 088D                        ___lwmod 0859              __end_of_hex_table 013C  
                 isr@prev_port 0076                __size_of_memset 001E              __end_of_left_data 0374  
        __end_of_disarm_motors 0100              __end_of_down_data 0402                        __ptext1 0803  
                      __ptext2 07D7                        __ptext3 175C                        __ptext4 0D60  
                      __ptext5 1799                        __ptext6 0859                        __ptext7 088D  
                      __ptext8 0A4D                        __ptext9 17D4                        _have_ir 0057  
                      _ir_code 0056                        _ir_time 0051                   __size_of_isr 0051  
         __size_of_motor_home1 0071           __size_of_motor_home2 006A           __size_of_motor_home3 002C  
         __size_of_motor_home4 007F           __size_of_motor_home5 0051           __size_of_motor_home6 003F  
 __end_of_print_number_nospace 0E20                        _sensors 00C4                        _up_data 0402  
                 _fastfwd_data 01CA    motor_home2@current_boundary 0026                        clrloop0 173F  
         end_of_initialization 004D            main@encoder0_values 0112                    ?_charge_adc 0070  
                      memset@c 0020                        memset@n 0022                        memset@p 0026  
      __size_of_motor_tracking 00D9                   _fastrev_data 013C              fp__motor_tracking 0063  
                   _right_data 0258                ___lldiv@divisor 002D                ___lldiv@counter 003A  
                ??_capture_adc 0020                     _motor_idle 07FF                   __pstringtext 0100  
                   handle_ir@i 003C                    ?_handle_ir2 0070                      _PORTDbits 0008  
    print_number_signed@number 0030                     _print_byte 1799                    ?_arm_motors 0070  
                   _print_text 0803                  ??_handle_uart 0020                      _TRISDbits 0088  
                ?_print_number 0030             handle_ir@test_time 003A                    print_byte@c 0021  
                  print_text@s 0022                    ?_flush_uart 0070                 __end_of___bmul 177F  
               __end_of___lmul 094B               handle_ir2@got_it 0032            __end_of_capture_adc 0C0B  
               __end_of_memset 17D4            __size_of_charge_adc 000C            start_initialization 0015  
               _handle_ir_code 0C0B                 ??_print_number 0032                    __end_of_isr 099C  
          __end_of_handle_uart 1799            __size_of_handle_ir2 0107            __size_of_arm_motors 0031  
                     ??___bmul 0021                       ??___lmul 0028           _print_number_nospace 0D60  
                  ?_motor_idle 0070                    __pdataBANK0 0062                       ??_memset 0024  
       __end_of_handle_ir_code 0CAE                    ?_print_byte 0070                    ?_print_text 0022  
                  __pbssCOMMON 0077                      ___latbits 0002                  __pcstackBANK0 0020  
               handle_ir2@data 002D                 handle_ir2@code 0035           handle_ir2@data_value 0033  
  __size_of_handle_nozzle_step 00B2              __size_of__fptable 0024                      _adc_state 0062  
          __size_of_flush_uart 000A         motor_tracking@tracking 0027                 _motor_tracking 0E20  
             ___lwdiv@dividend 0022                    _capture_adc 0B98                      __pfunctab 0051  
        ?_print_number_nospace 002E                      _handle_ir 0AB7                       ?___lldiv 002D  
                     ?___lwdiv 0020                       ?___lwmod 0028                ?_handle_ir_code 0070  
                    _hex_table 012C                      _left_data 02E6                    _handle_uart 177F  
                    _down_data 0374                      _ir_offset 0058               ___lwdiv@quotient 0025  
       __end_of_motor_tracking 0EF9                 _uart_position1 0078                 _uart_position2 0077  
          __size_of_motor_idle 0001    __end_of_print_number_signed 07FF                   ??_charge_adc 0020  
            interrupt_function 0004                      clear_ram0 173E                      _tmr2_high 0053  
                     _PIE1bits 008C     handle_nozzle_step@diff_488 0027                    _have_serial 007C  
          __size_of_print_byte 001D     print_number_nospace@number 002E            __size_of_print_text 0025  
                     _PIR1bits 000C                      _serial_in 007B           __end_of_print_number 176C  
                   ?_handle_ir 0070                      _uart_size 0079                   ??_handle_ir2 0029  
                  _led_counter 005F                  ??_motor_home1 0024                  ??_motor_home2 0024  
                ??_motor_home3 0024                  ??_motor_home4 0024                  ??_motor_home5 0024  
                ??_motor_home6 0024                     _ADCON0bits 001F                    __stringbase 0112  
                 ??_arm_motors 0020             __end_of_charge_adc 175C    motor_home4@current_boundary 0026  
            ___lmul@multiplier 0020                ?_motor_tracking 0070             __end_of_handle_ir2 1000  
       __size_of_disarm_motors 000C         ??_print_number_nospace 0030             __end_of_arm_motors 0859  
                 ??_flush_uart 0021          motor_tracking@encoder 0026                   _repeat_delay 0055  
             __size_of___lldiv 0060               __size_of___lwdiv 003E               __size_of___lwmod 0034  
           __end_of__stringtab 0112                       __fptable 0051                    _current_adc 005A  
              ___lwdiv@divisor 0020            __end_of_motor_home1 0B98            __end_of_motor_home2 0AB7  
          __end_of_motor_home3 1800            __end_of_motor_home4 00F4            __end_of_motor_home5 09ED  
          __end_of_motor_home6 090A                ___lwdiv@counter 0027                       __ptext10 0075  
                     __ptext11 099C                       __ptext20 0CAE                       __ptext12 08CB  
                     __ptext21 176C                       __ptext13 0B27                       __ptext30 094B  
                     __ptext22 00F4                       __ptext14 07FF                       __ptext23 0828  
                     __ptext15 0E20                       __ptext24 1746                       __ptext16 17B6  
                     __ptext25 177F                       __ptext17 0AB7                       __ptext26 0B98  
                     __ptext18 0EF9                       __ptext27 1750                       __ptext19 0C0B  
                     __ptext28 090A                       __ptext29 09ED             __end_of_flush_uart 1750  
                     _ir_codes 0490               _step_to_encoders 0190                       _ir_time2 004F  
                     _got_tick 005E                  __size_of_main 0303    __end_ofmain@encoder0_values 012C  
                  ??_handle_ir 0038                   ??_motor_idle 0020     motor_home4@current_encoder 002A  
                _disarm_motors 00F4                   ??_print_byte 0020                   ??_print_text 0024  
               fp__capture_adc 0057                     _INTCONbits 000B             __end_of_right_data 02E6  
                     memset@p1 0025              capture_adc@sensor 0022                   _motor_master 005B  
                     intlevel1 0051             print_number@number 0030             __end_of_motor_idle 0800  
             ___lwmod@dividend 002A                 _tracking_state 00A0               ___lldiv@dividend 0031  
        __size_of_print_number 0010                      stringcode 010A                  fp__charge_adc 005A  
           __end_of_print_byte 17B6             __end_of_print_text 0828                   ?_capture_adc 0070  
          motor_home1@tracking 0029               ??_handle_ir_code 0028            motor_home2@tracking 0029  
               ?_disarm_motors 0070                    _motor_home1 0B27                    _motor_home2 0A4D  
                  _motor_home3 17D4                    _motor_home4 0075                    _motor_home5 099C  
                  _motor_home6 08CB                    handle_ir2@i 0037                    _uart_buffer 0110  
                  _motor_state 0063            motor_home3@tracking 0026               ___lldiv@quotient 0036  
   __end_of_handle_nozzle_step 0D60                ___lwmod@divisor 0028                 _interrupt_done 007A  
                 ?_handle_uart 0070                ___lwmod@counter 002D                       stringtab 0100  
          motor_home4@tracking 0029     motor_home5@current_encoder 0027                   _print_number 175C  
          motor_home5@tracking 0028            motor_home6@tracking 0027        motor_home1@sensor_value 002A  
